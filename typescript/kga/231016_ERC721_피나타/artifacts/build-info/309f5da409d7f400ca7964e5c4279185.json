{
	"id": "309f5da409d7f400ca7964e5c4279185",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"myNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n// 직접 폴더 경로 하드코딩\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n\r\ncontract MyNFT is ERC721 {\r\n    constructor( string memory _name, string memory _symbol ) ERC721(_name, _symbol) {\r\n\r\n    }\r\n\r\n    // tokenId 안에, ca 주소 뿐 아니라, hash 값 있게 하기  \r\n        // mapping(uint256 tokenId => address) private _owners;\r\n        // mapping(  tokenID =>  CA 주소? ) public owner\r\n        // 적을 때, 조금 변형해서, 적어야 해? \r\n        // 아니면, 그대로 적어야 해? \r\n        // 아. 그러면, _tokenId 안에, ca 주소랑, hash 값을 같이 넣어두면 되겠네 \r\n\r\n\r\n    // 특정 tokenId 가 가질 모든 메타 데이터의 저장소 \r\n    struct TokenMetaData {\r\n        string tokenURI;\r\n        uint256 ranking;\r\n    }\r\n\r\n    // 특정 TokenId 와 MetaData를 하나의 변수로 Wrapper \r\n    struct TokenIdMetaDataWrapper {\r\n    uint256 tokenId;\r\n    TokenMetaData metaData;\r\n    }\r\n\r\n\r\n    // tokenId 를 넣으면 => TokenMetaData 가 나오는 _tokenMetaData 매핑 객체 \r\n    mapping(uint256 => TokenMetaData) private _tokenMetaData;\r\n\r\n            // 예전 코드 \r\n            // // 메타데이터 내용 확정하기 \r\n            //     // tokenId 랑, URI 를 mapping 할  _tokenURIs\r\n            //     mapping(uint256 tokenId => string tokenURI) private _tokenURIs;\r\n            //     /*   _tokenMetaData = {\r\n            //         tokenId = {\r\n            //             tokenURI : \"해시값\", \r\n            //             ranking : \"숫자값\"\r\n            //         }\r\n            //     }\r\n            //     */\r\n\r\n            // 해당 토큰의 ranking 담아둘 저장소\r\n            // mapping(uint256 tokenId => uint256 ranking) private _tokenRanking;\r\n                /* _tokenRanking = {\r\n                    tokenId : ranking\r\n                }\r\n                */\r\n\r\n        // tokenId 가 될 totalSupply\r\n        uint256 totalSupply = 0;\r\n\r\n    // '유저의 주소' 를 넣으면 -> tokenId 를 알 수 있고 -> 메타데이터(_tokenURIs) 알 수 있게 하기 \r\n        mapping(address => uint256[]) private addressIDs;\r\n            /* addressIDs = {\r\n                '0x123' : [7, 10, 15]\r\n            } */\r\n\r\n    // 1 ~ 10 랜덤 난수 생성 | pure 는 '상태변수를 읽거나, 변경하지 않음!' 이 특징 ⭐⭐ \r\n    function makeRandom(string memory seed) public pure returns (uint256) {\r\n        return (uint256(keccak256(abi.encodePacked(seed))) % 10 ) + 1; // 1에서 10까지의 숫자\r\n            // keccak256 : 특정 값을 넣으면 -> 해시로 변환함 \r\n            // abi.encodePacked(seed) : seed 매개변수를 잘게 쪼갠다. 그래서 한번에 전달한다.  \r\n    }\r\n\r\n    // tokenId 랑 ranking 매핑 | mapping 시키는 곳은 상태변수를 변경하는 거니까, pure 가 될 수 없음. | so, pure 는 난수 생성에서 \r\n    // function setRanking(uint256 tokenId , uint256 ranking) public {\r\n    //     _tokenRanking[tokenId] = ranking;\r\n    // }\r\n\r\n\r\n\r\n    // 민팅 | 'ERC721 토큰' 과 '구매자 msg.sender' 를 연결\r\n        function minting(string memory _tokenURI , string memory seed) public returns (string memory) {\r\n            // _tokenURI 를 seed 로 해서 랜덤숫자 만들기\r\n            uint256 randomRanking = makeRandom(seed);\r\n\r\n            // 해당 tokenId 에 1) metadata 주소의 hash(_tokenURI) 2) ranking 할당\r\n            _tokenMetaData[totalSupply] = TokenMetaData({\r\n                tokenURI : _tokenURI,       // 토큰json 에 접근할 수 있는 hash 저장\r\n                ranking : randomRanking     // 랜덤 숫자를 ranking 으로 저장\r\n            }); \r\n                // [코드 스킬] tokenId 자리에 totalSupply 가 들어감 | tokenId 를 정의하고, 곧이 곧대로 그걸 활용하지 않아도 된다는 말 ⭐⭐⭐ \r\n\r\n            _mint(msg.sender, totalSupply);  // 이 순간 tokenId 지정 ⭐⭐\r\n\r\n            addressIDs[msg.sender].push(totalSupply); // 해당 주소의 토큰 목록에 tokeId(totalSupply) 를 추가 ⭐⭐ \r\n\r\n            totalSupply += 1;   \r\n\r\n            return _tokenMetaData[totalSupply -1].tokenURI;   // 이걸 하면, 방금만든걸, 바로 볼 수 있음 ✅\r\n        }\r\n\r\n\r\n\r\n\r\n    // tokenId 넣으면 -> 해당 토큰의 URI 얻기  \r\n    function getTokenURI(uint256 tokenId) public view returns (string memory) {\r\n        return _tokenMetaData[tokenId].tokenURI;\r\n    }\r\n\r\n    // 여기에 tokenId 넣으면 -> ranking 을 반환하고 싶어\r\n    function getTokenRanking(uint256 tokenId) public view returns (uint256 ranking){\r\n        return _tokenMetaData[tokenId].ranking;\r\n    }\r\n    \r\n    // owner 의 주소(address) 를 넣으면 -> '메타데이터 주소 배열' 을 반환\r\n    function getOwnerURIs(address owner) public view returns (string[] memory) {\r\n        // 특정 owner(지갑주소) 가 갖고 있는 tokenId들을 '배열' 에 담기\r\n        uint256[] memory tokenIds = addressIDs[owner];\r\n            // tokenIds = [7, 10, 15]\r\n            // [해석] tokenIds 배열이 생김 | 그 안에 있는 요소는 숫자 | 해당 숫자는 memory 에 저장 \r\n\r\n        // tokenIds의 개수만큼 tokenURIs 배열의 원소 개수 만들기 | #📛📛 동적 배열을 메모리에 할당 \r\n        string[] memory ownerURIs = new string[](tokenIds.length);\r\n            // ownerURIs = [ null, null, null ]\r\n            // [해석] tokenURIs 이름의 배열 변수 선언 (그 안에 있는 요소는, 얼마나 길어질지 모르는 string 이니까 memory 에 저장)\r\n            // [해석] 'tokenURIs 배열' 의 '길이(원소개수)'는, 'tokenIds.length' 만큼 생김 \r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            ownerURIs[i] = _tokenMetaData[tokenIds[i]].tokenURI;\r\n            /* \r\n            ownerURIs : [ 7번 id 의 URI, 10번 id 의 URI, 15번 id 의 URI]\r\n                _tokenURIs = { 1 : '0x123주소' ... } \r\n                _tokenURIs : 토큰을 넣으면 -> URIs 값이 나오는 객체\r\n                _tokenURIs[tokenIds[i]] : 'tokenId 7'을 넣으면 -> _tokenURIs 매핑 객체 안의 저장소를 거쳐서 -> URI 를 가져옴\r\n            */\r\n        }\r\n        return ownerURIs;        \r\n    }\r\n\r\n    // 주어진 owner의 tokenId 배열에 대한 모든 _tokenMetaData 반환\r\n    function getOwnerTokenMetaData(address owner) public view returns (TokenIdMetaDataWrapper[] memory) {\r\n        uint256[] memory tokenIds = addressIDs[owner]; // 해당 owner의 모든 tokenId 가져오기\r\n            // tokenIds = [7, 10, 15]   \r\n\r\n        // 동적 배열을 메모리에 할당하기 위해 TokenMetaData의 배열 생성\r\n        TokenIdMetaDataWrapper[] memory ownerMetaData = new TokenIdMetaDataWrapper[](tokenIds.length);\r\n            // tokenIds 의 개수만큼 ownerMetaData 의 배열 안에, TokenIdMetaDataWrapper 타입으로, 요소를 만듦 \r\n                /* TokenIdMetaDataWrapper = [\r\n                    {\r\n                        tokenId(ex 7) = {\r\n                            \"tokenURI\" : \"해시값\", \r\n                            \"ranking\" : 1, \r\n                        }\r\n                    }, \r\n                    { } , { }\r\n                ]\r\n                */\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            ownerMetaData[i] = TokenIdMetaDataWrapper({\r\n                tokenId : tokenIds[i], \r\n                metaData : _tokenMetaData[tokenIds[i]]\r\n            });\r\n        }\r\n            /*   _tokenMetaData = {\r\n                    tokenId = {\r\n                        tokenURI : \"해시값\", \r\n                        ranking : \"숫자값\"\r\n                    }\r\n                }\r\n                */\r\n\r\n        return ownerMetaData;\r\n        /* ownerMetaData = [\r\n            {\r\n                tokenId(ex 7) = {\r\n                    \"tokenURI\" : \"해시값\", \r\n                    \"ranking\" : 1, \r\n                }\r\n            }, \r\n            { } , { }\r\n        ]\r\n        */\r\n    }\r\n\r\n\r\n\r\n        // url 값을 읽어서 - nft 내용을 띄워준다. \r\n            // 내용이 이미 있는 \r\n            // tokenURI 에 있는 함수 내용을 '수정(덮어쓰기)' 한 것 ⭐⭐⭐⭐⭐ \r\n        function tokenURI( uint256 _tokenId) public view override returns(string memory){\r\n            // return _tokenURIs[_tokenId];     \r\n            return _tokenMetaData[_tokenId].tokenURI;     // 여기에서는 mint 함수에서 정한 tokenId 를 사용 ⭐⭐ \r\n                // [원래 하드코딩으로 할 때 버전] json 을 피나타에 올려서 -> 해시 값을 여기에 넣어야 함 ex) \"QmVWKyvPRDTteewR2A4KDeXhBUsDo1HJhUCXksTEJXFHik\"\r\n        }\r\n\r\n        function _baseURI() internal view override returns(string memory) {\r\n            return \"https://ipfs.io/ipfs/\";  // 베이스 url 값을 따로 지정 \r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // nft 관련 메서드는 여기에 ⭐⭐⭐ 에 작성\r\n    // 여기에서 판매 관련 적고 \r\n    \r\n    // [위임 개념] ⭐⭐⭐⭐⭐ OPENSEA 를 보면, ERC721 에 보면 SETapporovalforall 로 권한을 위임 to 오픈씨 -> 그 다음에 오픈씨가 판매 가능 \r\n    // SO, 여기에서 위임된 내용을 갖고 있음. 왜냐면, ERC721 을 상속했으니까, \r\n\r\n    // 이걸 실행시키는 곳은 판매 컨트랙트! saleNFT!\r\n    // function setAppAll(address owner, address operator, bool approved) public {\r\n    //     _setApprovalForAll(owner, operator, approved);  // erc721 안에 있는 함수 임 \r\n    //     // 이걸 실행하면? \r\n    //         // 매핑 객체에, 위임받은 사람, 위임 사람, 안에 넣는 것 \r\n    //         // 매핑의 키에 매핑이 잇는데, 그 안에 주소랑 true, false  수정 \r\n    //         // 그 안에 있는 걸 비교 하는 것. \r\n    //         // 값 변경에 대한 함수 \r\n    //         // 매핑 안에 있는 매핑 객체를 수정하는 함수 \r\n    //     // 판매 컨트랙트로 판매 등록을 할 수 있게 \r\n\r\n    // }\r\n\r\n    // nft 소유 권한에 대한 내용 "
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name | 토큰 이름 \n    string private _name;\n\n    // Token symbol | 토큰 단위\n    string private _symbol;\n\n    // 토큰 권한 소유자 \n    /* \n        - ERC20 의 경우 : '개수' 가 중요\n        {\n            \"ox123123123\" : 100000개\n        }\n\n        - ERC721 의 경우 : '누가 갖는지, 소유권' 이 중요 | so, 토큰을 조회하면, 누가 갖는지 확인이 가능 \n        {\n            1번 토큰 : \"0x123124124\" (해당 주소가 갖고 있다), \n            2번 토큰 : \"0x123124124\" (해당 주소가 갖고 있다), \n            3번 토큰 : \"0x123124124\" (해당 주소가 갖고 있다), \n        }\n\n    */\n\n    // '지갑이 소유한 NFT 가 몇개 있는지' 내용을 담을 mapping 객체 \n    // 0x1231254 이 지갑이 소유하고 있는 NFT 가 몇개 있는지! \n    mapping(uint256 tokenId => address) private _owners;\n\n    // 지갑이 위임 받은 토큰의 소유권을 확인할 수 있는 객체\n        /*\n            1번 토큰 : \"0x123124124\" (1번은 111 한테 있는데, 1번에 대해서 위임 받았다. | 소유권을 따로 있는 것 임), \n        */\n    mapping(address owner => uint256) private _balances;\n\n    // 지갑이 토큰의 권한을 받은 내용이 승인되었는지 여부 | TRUE, FALSE 로 나옴 \n    /*\n        {\n            \"1번 지갑\" : {\n                \"2번 지갑\" : true | 1번 지갑이, 2번 지갑에게, 소유권 이전 했다, 라는 것\n            }, \n        }\n        [소유자 주소][위임 받은 주소]\n    */\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n\n    // 인터페이스 내용을 확인 | ERC721로, 표준을 맞춰서, NFT 를 발행했는지 검증 | 반환값이 bool 값임. | 발행된게 맞는지를 검증\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n\n    // 지갑의 주소를 가지고, NFT 몇 개 발행했는지 조회하는 함수 | 이것들은 막 뜯어보면서 작업\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    \n\n    // 토큰의 아이디를 매개변수로 받아서, 토큰의 아이디로 매핑되는 주소를 확인해서, 토큰의 소유자가 누구인지 반환하는 함수\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n\n    // NFT 의 이름을 반환\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n\n    // 예 \n    // ipfs 에 업로드한 파일의 주소(해시값)\n    // const imgArr =[\"첫번째 해시값\" , \"두번째 해시값\"]\n    // https://copper-wrong-haddock-919.mypinata.cloud/ipfs/폴더명/imgArr[token]\n    // imgArr[token] ==\n\n    // NFT 는 고유값 갖고 있는 토큰 ⭐⭐⭐⭐⭐⭐ \n    // 내용 자체는 대체 불가능하지 않음 ⭐⭐⭐⭐⭐⭐ | \n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n\n    //  어떤 내용의 객체를 보여주는지 확인할 때, 디폴트 경로가 뭔지를 지정해놓고, baseURI 함수로 호출해서, 디폴트 경로 넣어주고, \n    // ID 넣어서, 어떤걸 보여줄지\n    // 예를 들어서, 이렇게 경로가 들어옴 | 여기 까지가 IPFS 의 폴더 경로 | 토큰 ID 로 호출하면 \n    // 업로드한 IFPS 파일의 주소(해시값) 을 '상태변수' 에 담아놓으면 \n        // EX) const imgArr = [\"첫번째 해시값\" , \"두 번째 해시값\"]\n    // http://nft01/imgArr[token]\n        // 오픈씨에 token 아이디에 맞는 객체를 가져와서, 뿌려준다. ⭐⭐⭐⭐⭐⭐⭐⭐⭐⭐ \n        // '토큰이 갖는 고유값'이 중요하다. | 내용이 대체 불가능한게 아님  ⭐⭐⭐⭐⭐\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"myNFT.sol": {
				"MyNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getOwnerTokenMetaData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "tokenURI",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "ranking",
													"type": "uint256"
												}
											],
											"internalType": "struct MyNFT.TokenMetaData",
											"name": "metaData",
											"type": "tuple"
										}
									],
									"internalType": "struct MyNFT.TokenIdMetaDataWrapper[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getOwnerURIs",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenRanking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ranking",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "seed",
									"type": "string"
								}
							],
							"name": "makeRandom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "seed",
									"type": "string"
								}
							],
							"name": "minting",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"myNFT.sol\":175:8956  contract MyNFT is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"myNFT.sol\":2028:2029  0 */\n  0x00\n    /* \"myNFT.sol\":2006:2029  uint256 totalSupply = 0 */\n  0x07\n  sstore\n    /* \"myNFT.sol\":207:298  constructor( string memory _name, string memory _symbol ) ERC721(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"myNFT.sol\":272:277  _name */\n  dup2\n    /* \"myNFT.sol\":279:286  _symbol */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2788:2793  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2785  _name */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2793  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2813:2820  symbol_ */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2810  _symbol */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2820  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2827  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"myNFT.sol\":207:298  constructor( string memory _name, string memory _symbol ) ERC721(_name, _symbol) {... */\n  pop\n  pop\n    /* \"myNFT.sol\":175:8956  contract MyNFT is ERC721 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"myNFT.sol\":175:8956  contract MyNFT is ERC721 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"myNFT.sol\":175:8956  contract MyNFT is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd15a76d2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x838e4537\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8a55a50e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x0a48a1ac\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x0a48a1ac\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3bb3a24d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5f0cac76\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3063:3363  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4208:4297  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6521:6675  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6347:6460  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"myNFT.sol\":6425:8093  function getOwnerTokenMetaData(address owner) public view returns (TokenIdMetaDataWrapper[] memory) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7167:7745  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"myNFT.sol\":4395:4527  function getTokenURI(uint256 tokenId) public view returns (string memory) {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7811:7943  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"myNFT.sol\":4848:6336  function getOwnerURIs(address owner) public view returns (string[] memory) {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3995:4113  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3551:3759  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"myNFT.sol\":2428:2800  function makeRandom(string memory seed) public pure returns (uint256) {... */\n    tag_14:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"myNFT.sol\":3180:4322  function minting(string memory _tokenURI , string memory seed) public returns (string memory) {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4361:4454  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6742:6886  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8009:8217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"myNFT.sol\":8315:8776  function tokenURI( uint256 _tokenId) public view override returns(string memory){... */\n    tag_19:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"myNFT.sol\":4606:4742  function getTokenRanking(uint256 tokenId) public view returns (uint256 ranking){... */\n    tag_20:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6952:7105  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3063:3363  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3165:3169  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3215:3240  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3240  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3211  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3240  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3304  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3271:3304  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3256:3304  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3256:3267  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3256:3304  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3304  interfaceId == type(IERC721).interfaceId ||... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3356  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_112\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3320:3356  super.supportsInterface(interfaceId) */\n      tag_113\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3344:3355  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3320:3343  super.supportsInterface */\n      tag_114\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3320:3356  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_113:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3356  interfaceId == type(IERC721).interfaceId ||... */\n    tag_112:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3181:3356  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3063:3363  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4208:4297  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4253:4266  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4285:4290  _name */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4278:4290  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4208:4297  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6521:6675  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_38:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6588:6595  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6629  _requireOwned(tokenId) */\n      tag_123\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6620  _requireOwned */\n      tag_124\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6629  _requireOwned(tokenId) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6647:6668  _getApproved(tokenId) */\n      tag_125\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6660:6667  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6647:6659  _getApproved */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6647:6668  _getApproved(tokenId) */\n      jump\t// in\n    tag_125:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6640:6668  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6521:6675  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6347:6460  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6418:6453  _approve(to, tokenId, _msgSender()) */\n      tag_128\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6427:6429  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6431:6438  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6440:6452  _msgSender() */\n      tag_129\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6440:6450  _msgSender */\n      tag_130\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6440:6452  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6418:6426  _approve */\n      tag_131\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6418:6453  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6347:6460  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":6425:8093  function getOwnerTokenMetaData(address owner) public view returns (TokenIdMetaDataWrapper[] memory) {... */\n    tag_48:\n        /* \"myNFT.sol\":6492:6523  TokenIdMetaDataWrapper[] memory */\n      0x60\n        /* \"myNFT.sol\":6536:6561  uint256[] memory tokenIds */\n      0x00\n        /* \"myNFT.sol\":6564:6574  addressIDs */\n      0x08\n        /* \"myNFT.sol\":6564:6581  addressIDs[owner] */\n      0x00\n        /* \"myNFT.sol\":6575:6580  owner */\n      dup5\n        /* \"myNFT.sol\":6564:6581  addressIDs[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":6536:6581  uint256[] memory tokenIds = addressIDs[owner] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"myNFT.sol\":6776:6821  TokenIdMetaDataWrapper[] memory ownerMetaData */\n      0x00\n        /* \"myNFT.sol\":6853:6861  tokenIds */\n      dup2\n        /* \"myNFT.sol\":6853:6868  tokenIds.length */\n      mload\n        /* \"myNFT.sol\":6824:6869  new TokenIdMetaDataWrapper[](tokenIds.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_135\n      jumpi\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n    tag_135:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup2\n      0x20\n      add\n    tag_139:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_139\n      jumpi\n      swap1\n      pop\n    tag_138:\n      pop\n        /* \"myNFT.sol\":6776:6869  TokenIdMetaDataWrapper[] memory ownerMetaData = new TokenIdMetaDataWrapper[](tokenIds.length) */\n      swap1\n      pop\n        /* \"myNFT.sol\":7353:7362  uint256 i */\n      0x00\n        /* \"myNFT.sol\":7348:7577  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n    tag_142:\n        /* \"myNFT.sol\":7372:7380  tokenIds */\n      dup3\n        /* \"myNFT.sol\":7372:7387  tokenIds.length */\n      mload\n        /* \"myNFT.sol\":7368:7369  i */\n      dup2\n        /* \"myNFT.sol\":7368:7387  i < tokenIds.length */\n      lt\n        /* \"myNFT.sol\":7348:7577  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"myNFT.sol\":7428:7565  TokenIdMetaDataWrapper({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"myNFT.sol\":7480:7488  tokenIds */\n      dup5\n        /* \"myNFT.sol\":7489:7490  i */\n      dup4\n        /* \"myNFT.sol\":7480:7491  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"myNFT.sol\":7428:7565  TokenIdMetaDataWrapper({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"myNFT.sol\":7522:7536  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":7522:7549  _tokenMetaData[tokenIds[i]] */\n      0x00\n        /* \"myNFT.sol\":7537:7545  tokenIds */\n      dup7\n        /* \"myNFT.sol\":7546:7547  i */\n      dup6\n        /* \"myNFT.sol\":7537:7548  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_148\n      jumpi\n      tag_149\n      tag_147\n      jump\t// in\n    tag_149:\n    tag_148:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"myNFT.sol\":7522:7549  _tokenMetaData[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":7428:7565  TokenIdMetaDataWrapper({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_117\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_117\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"myNFT.sol\":7409:7422  ownerMetaData */\n      dup3\n        /* \"myNFT.sol\":7423:7424  i */\n      dup3\n        /* \"myNFT.sol\":7409:7425  ownerMetaData[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_156\n      tag_147\n      jump\t// in\n    tag_156:\n    tag_155:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"myNFT.sol\":7409:7565  ownerMetaData[i] = TokenIdMetaDataWrapper({... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"myNFT.sol\":7389:7392  i++ */\n      dup1\n      dup1\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":7348:7577  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      jump(tag_142)\n    tag_143:\n      pop\n        /* \"myNFT.sol\":7825:7838  ownerMetaData */\n      dup1\n        /* \"myNFT.sol\":7818:7838  return ownerMetaData */\n      swap3\n      pop\n      pop\n      pop\n        /* \"myNFT.sol\":6425:8093  function getOwnerTokenMetaData(address owner) public view returns (TokenIdMetaDataWrapper[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7167:7745  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_54:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7275:7276  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7261:7277  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7261:7263  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7261:7277  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7257:7344  if (to == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7330:7331  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7300:7333  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7257:7344  if (to == address(0)) {... */\n    tag_160:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7583  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7586:7620  _update(to, tokenId, _msgSender()) */\n      tag_162\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7594:7596  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7598:7605  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7607:7619  _msgSender() */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7607:7617  _msgSender */\n      tag_130\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7607:7619  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7586:7593  _update */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7586:7620  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_162:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7562:7620  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7655  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7634:7655  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7634:7647  previousOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7634:7655  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7630:7739  if (previousOwner != from) {... */\n      tag_165\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7699:7703  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7705:7712  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7714:7727  previousOwner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7678:7728  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7630:7739  if (previousOwner != from) {... */\n    tag_165:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7247:7745  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7167:7745  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":4395:4527  function getTokenURI(uint256 tokenId) public view returns (string memory) {... */\n    tag_57:\n        /* \"myNFT.sol\":4454:4467  string memory */\n      0x60\n        /* \"myNFT.sol\":4487:4501  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":4487:4510  _tokenMetaData[tokenId] */\n      0x00\n        /* \"myNFT.sol\":4502:4509  tokenId */\n      dup4\n        /* \"myNFT.sol\":4487:4510  _tokenMetaData[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":4487:4519  _tokenMetaData[tokenId].tokenURI */\n      0x00\n      add\n        /* \"myNFT.sol\":4480:4519  return _tokenMetaData[tokenId].tokenURI */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_117\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_117\n      jump\t// in\n    tag_170:\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_172\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_171)\n    tag_172:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_173:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_173\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"myNFT.sol\":4395:4527  function getTokenURI(uint256 tokenId) public view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7811:7943  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7897:7936  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7914:7918  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7920:7922  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7924:7931  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7897:7936  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7897:7913  safeTransferFrom */\n      tag_96\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7897:7936  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_175:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7811:7943  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":4848:6336  function getOwnerURIs(address owner) public view returns (string[] memory) {... */\n    tag_64:\n        /* \"myNFT.sol\":4906:4921  string[] memory */\n      0x60\n        /* \"myNFT.sol\":5025:5050  uint256[] memory tokenIds */\n      0x00\n        /* \"myNFT.sol\":5053:5063  addressIDs */\n      0x08\n        /* \"myNFT.sol\":5053:5070  addressIDs[owner] */\n      0x00\n        /* \"myNFT.sol\":5064:5069  owner */\n      dup5\n        /* \"myNFT.sol\":5053:5070  addressIDs[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":5025:5070  uint256[] memory tokenIds = addressIDs[owner] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_178:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_178\n      jumpi\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"myNFT.sol\":5379:5404  string[] memory ownerURIs */\n      0x00\n        /* \"myNFT.sol\":5420:5428  tokenIds */\n      dup2\n        /* \"myNFT.sol\":5420:5435  tokenIds.length */\n      mload\n        /* \"myNFT.sol\":5407:5436  new string[](tokenIds.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      tag_180\n      tag_137\n      jump\t// in\n    tag_180:\n    tag_179:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_181\n      jumpi\n      dup2\n      0x20\n      add\n    tag_182:\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_182\n      jumpi\n      swap1\n      pop\n    tag_181:\n      pop\n        /* \"myNFT.sol\":5379:5436  string[] memory ownerURIs = new string[](tokenIds.length) */\n      swap1\n      pop\n        /* \"myNFT.sol\":5776:5785  uint256 i */\n      0x00\n        /* \"myNFT.sol\":5771:6294  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n    tag_183:\n        /* \"myNFT.sol\":5795:5803  tokenIds */\n      dup3\n        /* \"myNFT.sol\":5795:5810  tokenIds.length */\n      mload\n        /* \"myNFT.sol\":5791:5792  i */\n      dup2\n        /* \"myNFT.sol\":5791:5810  i < tokenIds.length */\n      lt\n        /* \"myNFT.sol\":5771:6294  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"myNFT.sol\":5847:5861  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":5847:5874  _tokenMetaData[tokenIds[i]] */\n      0x00\n        /* \"myNFT.sol\":5862:5870  tokenIds */\n      dup5\n        /* \"myNFT.sol\":5871:5872  i */\n      dup4\n        /* \"myNFT.sol\":5862:5873  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_187\n      tag_147\n      jump\t// in\n    tag_187:\n    tag_186:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"myNFT.sol\":5847:5874  _tokenMetaData[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":5847:5883  _tokenMetaData[tokenIds[i]].tokenURI */\n      0x00\n      add\n        /* \"myNFT.sol\":5832:5883  ownerURIs[i] = _tokenMetaData[tokenIds[i]].tokenURI */\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_117\n      jump\t// in\n    tag_188:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_117\n      jump\t// in\n    tag_189:\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"myNFT.sol\":5832:5841  ownerURIs */\n      dup3\n        /* \"myNFT.sol\":5842:5843  i */\n      dup3\n        /* \"myNFT.sol\":5832:5844  ownerURIs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_194\n      tag_147\n      jump\t// in\n    tag_194:\n    tag_193:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"myNFT.sol\":5832:5883  ownerURIs[i] = _tokenMetaData[tokenIds[i]].tokenURI */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"myNFT.sol\":5812:5815  i++ */\n      dup1\n      dup1\n      tag_195\n      swap1\n      tag_158\n      jump\t// in\n    tag_195:\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":5771:6294  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      jump(tag_183)\n    tag_184:\n      pop\n        /* \"myNFT.sol\":6311:6320  ownerURIs */\n      dup1\n        /* \"myNFT.sol\":6304:6320  return ownerURIs */\n      swap3\n      pop\n      pop\n      pop\n        /* \"myNFT.sol\":4848:6336  function getOwnerURIs(address owner) public view returns (string[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3995:4113  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_69:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4065  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4084:4106  _requireOwned(tokenId) */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4098:4105  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4084:4097  _requireOwned */\n      tag_124\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4084:4106  _requireOwned(tokenId) */\n      jump\t// in\n    tag_197:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4077:4106  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3995:4113  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3551:3759  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3614:3621  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3654:3655  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3637:3656  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3637:3642  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3637:3656  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3633:3720  if (owner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3706:3707  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3679:3709  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3633:3720  if (owner == address(0)) {... */\n    tag_199:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3736:3745  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3736:3752  _balances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3746:3751  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3736:3752  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3729:3752  return _balances[owner] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3551:3759  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":2428:2800  function makeRandom(string memory seed) public pure returns (uint256) {... */\n    tag_79:\n        /* \"myNFT.sol\":2489:2496  uint256 */\n      0x00\n        /* \"myNFT.sol\":2569:2570  1 */\n      0x01\n        /* \"myNFT.sol\":2562:2564  10 */\n      0x0a\n        /* \"myNFT.sol\":2552:2556  seed */\n      dup4\n        /* \"myNFT.sol\":2535:2557  abi.encodePacked(seed) */\n      add(0x20, mload(0x40))\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"myNFT.sol\":2525:2558  keccak256(abi.encodePacked(seed)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"myNFT.sol\":2517:2559  uint256(keccak256(abi.encodePacked(seed))) */\n      0x00\n      shr\n        /* \"myNFT.sol\":2517:2564  uint256(keccak256(abi.encodePacked(seed))) % 10 */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"myNFT.sol\":2516:2570  (uint256(keccak256(abi.encodePacked(seed))) % 10 ) + 1 */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"myNFT.sol\":2509:2570  return (uint256(keccak256(abi.encodePacked(seed))) % 10 ) + 1 */\n      swap1\n      pop\n        /* \"myNFT.sol\":2428:2800  function makeRandom(string memory seed) public pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":3180:4322  function minting(string memory _tokenURI , string memory seed) public returns (string memory) {... */\n    tag_84:\n        /* \"myNFT.sol\":3259:3272  string memory */\n      0x60\n        /* \"myNFT.sol\":3358:3379  uint256 randomRanking */\n      0x00\n        /* \"myNFT.sol\":3382:3398  makeRandom(seed) */\n      tag_209\n        /* \"myNFT.sol\":3393:3397  seed */\n      dup4\n        /* \"myNFT.sol\":3382:3392  makeRandom */\n      tag_79\n        /* \"myNFT.sol\":3382:3398  makeRandom(seed) */\n      jump\t// in\n    tag_209:\n        /* \"myNFT.sol\":3358:3398  uint256 randomRanking = makeRandom(seed) */\n      swap1\n      pop\n        /* \"myNFT.sol\":3536:3750  TokenMetaData({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"myNFT.sol\":3580:3589  _tokenURI */\n      dup6\n        /* \"myNFT.sol\":3536:3750  TokenMetaData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"myNFT.sol\":3675:3688  randomRanking */\n      dup3\n        /* \"myNFT.sol\":3536:3750  TokenMetaData({... */\n      dup2\n      mstore\n      pop\n        /* \"myNFT.sol\":3506:3520  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":3506:3533  _tokenMetaData[totalSupply] */\n      0x00\n        /* \"myNFT.sol\":3521:3532  totalSupply */\n      sload(0x07)\n        /* \"myNFT.sol\":3506:3533  _tokenMetaData[totalSupply] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":3506:3750  _tokenMetaData[totalSupply] = TokenMetaData({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"myNFT.sol\":3948:3978  _mint(msg.sender, totalSupply) */\n      tag_212\n        /* \"myNFT.sol\":3954:3964  msg.sender */\n      caller\n        /* \"myNFT.sol\":3966:3977  totalSupply */\n      sload(0x07)\n        /* \"myNFT.sol\":3948:3953  _mint */\n      tag_213\n        /* \"myNFT.sol\":3948:3978  _mint(msg.sender, totalSupply) */\n      jump\t// in\n    tag_212:\n        /* \"myNFT.sol\":4032:4042  addressIDs */\n      0x08\n        /* \"myNFT.sol\":4032:4054  addressIDs[msg.sender] */\n      0x00\n        /* \"myNFT.sol\":4043:4053  msg.sender */\n      caller\n        /* \"myNFT.sol\":4032:4054  addressIDs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":4060:4071  totalSupply */\n      sload(0x07)\n        /* \"myNFT.sol\":4032:4072  addressIDs[msg.sender].push(totalSupply) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"myNFT.sol\":4180:4181  1 */\n      0x01\n        /* \"myNFT.sol\":4165:4176  totalSupply */\n      0x07\n      0x00\n        /* \"myNFT.sol\":4165:4181  totalSupply += 1 */\n      dup3\n      dup3\n      sload\n      tag_215\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_215:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"myNFT.sol\":4208:4222  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":4208:4238  _tokenMetaData[totalSupply -1] */\n      0x00\n        /* \"myNFT.sol\":4236:4237  1 */\n      0x01\n        /* \"myNFT.sol\":4223:4234  totalSupply */\n      sload(0x07)\n        /* \"myNFT.sol\":4223:4237  totalSupply -1 */\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"myNFT.sol\":4208:4238  _tokenMetaData[totalSupply -1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":4208:4247  _tokenMetaData[totalSupply -1].tokenURI */\n      0x00\n      add\n        /* \"myNFT.sol\":4201:4247  return _tokenMetaData[totalSupply -1].tokenURI */\n      dup1\n      sload\n      tag_218\n      swap1\n      tag_117\n      jump\t// in\n    tag_218:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_117\n      jump\t// in\n    tag_219:\n      dup1\n      iszero\n      tag_220\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_221\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_220)\n    tag_221:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_222:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_222\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":3180:4322  function minting(string memory _tokenURI , string memory seed) public returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4361:4454  function symbol() public view virtual returns (string memory) {... */\n    tag_87:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4408:4421  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4440:4447  _symbol */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4433:4447  return _symbol */\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_117\n      jump\t// in\n    tag_224:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_225\n      swap1\n      tag_117\n      jump\t// in\n    tag_225:\n      dup1\n      iszero\n      tag_226\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_227\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_226)\n    tag_227:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_228:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_228\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4361:4454  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6742:6886  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6827:6879  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_230\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6846:6858  _msgSender() */\n      tag_231\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6846:6856  _msgSender */\n      tag_130\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6846:6858  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6860:6868  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6870:6878  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6827:6845  _setApprovalForAll */\n      tag_232\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6827:6879  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_230:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6742:6886  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8009:8217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_96:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8122:8153  transferFrom(from, to, tokenId) */\n      tag_234\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8135:8139  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8141:8143  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8145:8152  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8122:8134  transferFrom */\n      tag_54\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8122:8153  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_234:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8163:8210  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_235\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8186:8190  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8194  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8196:8203  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8205:8209  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8163:8185  _checkOnERC721Received */\n      tag_236\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8163:8210  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_235:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8009:8217  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":8315:8776  function tokenURI( uint256 _tokenId) public view override returns(string memory){... */\n    tag_99:\n        /* \"myNFT.sol\":8381:8394  string memory */\n      0x60\n        /* \"myNFT.sol\":8467:8481  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":8467:8491  _tokenMetaData[_tokenId] */\n      0x00\n        /* \"myNFT.sol\":8482:8490  _tokenId */\n      dup4\n        /* \"myNFT.sol\":8467:8491  _tokenMetaData[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":8467:8500  _tokenMetaData[_tokenId].tokenURI */\n      0x00\n      add\n        /* \"myNFT.sol\":8460:8500  return _tokenMetaData[_tokenId].tokenURI */\n      dup1\n      sload\n      tag_238\n      swap1\n      tag_117\n      jump\t// in\n    tag_238:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_239\n      swap1\n      tag_117\n      jump\t// in\n    tag_239:\n      dup1\n      iszero\n      tag_240\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_241\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_240)\n    tag_241:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_242:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_242\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"myNFT.sol\":8315:8776  function tokenURI( uint256 _tokenId) public view override returns(string memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":4606:4742  function getTokenRanking(uint256 tokenId) public view returns (uint256 ranking){... */\n    tag_103:\n        /* \"myNFT.sol\":4669:4684  uint256 ranking */\n      0x00\n        /* \"myNFT.sol\":4703:4717  _tokenMetaData */\n      0x06\n        /* \"myNFT.sol\":4703:4726  _tokenMetaData[tokenId] */\n      0x00\n        /* \"myNFT.sol\":4718:4725  tokenId */\n      dup4\n        /* \"myNFT.sol\":4703:4726  _tokenMetaData[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":4703:4734  _tokenMetaData[tokenId].ranking */\n      0x01\n      add\n      sload\n        /* \"myNFT.sol\":4696:4734  return _tokenMetaData[tokenId].ranking */\n      swap1\n      pop\n        /* \"myNFT.sol\":4606:4742  function getTokenRanking(uint256 tokenId) public view returns (uint256 ranking){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6952:7105  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_108:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7040:7044  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7063:7081  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7063:7088  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7087  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7063:7088  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7063:7098  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7089:7097  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7063:7098  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7056:7098  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6952:7105  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_114:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19162:19403  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_124:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19225:19232  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19244:19257  address owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19260:19277  _ownerOf(tokenId) */\n      tag_247\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19269:19276  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19260:19268  _ownerOf */\n      tag_248\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19260:19277  _ownerOf(tokenId) */\n      jump\t// in\n    tag_247:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19244:19277  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19308:19309  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19291:19310  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19291:19296  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19291:19310  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19287:19375  if (owner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19356:19363  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19333:19364  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19287:19375  if (owner == address(0)) {... */\n    tag_249:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19391:19396  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19384:19396  return owner */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19162:19403  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8962:9089  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_126:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9032:9039  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9073  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9082  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9074:9081  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9058:9082  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9082  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8962:9089  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17442:17562  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_131:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17522:17555  _approve(to, tokenId, auth, true) */\n      tag_254\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17531:17533  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17535:17542  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17544:17548  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17550:17554  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17522:17530  _approve */\n      tag_255\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17522:17555  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_254:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17442:17562  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11862:12657  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_164:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11948:11955  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11967:11979  address from */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11982:11999  _ownerOf(tokenId) */\n      tag_257\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11991:11998  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11982:11990  _ownerOf */\n      tag_248\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11982:11999  _ownerOf(tokenId) */\n      jump\t// in\n    tag_257:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11967:11999  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12075:12076  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12059:12077  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12059:12063  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12059:12077  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12055:12141  if (auth != address(0)) {... */\n      tag_258\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12093:12130  _checkAuthorized(from, auth, tokenId) */\n      tag_259\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12110:12114  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12116:12120  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12122:12129  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12093:12109  _checkAuthorized */\n      tag_260\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12093:12130  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12055:12141  if (auth != address(0)) {... */\n    tag_258:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12201:12202  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12185:12203  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12185:12189  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12185:12203  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12181:12437  if (from != address(0)) {... */\n      tag_261\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12301:12349  _approve(address(0), tokenId, address(0), false) */\n      tag_262\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12318:12319  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12322:12329  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12339:12340  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12343:12348  false */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12301:12309  _approve */\n      tag_255\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12301:12349  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_262:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12411:12412  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12392:12401  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12392:12407  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12402:12406  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12392:12407  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12392:12412  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12181:12437  if (from != address(0)) {... */\n    tag_261:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12465:12466  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12451:12467  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12451:12453  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12451:12467  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12447:12554  if (to != address(0)) {... */\n      tag_263\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12528:12529  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12511:12520  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12511:12524  _balances[to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12521:12523  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12511:12524  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12511:12529  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12447:12554  if (to != address(0)) {... */\n    tag_263:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12583:12585  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12564:12571  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12564:12580  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12572:12579  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12564:12580  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12564:12585  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12620:12627  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12616:12618  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12601:12628  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12610:12614  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12601:12628  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12646:12650  from */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12639:12650  return from */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11862:12657  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12979:13306  function _mint(address to, uint256 tokenId) internal {... */\n    tag_213:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13060:13061  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13046:13062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13046:13048  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13046:13062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13042:13129  if (to == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13115:13116  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13085:13118  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13042:13129  if (to == address(0)) {... */\n    tag_265:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13138:13159  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13162:13194  _update(to, tokenId, address(0)) */\n      tag_267\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13170:13172  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13174:13181  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13191:13192  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13162:13169  _update */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13162:13194  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_267:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13138:13194  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13233:13234  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13235  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13221  previousOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13235  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13204:13300  if (previousOwner != address(0)) {... */\n      tag_268\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13286:13287  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13258:13289  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13204:13300  if (previousOwner != address(0)) {... */\n    tag_268:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13032:13306  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12979:13306  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18615:18927  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_232:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18742:18743  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18722:18744  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18722:18730  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18722:18744  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18718:18809  if (operator == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18789:18797  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18767:18798  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18718:18809  if (operator == address(0)) {... */\n    tag_271:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18856:18864  approved */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18818:18836  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18818:18843  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18837:18842  owner */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18818:18843  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18818:18853  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18844:18852  operator */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18818:18853  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18818:18864  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18901:18909  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18879:18920  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18894:18899  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18879:18920  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18911:18919  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18879:18920  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18615:18927  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19942:20724  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_236:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20075:20076  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20058:20060  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20058:20072  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20058:20076  to.code.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20054:20718  if (to.code.length > 0) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20112:20114  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20096:20132  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20133:20145  _msgSender() */\n      tag_276\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20133:20143  _msgSender */\n      tag_130\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20133:20145  _msgSender() */\n      jump\t// in\n    tag_276:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20147:20151  from */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20153:20160  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20162:20166  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20096:20167  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_279\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_280\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      0x01\n    tag_279:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20092:20708  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_282\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_287\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_286)\n    tag_287:\n      0x60\n      swap2\n      pop\n    tag_286:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20422:20423  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20405:20411  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20405:20418  reason.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20405:20423  reason.length == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20401:20694  if (reason.length == 0) {... */\n      tag_288\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20476:20478  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20454:20479  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20401:20694  if (reason.length == 0) {... */\n    tag_288:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20646:20652  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20640:20653  mload(reason) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20631:20637  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20627:20629  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20623:20638  add(32, reason) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20616:20654  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20092:20708  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20224:20265  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20214:20265  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20214:20220  retval */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20214:20265  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20210:20340  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_292\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20318:20320  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20296:20321  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20210:20340  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_292:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20168:20354  returns (bytes4 retval) {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20054:20718  if (to.code.length > 0) {... */\n    tag_275:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19942:20724  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8731:8846  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_248:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8797:8804  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8823:8830  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8823:8839  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8831:8838  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8823:8839  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8816:8839  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8731:8846  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17744:18406  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_255:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17904:17913  emitEvent */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17904:17935  emitEvent || auth != address(0) */\n      dup1\n      tag_296\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17933:17934  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17917:17935  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17917:17921  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17917:17935  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17904:17935  emitEvent || auth != address(0) */\n    tag_296:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17900:18360  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17951:17964  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17967:17989  _requireOwned(tokenId) */\n      tag_298\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17981:17988  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17967:17980  _requireOwned */\n      tag_124\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17967:17989  _requireOwned(tokenId) */\n      jump\t// in\n    tag_298:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17951:17989  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18133:18134  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18135  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18121  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18135  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18152  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18148:18152  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18139:18152  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18139:18144  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18139:18152  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18152  auth != address(0) && owner != auth */\n    tag_299:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18186  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18157:18186  isApprovedForAll(owner, auth) */\n      tag_301\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18174:18179  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18181:18185  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18157:18173  isApprovedForAll */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18157:18186  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_301:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18156:18186  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18117:18186  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_300:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18113:18255  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18235:18239  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18213:18240  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18113:18255  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_302:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18273:18282  emitEvent */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18269:18350  if (emitEvent) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18327:18334  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18323:18325  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18307:18335  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18316:18321  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18307:18335  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18269:18350  if (emitEvent) {... */\n    tag_304:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17937:18360  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17900:18360  if (emitEvent || auth != address(0)) {... */\n    tag_297:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18397:18399  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18370:18385  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18370:18394  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18386:18393  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18370:18394  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18370:18399  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17744:18406  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10106:10474  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_260:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10218:10256  _isAuthorized(owner, spender, tokenId) */\n      tag_306\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10232:10237  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10239:10246  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10248:10255  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10218:10231  _isAuthorized */\n      tag_307\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10218:10256  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_306:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10213:10468  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_308\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10293:10294  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10276:10295  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10276:10281  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10276:10295  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10272:10458  if (owner == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10345:10352  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10322:10353  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10272:10458  if (owner == address(0)) {... */\n    tag_309:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10426:10433  spender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10435:10442  tokenId */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10399:10443  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap3\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10213:10468  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_308:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10106:10474  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9400:9672  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_307:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9503:9507  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9557:9558  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9538:9559  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9538:9545  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9538:9559  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9538:9665  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9585:9592  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9592  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9581  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9592  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9628  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9628  isApprovedForAll(owner, spender) */\n      tag_317\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9613:9618  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9620:9627  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9612  isApprovedForAll */\n      tag_108\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9628  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_317:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9628  owner == spender || isApprovedForAll(owner, spender) */\n    tag_316:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9664  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_318\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9657:9664  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9664  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9653  _getApproved(tokenId) */\n      tag_319\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9645:9652  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9644  _getApproved */\n      tag_126\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9653  _getApproved(tokenId) */\n      jump\t// in\n    tag_319:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9632:9664  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9664  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_318:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9538:9665  spender != address(0) &&... */\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9519:9665  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9400:9672  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_141:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_321:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_322:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_323:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_324:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_325:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_326:\n        /* \"#utility.yul\":561:584   */\n      tag_404\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_325\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_405:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_327:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_407\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_326\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_410\n      tag_323\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":833:952   */\n    tag_409:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_411\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_328:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_329:\n        /* \"#utility.yul\":1268:1289   */\n      tag_414\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_328\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_416\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_329\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_330:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_331:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_332:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_420:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_420)\n    tag_422:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_333:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_334:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_425\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_330\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2329:2400   */\n      tag_426\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_331\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_427\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_332\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2499:2528   */\n      tag_428\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_333\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_34:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_430\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_334\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_335:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_336:\n        /* \"#utility.yul\":3016:3040   */\n      tag_433\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_335\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_434:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_337:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_436\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_336\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_37:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_439\n      tag_323\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3292:3411   */\n    tag_438:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_440\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_337\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_338:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_339:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_443\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_338\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_340:\n        /* \"#utility.yul\":3872:3896   */\n      tag_445\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_339\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_40:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_447\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_340\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_341:\n        /* \"#utility.yul\":4210:4234   */\n      tag_449\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_339\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_450:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_342:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_452\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_341\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_43:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_455\n      tag_323\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4503:4622   */\n    tag_454:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_456\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_342\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_457\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_337\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5219   */\n    tag_47:\n        /* \"#utility.yul\":4949:4955   */\n      0x00\n        /* \"#utility.yul\":4998:5000   */\n      0x20\n        /* \"#utility.yul\":4986:4995   */\n      dup3\n        /* \"#utility.yul\":4977:4984   */\n      dup5\n        /* \"#utility.yul\":4973:4996   */\n      sub\n        /* \"#utility.yul\":4969:5001   */\n      slt\n        /* \"#utility.yul\":4966:5085   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5004:5083   */\n      tag_460\n      tag_323\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4966:5085   */\n    tag_459:\n        /* \"#utility.yul\":5124:5125   */\n      0x00\n        /* \"#utility.yul\":5149:5202   */\n      tag_461\n        /* \"#utility.yul\":5194:5201   */\n      dup5\n        /* \"#utility.yul\":5185:5191   */\n      dup3\n        /* \"#utility.yul\":5174:5183   */\n      dup6\n        /* \"#utility.yul\":5170:5192   */\n      add\n        /* \"#utility.yul\":5149:5202   */\n      tag_342\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5139:5202   */\n      swap2\n      pop\n        /* \"#utility.yul\":5095:5212   */\n      pop\n        /* \"#utility.yul\":4890:5219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5377   */\n    tag_343:\n        /* \"#utility.yul\":5330:5336   */\n      0x00\n        /* \"#utility.yul\":5364:5369   */\n      dup2\n        /* \"#utility.yul\":5358:5370   */\n      mload\n        /* \"#utility.yul\":5348:5370   */\n      swap1\n      pop\n        /* \"#utility.yul\":5225:5377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5605   */\n    tag_344:\n        /* \"#utility.yul\":5520:5531   */\n      0x00\n        /* \"#utility.yul\":5554:5560   */\n      dup3\n        /* \"#utility.yul\":5549:5552   */\n      dup3\n        /* \"#utility.yul\":5542:5561   */\n      mstore\n        /* \"#utility.yul\":5594:5598   */\n      0x20\n        /* \"#utility.yul\":5589:5592   */\n      dup3\n        /* \"#utility.yul\":5585:5599   */\n      add\n        /* \"#utility.yul\":5570:5599   */\n      swap1\n      pop\n        /* \"#utility.yul\":5383:5605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5781   */\n    tag_345:\n        /* \"#utility.yul\":5716:5720   */\n      0x00\n        /* \"#utility.yul\":5739:5742   */\n      dup2\n        /* \"#utility.yul\":5731:5742   */\n      swap1\n      pop\n        /* \"#utility.yul\":5769:5773   */\n      0x20\n        /* \"#utility.yul\":5764:5767   */\n      dup3\n        /* \"#utility.yul\":5760:5774   */\n      add\n        /* \"#utility.yul\":5752:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5611:5781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5787:5895   */\n    tag_346:\n        /* \"#utility.yul\":5864:5888   */\n      tag_466\n        /* \"#utility.yul\":5882:5887   */\n      dup2\n        /* \"#utility.yul\":5864:5888   */\n      tag_335\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5859:5862   */\n      dup3\n        /* \"#utility.yul\":5852:5889   */\n      mstore\n        /* \"#utility.yul\":5787:5895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5901:6060   */\n    tag_347:\n        /* \"#utility.yul\":5975:5986   */\n      0x00\n        /* \"#utility.yul\":6009:6015   */\n      dup3\n        /* \"#utility.yul\":6004:6007   */\n      dup3\n        /* \"#utility.yul\":5997:6016   */\n      mstore\n        /* \"#utility.yul\":6049:6053   */\n      0x20\n        /* \"#utility.yul\":6044:6047   */\n      dup3\n        /* \"#utility.yul\":6040:6054   */\n      add\n        /* \"#utility.yul\":6025:6054   */\n      swap1\n      pop\n        /* \"#utility.yul\":5901:6060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6066:6423   */\n    tag_348:\n        /* \"#utility.yul\":6144:6147   */\n      0x00\n        /* \"#utility.yul\":6172:6211   */\n      tag_469\n        /* \"#utility.yul\":6205:6210   */\n      dup3\n        /* \"#utility.yul\":6172:6211   */\n      tag_330\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6227:6288   */\n      tag_470\n        /* \"#utility.yul\":6281:6287   */\n      dup2\n        /* \"#utility.yul\":6276:6279   */\n      dup6\n        /* \"#utility.yul\":6227:6288   */\n      tag_347\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6220:6288   */\n      swap4\n      pop\n        /* \"#utility.yul\":6297:6362   */\n      tag_471\n        /* \"#utility.yul\":6355:6361   */\n      dup2\n        /* \"#utility.yul\":6350:6353   */\n      dup6\n        /* \"#utility.yul\":6343:6347   */\n      0x20\n        /* \"#utility.yul\":6336:6341   */\n      dup7\n        /* \"#utility.yul\":6332:6348   */\n      add\n        /* \"#utility.yul\":6297:6362   */\n      tag_332\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6387:6416   */\n      tag_472\n        /* \"#utility.yul\":6409:6415   */\n      dup2\n        /* \"#utility.yul\":6387:6416   */\n      tag_333\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6382:6385   */\n      dup5\n        /* \"#utility.yul\":6378:6417   */\n      add\n        /* \"#utility.yul\":6371:6417   */\n      swap2\n      pop\n        /* \"#utility.yul\":6148:6423   */\n      pop\n        /* \"#utility.yul\":6066:6423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6493:7104   */\n    tag_349:\n        /* \"#utility.yul\":6610:6613   */\n      0x00\n        /* \"#utility.yul\":6646:6650   */\n      0x40\n        /* \"#utility.yul\":6641:6644   */\n      dup4\n        /* \"#utility.yul\":6637:6651   */\n      add\n        /* \"#utility.yul\":6737:6741   */\n      0x00\n        /* \"#utility.yul\":6730:6735   */\n      dup4\n        /* \"#utility.yul\":6726:6742   */\n      add\n        /* \"#utility.yul\":6720:6743   */\n      mload\n        /* \"#utility.yul\":6790:6793   */\n      dup5\n        /* \"#utility.yul\":6784:6788   */\n      dup3\n        /* \"#utility.yul\":6780:6794   */\n      sub\n        /* \"#utility.yul\":6773:6777   */\n      0x00\n        /* \"#utility.yul\":6768:6771   */\n      dup7\n        /* \"#utility.yul\":6764:6778   */\n      add\n        /* \"#utility.yul\":6757:6795   */\n      mstore\n        /* \"#utility.yul\":6816:6889   */\n      tag_474\n        /* \"#utility.yul\":6884:6888   */\n      dup3\n        /* \"#utility.yul\":6870:6882   */\n      dup3\n        /* \"#utility.yul\":6816:6889   */\n      tag_348\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6808:6889   */\n      swap2\n      pop\n        /* \"#utility.yul\":6661:6900   */\n      pop\n        /* \"#utility.yul\":6985:6989   */\n      0x20\n        /* \"#utility.yul\":6978:6983   */\n      dup4\n        /* \"#utility.yul\":6974:6990   */\n      add\n        /* \"#utility.yul\":6968:6991   */\n      mload\n        /* \"#utility.yul\":7004:7067   */\n      tag_475\n        /* \"#utility.yul\":7061:7065   */\n      0x20\n        /* \"#utility.yul\":7056:7059   */\n      dup7\n        /* \"#utility.yul\":7052:7066   */\n      add\n        /* \"#utility.yul\":7038:7050   */\n      dup3\n        /* \"#utility.yul\":7004:7067   */\n      tag_346\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6910:7077   */\n      pop\n        /* \"#utility.yul\":7094:7098   */\n      dup1\n        /* \"#utility.yul\":7087:7098   */\n      swap2\n      pop\n        /* \"#utility.yul\":6615:7104   */\n      pop\n        /* \"#utility.yul\":6493:7104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7192:7859   */\n    tag_350:\n        /* \"#utility.yul\":7327:7330   */\n      0x00\n        /* \"#utility.yul\":7363:7367   */\n      0x40\n        /* \"#utility.yul\":7358:7361   */\n      dup4\n        /* \"#utility.yul\":7354:7368   */\n      add\n        /* \"#utility.yul\":7453:7457   */\n      0x00\n        /* \"#utility.yul\":7446:7451   */\n      dup4\n        /* \"#utility.yul\":7442:7458   */\n      add\n        /* \"#utility.yul\":7436:7459   */\n      mload\n        /* \"#utility.yul\":7472:7535   */\n      tag_477\n        /* \"#utility.yul\":7529:7533   */\n      0x00\n        /* \"#utility.yul\":7524:7527   */\n      dup7\n        /* \"#utility.yul\":7520:7534   */\n      add\n        /* \"#utility.yul\":7506:7518   */\n      dup3\n        /* \"#utility.yul\":7472:7535   */\n      tag_346\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7378:7545   */\n      pop\n        /* \"#utility.yul\":7631:7635   */\n      0x20\n        /* \"#utility.yul\":7624:7629   */\n      dup4\n        /* \"#utility.yul\":7620:7636   */\n      add\n        /* \"#utility.yul\":7614:7637   */\n      mload\n        /* \"#utility.yul\":7684:7687   */\n      dup5\n        /* \"#utility.yul\":7678:7682   */\n      dup3\n        /* \"#utility.yul\":7674:7688   */\n      sub\n        /* \"#utility.yul\":7667:7671   */\n      0x20\n        /* \"#utility.yul\":7662:7665   */\n      dup7\n        /* \"#utility.yul\":7658:7672   */\n      add\n        /* \"#utility.yul\":7651:7689   */\n      mstore\n        /* \"#utility.yul\":7710:7821   */\n      tag_478\n        /* \"#utility.yul\":7816:7820   */\n      dup3\n        /* \"#utility.yul\":7802:7814   */\n      dup3\n        /* \"#utility.yul\":7710:7821   */\n      tag_349\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7702:7821   */\n      swap2\n      pop\n        /* \"#utility.yul\":7555:7832   */\n      pop\n        /* \"#utility.yul\":7849:7853   */\n      dup1\n        /* \"#utility.yul\":7842:7853   */\n      swap2\n      pop\n        /* \"#utility.yul\":7332:7859   */\n      pop\n        /* \"#utility.yul\":7192:7859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7865:8173   */\n    tag_351:\n        /* \"#utility.yul\":8010:8020   */\n      0x00\n        /* \"#utility.yul\":8045:8167   */\n      tag_480\n        /* \"#utility.yul\":8163:8166   */\n      dup4\n        /* \"#utility.yul\":8155:8161   */\n      dup4\n        /* \"#utility.yul\":8045:8167   */\n      tag_350\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8031:8167   */\n      swap1\n      pop\n        /* \"#utility.yul\":7865:8173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8179:8330   */\n    tag_352:\n        /* \"#utility.yul\":8287:8291   */\n      0x00\n        /* \"#utility.yul\":8319:8323   */\n      0x20\n        /* \"#utility.yul\":8314:8317   */\n      dup3\n        /* \"#utility.yul\":8310:8324   */\n      add\n        /* \"#utility.yul\":8302:8324   */\n      swap1\n      pop\n        /* \"#utility.yul\":8179:8330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8422:9637   */\n    tag_353:\n        /* \"#utility.yul\":8617:8620   */\n      0x00\n        /* \"#utility.yul\":8646:8738   */\n      tag_483\n        /* \"#utility.yul\":8732:8737   */\n      dup3\n        /* \"#utility.yul\":8646:8738   */\n      tag_343\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8754:8878   */\n      tag_484\n        /* \"#utility.yul\":8871:8877   */\n      dup2\n        /* \"#utility.yul\":8866:8869   */\n      dup6\n        /* \"#utility.yul\":8754:8878   */\n      tag_344\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8747:8878   */\n      swap4\n      pop\n        /* \"#utility.yul\":8904:8907   */\n      dup4\n        /* \"#utility.yul\":8949:8953   */\n      0x20\n        /* \"#utility.yul\":8941:8947   */\n      dup3\n        /* \"#utility.yul\":8937:8954   */\n      mul\n        /* \"#utility.yul\":8932:8935   */\n      dup6\n        /* \"#utility.yul\":8928:8955   */\n      add\n        /* \"#utility.yul\":8979:9073   */\n      tag_485\n        /* \"#utility.yul\":9067:9072   */\n      dup6\n        /* \"#utility.yul\":8979:9073   */\n      tag_345\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9096:9103   */\n      dup1\n        /* \"#utility.yul\":9127:9128   */\n      0x00\n        /* \"#utility.yul\":9112:9592   */\n    tag_486:\n        /* \"#utility.yul\":9137:9143   */\n      dup6\n        /* \"#utility.yul\":9134:9135   */\n      dup2\n        /* \"#utility.yul\":9131:9144   */\n      lt\n        /* \"#utility.yul\":9112:9592   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":9208:9217   */\n      dup5\n        /* \"#utility.yul\":9202:9206   */\n      dup5\n        /* \"#utility.yul\":9198:9218   */\n      sub\n        /* \"#utility.yul\":9193:9196   */\n      dup10\n        /* \"#utility.yul\":9186:9219   */\n      mstore\n        /* \"#utility.yul\":9259:9265   */\n      dup2\n        /* \"#utility.yul\":9253:9266   */\n      mload\n        /* \"#utility.yul\":9287:9427   */\n      tag_489\n        /* \"#utility.yul\":9422:9426   */\n      dup6\n        /* \"#utility.yul\":9407:9420   */\n      dup3\n        /* \"#utility.yul\":9287:9427   */\n      tag_351\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9279:9427   */\n      swap5\n      pop\n        /* \"#utility.yul\":9450:9548   */\n      tag_490\n        /* \"#utility.yul\":9541:9547   */\n      dup4\n        /* \"#utility.yul\":9450:9548   */\n      tag_352\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9440:9548   */\n      swap3\n      pop\n        /* \"#utility.yul\":9577:9581   */\n      0x20\n        /* \"#utility.yul\":9572:9575   */\n      dup11\n        /* \"#utility.yul\":9568:9582   */\n      add\n        /* \"#utility.yul\":9561:9582   */\n      swap10\n      pop\n        /* \"#utility.yul\":9172:9592   */\n      pop\n        /* \"#utility.yul\":9159:9160   */\n      0x01\n        /* \"#utility.yul\":9156:9157   */\n      dup2\n        /* \"#utility.yul\":9152:9161   */\n      add\n        /* \"#utility.yul\":9147:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9112:9592   */\n      jump(tag_486)\n    tag_488:\n        /* \"#utility.yul\":9116:9130   */\n      pop\n        /* \"#utility.yul\":9608:9612   */\n      dup3\n        /* \"#utility.yul\":9601:9612   */\n      swap8\n      pop\n        /* \"#utility.yul\":9628:9631   */\n      dup8\n        /* \"#utility.yul\":9621:9631   */\n      swap6\n      pop\n        /* \"#utility.yul\":8622:9637   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8422:9637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9643:10168   */\n    tag_50:\n        /* \"#utility.yul\":9862:9866   */\n      0x00\n        /* \"#utility.yul\":9900:9902   */\n      0x20\n        /* \"#utility.yul\":9889:9898   */\n      dup3\n        /* \"#utility.yul\":9885:9903   */\n      add\n        /* \"#utility.yul\":9877:9903   */\n      swap1\n      pop\n        /* \"#utility.yul\":9949:9958   */\n      dup2\n        /* \"#utility.yul\":9943:9947   */\n      dup2\n        /* \"#utility.yul\":9939:9959   */\n      sub\n        /* \"#utility.yul\":9935:9936   */\n      0x00\n        /* \"#utility.yul\":9924:9933   */\n      dup4\n        /* \"#utility.yul\":9920:9937   */\n      add\n        /* \"#utility.yul\":9913:9960   */\n      mstore\n        /* \"#utility.yul\":9977:10161   */\n      tag_492\n        /* \"#utility.yul\":10156:10160   */\n      dup2\n        /* \"#utility.yul\":10147:10153   */\n      dup5\n        /* \"#utility.yul\":9977:10161   */\n      tag_353\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9969:10161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9643:10168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10174:10793   */\n    tag_53:\n        /* \"#utility.yul\":10251:10257   */\n      0x00\n        /* \"#utility.yul\":10259:10265   */\n      dup1\n        /* \"#utility.yul\":10267:10273   */\n      0x00\n        /* \"#utility.yul\":10316:10318   */\n      0x60\n        /* \"#utility.yul\":10304:10313   */\n      dup5\n        /* \"#utility.yul\":10295:10302   */\n      dup7\n        /* \"#utility.yul\":10291:10314   */\n      sub\n        /* \"#utility.yul\":10287:10319   */\n      slt\n        /* \"#utility.yul\":10284:10403   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":10322:10401   */\n      tag_495\n      tag_323\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10284:10403   */\n    tag_494:\n        /* \"#utility.yul\":10442:10443   */\n      0x00\n        /* \"#utility.yul\":10467:10520   */\n      tag_496\n        /* \"#utility.yul\":10512:10519   */\n      dup7\n        /* \"#utility.yul\":10503:10509   */\n      dup3\n        /* \"#utility.yul\":10492:10501   */\n      dup8\n        /* \"#utility.yul\":10488:10510   */\n      add\n        /* \"#utility.yul\":10467:10520   */\n      tag_342\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10457:10520   */\n      swap4\n      pop\n        /* \"#utility.yul\":10413:10530   */\n      pop\n        /* \"#utility.yul\":10569:10571   */\n      0x20\n        /* \"#utility.yul\":10595:10648   */\n      tag_497\n        /* \"#utility.yul\":10640:10647   */\n      dup7\n        /* \"#utility.yul\":10631:10637   */\n      dup3\n        /* \"#utility.yul\":10620:10629   */\n      dup8\n        /* \"#utility.yul\":10616:10638   */\n      add\n        /* \"#utility.yul\":10595:10648   */\n      tag_342\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10585:10648   */\n      swap3\n      pop\n        /* \"#utility.yul\":10540:10658   */\n      pop\n        /* \"#utility.yul\":10697:10699   */\n      0x40\n        /* \"#utility.yul\":10723:10776   */\n      tag_498\n        /* \"#utility.yul\":10768:10775   */\n      dup7\n        /* \"#utility.yul\":10759:10765   */\n      dup3\n        /* \"#utility.yul\":10748:10757   */\n      dup8\n        /* \"#utility.yul\":10744:10766   */\n      add\n        /* \"#utility.yul\":10723:10776   */\n      tag_337\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10713:10776   */\n      swap2\n      pop\n        /* \"#utility.yul\":10668:10786   */\n      pop\n        /* \"#utility.yul\":10174:10793   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10799:10923   */\n    tag_354:\n        /* \"#utility.yul\":10876:10882   */\n      0x00\n        /* \"#utility.yul\":10910:10915   */\n      dup2\n        /* \"#utility.yul\":10904:10916   */\n      mload\n        /* \"#utility.yul\":10894:10916   */\n      swap1\n      pop\n        /* \"#utility.yul\":10799:10923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10929:11123   */\n    tag_355:\n        /* \"#utility.yul\":11038:11049   */\n      0x00\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11067:11070   */\n      dup3\n        /* \"#utility.yul\":11060:11079   */\n      mstore\n        /* \"#utility.yul\":11112:11116   */\n      0x20\n        /* \"#utility.yul\":11107:11110   */\n      dup3\n        /* \"#utility.yul\":11103:11117   */\n      add\n        /* \"#utility.yul\":11088:11117   */\n      swap1\n      pop\n        /* \"#utility.yul\":10929:11123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11129:11271   */\n    tag_356:\n        /* \"#utility.yul\":11206:11210   */\n      0x00\n        /* \"#utility.yul\":11229:11232   */\n      dup2\n        /* \"#utility.yul\":11221:11232   */\n      swap1\n      pop\n        /* \"#utility.yul\":11259:11263   */\n      0x20\n        /* \"#utility.yul\":11254:11257   */\n      dup3\n        /* \"#utility.yul\":11250:11264   */\n      add\n        /* \"#utility.yul\":11242:11264   */\n      swap1\n      pop\n        /* \"#utility.yul\":11129:11271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11277:11473   */\n    tag_357:\n        /* \"#utility.yul\":11366:11376   */\n      0x00\n        /* \"#utility.yul\":11401:11467   */\n      tag_503\n        /* \"#utility.yul\":11463:11466   */\n      dup4\n        /* \"#utility.yul\":11455:11461   */\n      dup4\n        /* \"#utility.yul\":11401:11467   */\n      tag_348\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11387:11467   */\n      swap1\n      pop\n        /* \"#utility.yul\":11277:11473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11479:11602   */\n    tag_358:\n        /* \"#utility.yul\":11559:11563   */\n      0x00\n        /* \"#utility.yul\":11591:11595   */\n      0x20\n        /* \"#utility.yul\":11586:11589   */\n      dup3\n        /* \"#utility.yul\":11582:11596   */\n      add\n        /* \"#utility.yul\":11574:11596   */\n      swap1\n      pop\n        /* \"#utility.yul\":11479:11602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11636:12627   */\n    tag_359:\n        /* \"#utility.yul\":11775:11778   */\n      0x00\n        /* \"#utility.yul\":11804:11868   */\n      tag_506\n        /* \"#utility.yul\":11862:11867   */\n      dup3\n        /* \"#utility.yul\":11804:11868   */\n      tag_354\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11884:11980   */\n      tag_507\n        /* \"#utility.yul\":11973:11979   */\n      dup2\n        /* \"#utility.yul\":11968:11971   */\n      dup6\n        /* \"#utility.yul\":11884:11980   */\n      tag_355\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11877:11980   */\n      swap4\n      pop\n        /* \"#utility.yul\":12006:12009   */\n      dup4\n        /* \"#utility.yul\":12051:12055   */\n      0x20\n        /* \"#utility.yul\":12043:12049   */\n      dup3\n        /* \"#utility.yul\":12039:12056   */\n      mul\n        /* \"#utility.yul\":12034:12037   */\n      dup6\n        /* \"#utility.yul\":12030:12057   */\n      add\n        /* \"#utility.yul\":12081:12147   */\n      tag_508\n        /* \"#utility.yul\":12141:12146   */\n      dup6\n        /* \"#utility.yul\":12081:12147   */\n      tag_356\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12170:12177   */\n      dup1\n        /* \"#utility.yul\":12201:12202   */\n      0x00\n        /* \"#utility.yul\":12186:12582   */\n    tag_509:\n        /* \"#utility.yul\":12211:12217   */\n      dup6\n        /* \"#utility.yul\":12208:12209   */\n      dup2\n        /* \"#utility.yul\":12205:12218   */\n      lt\n        /* \"#utility.yul\":12186:12582   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":12282:12291   */\n      dup5\n        /* \"#utility.yul\":12276:12280   */\n      dup5\n        /* \"#utility.yul\":12272:12292   */\n      sub\n        /* \"#utility.yul\":12267:12270   */\n      dup10\n        /* \"#utility.yul\":12260:12293   */\n      mstore\n        /* \"#utility.yul\":12333:12339   */\n      dup2\n        /* \"#utility.yul\":12327:12340   */\n      mload\n        /* \"#utility.yul\":12361:12445   */\n      tag_512\n        /* \"#utility.yul\":12440:12444   */\n      dup6\n        /* \"#utility.yul\":12425:12438   */\n      dup3\n        /* \"#utility.yul\":12361:12445   */\n      tag_357\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12353:12445   */\n      swap5\n      pop\n        /* \"#utility.yul\":12468:12538   */\n      tag_513\n        /* \"#utility.yul\":12531:12537   */\n      dup4\n        /* \"#utility.yul\":12468:12538   */\n      tag_358\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12458:12538   */\n      swap3\n      pop\n        /* \"#utility.yul\":12567:12571   */\n      0x20\n        /* \"#utility.yul\":12562:12565   */\n      dup11\n        /* \"#utility.yul\":12558:12572   */\n      add\n        /* \"#utility.yul\":12551:12572   */\n      swap10\n      pop\n        /* \"#utility.yul\":12246:12582   */\n      pop\n        /* \"#utility.yul\":12233:12234   */\n      0x01\n        /* \"#utility.yul\":12230:12231   */\n      dup2\n        /* \"#utility.yul\":12226:12235   */\n      add\n        /* \"#utility.yul\":12221:12235   */\n      swap1\n      pop\n        /* \"#utility.yul\":12186:12582   */\n      jump(tag_509)\n    tag_511:\n        /* \"#utility.yul\":12190:12204   */\n      pop\n        /* \"#utility.yul\":12598:12602   */\n      dup3\n        /* \"#utility.yul\":12591:12602   */\n      swap8\n      pop\n        /* \"#utility.yul\":12618:12621   */\n      dup8\n        /* \"#utility.yul\":12611:12621   */\n      swap6\n      pop\n        /* \"#utility.yul\":11780:12627   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11636:12627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12633:13046   */\n    tag_66:\n        /* \"#utility.yul\":12796:12800   */\n      0x00\n        /* \"#utility.yul\":12834:12836   */\n      0x20\n        /* \"#utility.yul\":12823:12832   */\n      dup3\n        /* \"#utility.yul\":12819:12837   */\n      add\n        /* \"#utility.yul\":12811:12837   */\n      swap1\n      pop\n        /* \"#utility.yul\":12883:12892   */\n      dup2\n        /* \"#utility.yul\":12877:12881   */\n      dup2\n        /* \"#utility.yul\":12873:12893   */\n      sub\n        /* \"#utility.yul\":12869:12870   */\n      0x00\n        /* \"#utility.yul\":12858:12867   */\n      dup4\n        /* \"#utility.yul\":12854:12871   */\n      add\n        /* \"#utility.yul\":12847:12894   */\n      mstore\n        /* \"#utility.yul\":12911:13039   */\n      tag_515\n        /* \"#utility.yul\":13034:13038   */\n      dup2\n        /* \"#utility.yul\":13025:13031   */\n      dup5\n        /* \"#utility.yul\":12911:13039   */\n      tag_359\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12903:13039   */\n      swap1\n      pop\n        /* \"#utility.yul\":12633:13046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13052:13170   */\n    tag_360:\n        /* \"#utility.yul\":13139:13163   */\n      tag_517\n        /* \"#utility.yul\":13157:13162   */\n      dup2\n        /* \"#utility.yul\":13139:13163   */\n      tag_335\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13134:13137   */\n      dup3\n        /* \"#utility.yul\":13127:13164   */\n      mstore\n        /* \"#utility.yul\":13052:13170   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13176:13398   */\n    tag_75:\n        /* \"#utility.yul\":13269:13273   */\n      0x00\n        /* \"#utility.yul\":13307:13309   */\n      0x20\n        /* \"#utility.yul\":13296:13305   */\n      dup3\n        /* \"#utility.yul\":13292:13310   */\n      add\n        /* \"#utility.yul\":13284:13310   */\n      swap1\n      pop\n        /* \"#utility.yul\":13320:13391   */\n      tag_519\n        /* \"#utility.yul\":13388:13389   */\n      0x00\n        /* \"#utility.yul\":13377:13386   */\n      dup4\n        /* \"#utility.yul\":13373:13390   */\n      add\n        /* \"#utility.yul\":13364:13370   */\n      dup5\n        /* \"#utility.yul\":13320:13391   */\n      tag_360\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13176:13398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13404:13521   */\n    tag_361:\n        /* \"#utility.yul\":13513:13514   */\n      0x00\n        /* \"#utility.yul\":13510:13511   */\n      dup1\n        /* \"#utility.yul\":13503:13515   */\n      revert\n        /* \"#utility.yul\":13527:13644   */\n    tag_362:\n        /* \"#utility.yul\":13636:13637   */\n      0x00\n        /* \"#utility.yul\":13633:13634   */\n      dup1\n        /* \"#utility.yul\":13626:13638   */\n      revert\n        /* \"#utility.yul\":13650:13830   */\n    tag_137:\n        /* \"#utility.yul\":13698:13775   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13695:13696   */\n      0x00\n        /* \"#utility.yul\":13688:13776   */\n      mstore\n        /* \"#utility.yul\":13795:13799   */\n      0x41\n        /* \"#utility.yul\":13792:13793   */\n      0x04\n        /* \"#utility.yul\":13785:13800   */\n      mstore\n        /* \"#utility.yul\":13819:13823   */\n      0x24\n        /* \"#utility.yul\":13816:13817   */\n      0x00\n        /* \"#utility.yul\":13809:13824   */\n      revert\n        /* \"#utility.yul\":13836:14117   */\n    tag_363:\n        /* \"#utility.yul\":13919:13946   */\n      tag_524\n        /* \"#utility.yul\":13941:13945   */\n      dup3\n        /* \"#utility.yul\":13919:13946   */\n      tag_333\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13911:13917   */\n      dup2\n        /* \"#utility.yul\":13907:13947   */\n      add\n        /* \"#utility.yul\":14049:14055   */\n      dup2\n        /* \"#utility.yul\":14037:14047   */\n      dup2\n        /* \"#utility.yul\":14034:14056   */\n      lt\n        /* \"#utility.yul\":14013:14031   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14001:14011   */\n      dup3\n        /* \"#utility.yul\":13998:14032   */\n      gt\n        /* \"#utility.yul\":13995:14057   */\n      or\n        /* \"#utility.yul\":13992:14080   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":14060:14078   */\n      tag_526\n      tag_137\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13992:14080   */\n    tag_525:\n        /* \"#utility.yul\":14100:14110   */\n      dup1\n        /* \"#utility.yul\":14096:14098   */\n      0x40\n        /* \"#utility.yul\":14089:14111   */\n      mstore\n        /* \"#utility.yul\":13879:14117   */\n      pop\n        /* \"#utility.yul\":13836:14117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14123:14252   */\n    tag_364:\n        /* \"#utility.yul\":14157:14163   */\n      0x00\n        /* \"#utility.yul\":14184:14204   */\n      tag_528\n      tag_322\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14174:14204   */\n      swap1\n      pop\n        /* \"#utility.yul\":14213:14246   */\n      tag_529\n        /* \"#utility.yul\":14241:14245   */\n      dup3\n        /* \"#utility.yul\":14233:14239   */\n      dup3\n        /* \"#utility.yul\":14213:14246   */\n      tag_363\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14123:14252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14258:14566   */\n    tag_365:\n        /* \"#utility.yul\":14320:14324   */\n      0x00\n        /* \"#utility.yul\":14410:14428   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14402:14408   */\n      dup3\n        /* \"#utility.yul\":14399:14429   */\n      gt\n        /* \"#utility.yul\":14396:14452   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":14432:14450   */\n      tag_532\n      tag_137\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14396:14452   */\n    tag_531:\n        /* \"#utility.yul\":14470:14499   */\n      tag_533\n        /* \"#utility.yul\":14492:14498   */\n      dup3\n        /* \"#utility.yul\":14470:14499   */\n      tag_333\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14462:14499   */\n      swap1\n      pop\n        /* \"#utility.yul\":14554:14558   */\n      0x20\n        /* \"#utility.yul\":14548:14552   */\n      dup2\n        /* \"#utility.yul\":14544:14559   */\n      add\n        /* \"#utility.yul\":14536:14559   */\n      swap1\n      pop\n        /* \"#utility.yul\":14258:14566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14572:14718   */\n    tag_366:\n        /* \"#utility.yul\":14669:14675   */\n      dup3\n        /* \"#utility.yul\":14664:14667   */\n      dup2\n        /* \"#utility.yul\":14659:14662   */\n      dup4\n        /* \"#utility.yul\":14646:14676   */\n      calldatacopy\n        /* \"#utility.yul\":14710:14711   */\n      0x00\n        /* \"#utility.yul\":14701:14707   */\n      dup4\n        /* \"#utility.yul\":14696:14699   */\n      dup4\n        /* \"#utility.yul\":14692:14708   */\n      add\n        /* \"#utility.yul\":14685:14712   */\n      mstore\n        /* \"#utility.yul\":14572:14718   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14724:15149   */\n    tag_367:\n        /* \"#utility.yul\":14802:14807   */\n      0x00\n        /* \"#utility.yul\":14827:14893   */\n      tag_536\n        /* \"#utility.yul\":14843:14892   */\n      tag_537\n        /* \"#utility.yul\":14885:14891   */\n      dup5\n        /* \"#utility.yul\":14843:14892   */\n      tag_365\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14827:14893   */\n      tag_364\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14818:14893   */\n      swap1\n      pop\n        /* \"#utility.yul\":14916:14922   */\n      dup3\n        /* \"#utility.yul\":14909:14914   */\n      dup2\n        /* \"#utility.yul\":14902:14923   */\n      mstore\n        /* \"#utility.yul\":14954:14958   */\n      0x20\n        /* \"#utility.yul\":14947:14952   */\n      dup2\n        /* \"#utility.yul\":14943:14959   */\n      add\n        /* \"#utility.yul\":14992:14995   */\n      dup5\n        /* \"#utility.yul\":14983:14989   */\n      dup5\n        /* \"#utility.yul\":14978:14981   */\n      dup5\n        /* \"#utility.yul\":14974:14990   */\n      add\n        /* \"#utility.yul\":14971:14996   */\n      gt\n        /* \"#utility.yul\":14968:15080   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":14999:15078   */\n      tag_539\n      tag_362\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14968:15080   */\n    tag_538:\n        /* \"#utility.yul\":15089:15143   */\n      tag_540\n        /* \"#utility.yul\":15136:15142   */\n      dup5\n        /* \"#utility.yul\":15131:15134   */\n      dup3\n        /* \"#utility.yul\":15126:15129   */\n      dup6\n        /* \"#utility.yul\":15089:15143   */\n      tag_366\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14808:15149   */\n      pop\n        /* \"#utility.yul\":14724:15149   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15169:15509   */\n    tag_368:\n        /* \"#utility.yul\":15225:15230   */\n      0x00\n        /* \"#utility.yul\":15274:15277   */\n      dup3\n        /* \"#utility.yul\":15267:15271   */\n      0x1f\n        /* \"#utility.yul\":15259:15265   */\n      dup4\n        /* \"#utility.yul\":15255:15272   */\n      add\n        /* \"#utility.yul\":15251:15278   */\n      slt\n        /* \"#utility.yul\":15241:15363   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":15282:15361   */\n      tag_543\n      tag_361\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":15241:15363   */\n    tag_542:\n        /* \"#utility.yul\":15399:15405   */\n      dup2\n        /* \"#utility.yul\":15386:15406   */\n      calldataload\n        /* \"#utility.yul\":15424:15503   */\n      tag_544\n        /* \"#utility.yul\":15499:15502   */\n      dup5\n        /* \"#utility.yul\":15491:15497   */\n      dup3\n        /* \"#utility.yul\":15484:15488   */\n      0x20\n        /* \"#utility.yul\":15476:15482   */\n      dup7\n        /* \"#utility.yul\":15472:15489   */\n      add\n        /* \"#utility.yul\":15424:15503   */\n      tag_367\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15415:15503   */\n      swap2\n      pop\n        /* \"#utility.yul\":15231:15509   */\n      pop\n        /* \"#utility.yul\":15169:15509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15515:16024   */\n    tag_78:\n        /* \"#utility.yul\":15584:15590   */\n      0x00\n        /* \"#utility.yul\":15633:15635   */\n      0x20\n        /* \"#utility.yul\":15621:15630   */\n      dup3\n        /* \"#utility.yul\":15612:15619   */\n      dup5\n        /* \"#utility.yul\":15608:15631   */\n      sub\n        /* \"#utility.yul\":15604:15636   */\n      slt\n        /* \"#utility.yul\":15601:15720   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":15639:15718   */\n      tag_547\n      tag_323\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15601:15720   */\n    tag_546:\n        /* \"#utility.yul\":15787:15788   */\n      0x00\n        /* \"#utility.yul\":15776:15785   */\n      dup3\n        /* \"#utility.yul\":15772:15789   */\n      add\n        /* \"#utility.yul\":15759:15790   */\n      calldataload\n        /* \"#utility.yul\":15817:15835   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15809:15815   */\n      dup2\n        /* \"#utility.yul\":15806:15836   */\n      gt\n        /* \"#utility.yul\":15803:15920   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":15839:15918   */\n      tag_549\n      tag_324\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15803:15920   */\n    tag_548:\n        /* \"#utility.yul\":15944:16007   */\n      tag_550\n        /* \"#utility.yul\":15999:16006   */\n      dup5\n        /* \"#utility.yul\":15990:15996   */\n      dup3\n        /* \"#utility.yul\":15979:15988   */\n      dup6\n        /* \"#utility.yul\":15975:15997   */\n      add\n        /* \"#utility.yul\":15944:16007   */\n      tag_368\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15934:16007   */\n      swap2\n      pop\n        /* \"#utility.yul\":15730:16017   */\n      pop\n        /* \"#utility.yul\":15515:16024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16030:16864   */\n    tag_83:\n        /* \"#utility.yul\":16118:16124   */\n      0x00\n        /* \"#utility.yul\":16126:16132   */\n      dup1\n        /* \"#utility.yul\":16175:16177   */\n      0x40\n        /* \"#utility.yul\":16163:16172   */\n      dup4\n        /* \"#utility.yul\":16154:16161   */\n      dup6\n        /* \"#utility.yul\":16150:16173   */\n      sub\n        /* \"#utility.yul\":16146:16178   */\n      slt\n        /* \"#utility.yul\":16143:16262   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":16181:16260   */\n      tag_553\n      tag_323\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":16143:16262   */\n    tag_552:\n        /* \"#utility.yul\":16329:16330   */\n      0x00\n        /* \"#utility.yul\":16318:16327   */\n      dup4\n        /* \"#utility.yul\":16314:16331   */\n      add\n        /* \"#utility.yul\":16301:16332   */\n      calldataload\n        /* \"#utility.yul\":16359:16377   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16351:16357   */\n      dup2\n        /* \"#utility.yul\":16348:16378   */\n      gt\n        /* \"#utility.yul\":16345:16462   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":16381:16460   */\n      tag_555\n      tag_324\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16345:16462   */\n    tag_554:\n        /* \"#utility.yul\":16486:16549   */\n      tag_556\n        /* \"#utility.yul\":16541:16548   */\n      dup6\n        /* \"#utility.yul\":16532:16538   */\n      dup3\n        /* \"#utility.yul\":16521:16530   */\n      dup7\n        /* \"#utility.yul\":16517:16539   */\n      add\n        /* \"#utility.yul\":16486:16549   */\n      tag_368\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":16476:16549   */\n      swap3\n      pop\n        /* \"#utility.yul\":16272:16559   */\n      pop\n        /* \"#utility.yul\":16626:16628   */\n      0x20\n        /* \"#utility.yul\":16615:16624   */\n      dup4\n        /* \"#utility.yul\":16611:16629   */\n      add\n        /* \"#utility.yul\":16598:16630   */\n      calldataload\n        /* \"#utility.yul\":16657:16675   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16649:16655   */\n      dup2\n        /* \"#utility.yul\":16646:16676   */\n      gt\n        /* \"#utility.yul\":16643:16760   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":16679:16758   */\n      tag_558\n      tag_324\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":16643:16760   */\n    tag_557:\n        /* \"#utility.yul\":16784:16847   */\n      tag_559\n        /* \"#utility.yul\":16839:16846   */\n      dup6\n        /* \"#utility.yul\":16830:16836   */\n      dup3\n        /* \"#utility.yul\":16819:16828   */\n      dup7\n        /* \"#utility.yul\":16815:16837   */\n      add\n        /* \"#utility.yul\":16784:16847   */\n      tag_368\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":16774:16847   */\n      swap2\n      pop\n        /* \"#utility.yul\":16569:16857   */\n      pop\n        /* \"#utility.yul\":16030:16864   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16870:16986   */\n    tag_369:\n        /* \"#utility.yul\":16940:16961   */\n      tag_561\n        /* \"#utility.yul\":16955:16960   */\n      dup2\n        /* \"#utility.yul\":16940:16961   */\n      tag_328\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16933:16938   */\n      dup2\n        /* \"#utility.yul\":16930:16962   */\n      eq\n        /* \"#utility.yul\":16920:16980   */\n      tag_562\n      jumpi\n        /* \"#utility.yul\":16976:16977   */\n      0x00\n        /* \"#utility.yul\":16973:16974   */\n      dup1\n        /* \"#utility.yul\":16966:16978   */\n      revert\n        /* \"#utility.yul\":16920:16980   */\n    tag_562:\n        /* \"#utility.yul\":16870:16986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16992:17125   */\n    tag_370:\n        /* \"#utility.yul\":17035:17040   */\n      0x00\n        /* \"#utility.yul\":17073:17079   */\n      dup2\n        /* \"#utility.yul\":17060:17080   */\n      calldataload\n        /* \"#utility.yul\":17051:17080   */\n      swap1\n      pop\n        /* \"#utility.yul\":17089:17119   */\n      tag_564\n        /* \"#utility.yul\":17113:17118   */\n      dup2\n        /* \"#utility.yul\":17089:17119   */\n      tag_369\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":16992:17125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17131:17599   */\n    tag_91:\n        /* \"#utility.yul\":17196:17202   */\n      0x00\n        /* \"#utility.yul\":17204:17210   */\n      dup1\n        /* \"#utility.yul\":17253:17255   */\n      0x40\n        /* \"#utility.yul\":17241:17250   */\n      dup4\n        /* \"#utility.yul\":17232:17239   */\n      dup6\n        /* \"#utility.yul\":17228:17251   */\n      sub\n        /* \"#utility.yul\":17224:17256   */\n      slt\n        /* \"#utility.yul\":17221:17340   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":17259:17338   */\n      tag_567\n      tag_323\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17221:17340   */\n    tag_566:\n        /* \"#utility.yul\":17379:17380   */\n      0x00\n        /* \"#utility.yul\":17404:17457   */\n      tag_568\n        /* \"#utility.yul\":17449:17456   */\n      dup6\n        /* \"#utility.yul\":17440:17446   */\n      dup3\n        /* \"#utility.yul\":17429:17438   */\n      dup7\n        /* \"#utility.yul\":17425:17447   */\n      add\n        /* \"#utility.yul\":17404:17457   */\n      tag_342\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17394:17457   */\n      swap3\n      pop\n        /* \"#utility.yul\":17350:17467   */\n      pop\n        /* \"#utility.yul\":17506:17508   */\n      0x20\n        /* \"#utility.yul\":17532:17582   */\n      tag_569\n        /* \"#utility.yul\":17574:17581   */\n      dup6\n        /* \"#utility.yul\":17565:17571   */\n      dup3\n        /* \"#utility.yul\":17554:17563   */\n      dup7\n        /* \"#utility.yul\":17550:17572   */\n      add\n        /* \"#utility.yul\":17532:17582   */\n      tag_370\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":17522:17582   */\n      swap2\n      pop\n        /* \"#utility.yul\":17477:17592   */\n      pop\n        /* \"#utility.yul\":17131:17599   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17605:17912   */\n    tag_371:\n        /* \"#utility.yul\":17666:17670   */\n      0x00\n        /* \"#utility.yul\":17756:17774   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17748:17754   */\n      dup3\n        /* \"#utility.yul\":17745:17775   */\n      gt\n        /* \"#utility.yul\":17742:17798   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":17778:17796   */\n      tag_572\n      tag_137\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17742:17798   */\n    tag_571:\n        /* \"#utility.yul\":17816:17845   */\n      tag_573\n        /* \"#utility.yul\":17838:17844   */\n      dup3\n        /* \"#utility.yul\":17816:17845   */\n      tag_333\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17808:17845   */\n      swap1\n      pop\n        /* \"#utility.yul\":17900:17904   */\n      0x20\n        /* \"#utility.yul\":17894:17898   */\n      dup2\n        /* \"#utility.yul\":17890:17905   */\n      add\n        /* \"#utility.yul\":17882:17905   */\n      swap1\n      pop\n        /* \"#utility.yul\":17605:17912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17918:18341   */\n    tag_372:\n        /* \"#utility.yul\":17995:18000   */\n      0x00\n        /* \"#utility.yul\":18020:18085   */\n      tag_575\n        /* \"#utility.yul\":18036:18084   */\n      tag_576\n        /* \"#utility.yul\":18077:18083   */\n      dup5\n        /* \"#utility.yul\":18036:18084   */\n      tag_371\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":18020:18085   */\n      tag_364\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":18011:18085   */\n      swap1\n      pop\n        /* \"#utility.yul\":18108:18114   */\n      dup3\n        /* \"#utility.yul\":18101:18106   */\n      dup2\n        /* \"#utility.yul\":18094:18115   */\n      mstore\n        /* \"#utility.yul\":18146:18150   */\n      0x20\n        /* \"#utility.yul\":18139:18144   */\n      dup2\n        /* \"#utility.yul\":18135:18151   */\n      add\n        /* \"#utility.yul\":18184:18187   */\n      dup5\n        /* \"#utility.yul\":18175:18181   */\n      dup5\n        /* \"#utility.yul\":18170:18173   */\n      dup5\n        /* \"#utility.yul\":18166:18182   */\n      add\n        /* \"#utility.yul\":18163:18188   */\n      gt\n        /* \"#utility.yul\":18160:18272   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":18191:18270   */\n      tag_578\n      tag_362\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18160:18272   */\n    tag_577:\n        /* \"#utility.yul\":18281:18335   */\n      tag_579\n        /* \"#utility.yul\":18328:18334   */\n      dup5\n        /* \"#utility.yul\":18323:18326   */\n      dup3\n        /* \"#utility.yul\":18318:18321   */\n      dup6\n        /* \"#utility.yul\":18281:18335   */\n      tag_366\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18001:18341   */\n      pop\n        /* \"#utility.yul\":17918:18341   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18360:18698   */\n    tag_373:\n        /* \"#utility.yul\":18415:18420   */\n      0x00\n        /* \"#utility.yul\":18464:18467   */\n      dup3\n        /* \"#utility.yul\":18457:18461   */\n      0x1f\n        /* \"#utility.yul\":18449:18455   */\n      dup4\n        /* \"#utility.yul\":18445:18462   */\n      add\n        /* \"#utility.yul\":18441:18468   */\n      slt\n        /* \"#utility.yul\":18431:18553   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":18472:18551   */\n      tag_582\n      tag_361\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18431:18553   */\n    tag_581:\n        /* \"#utility.yul\":18589:18595   */\n      dup2\n        /* \"#utility.yul\":18576:18596   */\n      calldataload\n        /* \"#utility.yul\":18614:18692   */\n      tag_583\n        /* \"#utility.yul\":18688:18691   */\n      dup5\n        /* \"#utility.yul\":18680:18686   */\n      dup3\n        /* \"#utility.yul\":18673:18677   */\n      0x20\n        /* \"#utility.yul\":18665:18671   */\n      dup7\n        /* \"#utility.yul\":18661:18678   */\n      add\n        /* \"#utility.yul\":18614:18692   */\n      tag_372\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":18605:18692   */\n      swap2\n      pop\n        /* \"#utility.yul\":18421:18698   */\n      pop\n        /* \"#utility.yul\":18360:18698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18704:19647   */\n    tag_95:\n        /* \"#utility.yul\":18799:18805   */\n      0x00\n        /* \"#utility.yul\":18807:18813   */\n      dup1\n        /* \"#utility.yul\":18815:18821   */\n      0x00\n        /* \"#utility.yul\":18823:18829   */\n      dup1\n        /* \"#utility.yul\":18872:18875   */\n      0x80\n        /* \"#utility.yul\":18860:18869   */\n      dup6\n        /* \"#utility.yul\":18851:18858   */\n      dup8\n        /* \"#utility.yul\":18847:18870   */\n      sub\n        /* \"#utility.yul\":18843:18876   */\n      slt\n        /* \"#utility.yul\":18840:18960   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":18879:18958   */\n      tag_586\n      tag_323\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":18840:18960   */\n    tag_585:\n        /* \"#utility.yul\":18999:19000   */\n      0x00\n        /* \"#utility.yul\":19024:19077   */\n      tag_587\n        /* \"#utility.yul\":19069:19076   */\n      dup8\n        /* \"#utility.yul\":19060:19066   */\n      dup3\n        /* \"#utility.yul\":19049:19058   */\n      dup9\n        /* \"#utility.yul\":19045:19067   */\n      add\n        /* \"#utility.yul\":19024:19077   */\n      tag_342\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":19014:19077   */\n      swap5\n      pop\n        /* \"#utility.yul\":18970:19087   */\n      pop\n        /* \"#utility.yul\":19126:19128   */\n      0x20\n        /* \"#utility.yul\":19152:19205   */\n      tag_588\n        /* \"#utility.yul\":19197:19204   */\n      dup8\n        /* \"#utility.yul\":19188:19194   */\n      dup3\n        /* \"#utility.yul\":19177:19186   */\n      dup9\n        /* \"#utility.yul\":19173:19195   */\n      add\n        /* \"#utility.yul\":19152:19205   */\n      tag_342\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":19142:19205   */\n      swap4\n      pop\n        /* \"#utility.yul\":19097:19215   */\n      pop\n        /* \"#utility.yul\":19254:19256   */\n      0x40\n        /* \"#utility.yul\":19280:19333   */\n      tag_589\n        /* \"#utility.yul\":19325:19332   */\n      dup8\n        /* \"#utility.yul\":19316:19322   */\n      dup3\n        /* \"#utility.yul\":19305:19314   */\n      dup9\n        /* \"#utility.yul\":19301:19323   */\n      add\n        /* \"#utility.yul\":19280:19333   */\n      tag_337\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":19270:19333   */\n      swap3\n      pop\n        /* \"#utility.yul\":19225:19343   */\n      pop\n        /* \"#utility.yul\":19410:19412   */\n      0x60\n        /* \"#utility.yul\":19399:19408   */\n      dup6\n        /* \"#utility.yul\":19395:19413   */\n      add\n        /* \"#utility.yul\":19382:19414   */\n      calldataload\n        /* \"#utility.yul\":19441:19459   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19433:19439   */\n      dup2\n        /* \"#utility.yul\":19430:19460   */\n      gt\n        /* \"#utility.yul\":19427:19544   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":19463:19542   */\n      tag_591\n      tag_324\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19427:19544   */\n    tag_590:\n        /* \"#utility.yul\":19568:19630   */\n      tag_592\n        /* \"#utility.yul\":19622:19629   */\n      dup8\n        /* \"#utility.yul\":19613:19619   */\n      dup3\n        /* \"#utility.yul\":19602:19611   */\n      dup9\n        /* \"#utility.yul\":19598:19620   */\n      add\n        /* \"#utility.yul\":19568:19630   */\n      tag_373\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19558:19630   */\n      swap2\n      pop\n        /* \"#utility.yul\":19353:19640   */\n      pop\n        /* \"#utility.yul\":18704:19647   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19653:20127   */\n    tag_107:\n        /* \"#utility.yul\":19721:19727   */\n      0x00\n        /* \"#utility.yul\":19729:19735   */\n      dup1\n        /* \"#utility.yul\":19778:19780   */\n      0x40\n        /* \"#utility.yul\":19766:19775   */\n      dup4\n        /* \"#utility.yul\":19757:19764   */\n      dup6\n        /* \"#utility.yul\":19753:19776   */\n      sub\n        /* \"#utility.yul\":19749:19781   */\n      slt\n        /* \"#utility.yul\":19746:19865   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":19784:19863   */\n      tag_595\n      tag_323\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19746:19865   */\n    tag_594:\n        /* \"#utility.yul\":19904:19905   */\n      0x00\n        /* \"#utility.yul\":19929:19982   */\n      tag_596\n        /* \"#utility.yul\":19974:19981   */\n      dup6\n        /* \"#utility.yul\":19965:19971   */\n      dup3\n        /* \"#utility.yul\":19954:19963   */\n      dup7\n        /* \"#utility.yul\":19950:19972   */\n      add\n        /* \"#utility.yul\":19929:19982   */\n      tag_342\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19919:19982   */\n      swap3\n      pop\n        /* \"#utility.yul\":19875:19992   */\n      pop\n        /* \"#utility.yul\":20031:20033   */\n      0x20\n        /* \"#utility.yul\":20057:20110   */\n      tag_597\n        /* \"#utility.yul\":20102:20109   */\n      dup6\n        /* \"#utility.yul\":20093:20099   */\n      dup3\n        /* \"#utility.yul\":20082:20091   */\n      dup7\n        /* \"#utility.yul\":20078:20100   */\n      add\n        /* \"#utility.yul\":20057:20110   */\n      tag_342\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20047:20110   */\n      swap2\n      pop\n        /* \"#utility.yul\":20002:20120   */\n      pop\n        /* \"#utility.yul\":19653:20127   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20133:20313   */\n    tag_374:\n        /* \"#utility.yul\":20181:20258   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20178:20179   */\n      0x00\n        /* \"#utility.yul\":20171:20259   */\n      mstore\n        /* \"#utility.yul\":20278:20282   */\n      0x22\n        /* \"#utility.yul\":20275:20276   */\n      0x04\n        /* \"#utility.yul\":20268:20283   */\n      mstore\n        /* \"#utility.yul\":20302:20306   */\n      0x24\n        /* \"#utility.yul\":20299:20300   */\n      0x00\n        /* \"#utility.yul\":20292:20307   */\n      revert\n        /* \"#utility.yul\":20319:20639   */\n    tag_117:\n        /* \"#utility.yul\":20363:20369   */\n      0x00\n        /* \"#utility.yul\":20400:20401   */\n      0x02\n        /* \"#utility.yul\":20394:20398   */\n      dup3\n        /* \"#utility.yul\":20390:20402   */\n      div\n        /* \"#utility.yul\":20380:20402   */\n      swap1\n      pop\n        /* \"#utility.yul\":20447:20448   */\n      0x01\n        /* \"#utility.yul\":20441:20445   */\n      dup3\n        /* \"#utility.yul\":20437:20449   */\n      and\n        /* \"#utility.yul\":20468:20486   */\n      dup1\n        /* \"#utility.yul\":20458:20539   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":20524:20528   */\n      0x7f\n        /* \"#utility.yul\":20516:20522   */\n      dup3\n        /* \"#utility.yul\":20512:20529   */\n      and\n        /* \"#utility.yul\":20502:20529   */\n      swap2\n      pop\n        /* \"#utility.yul\":20458:20539   */\n    tag_600:\n        /* \"#utility.yul\":20586:20588   */\n      0x20\n        /* \"#utility.yul\":20578:20584   */\n      dup3\n        /* \"#utility.yul\":20575:20589   */\n      lt\n        /* \"#utility.yul\":20555:20573   */\n      dup2\n        /* \"#utility.yul\":20552:20590   */\n      sub\n        /* \"#utility.yul\":20549:20633   */\n      tag_601\n      jumpi\n        /* \"#utility.yul\":20605:20623   */\n      tag_602\n      tag_374\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":20549:20633   */\n    tag_601:\n        /* \"#utility.yul\":20370:20639   */\n      pop\n        /* \"#utility.yul\":20319:20639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20645:20825   */\n    tag_147:\n        /* \"#utility.yul\":20693:20770   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20690:20691   */\n      0x00\n        /* \"#utility.yul\":20683:20771   */\n      mstore\n        /* \"#utility.yul\":20790:20794   */\n      0x32\n        /* \"#utility.yul\":20787:20788   */\n      0x04\n        /* \"#utility.yul\":20780:20795   */\n      mstore\n        /* \"#utility.yul\":20814:20818   */\n      0x24\n        /* \"#utility.yul\":20811:20812   */\n      0x00\n        /* \"#utility.yul\":20804:20819   */\n      revert\n        /* \"#utility.yul\":20831:21011   */\n    tag_375:\n        /* \"#utility.yul\":20879:20956   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20876:20877   */\n      0x00\n        /* \"#utility.yul\":20869:20957   */\n      mstore\n        /* \"#utility.yul\":20976:20980   */\n      0x11\n        /* \"#utility.yul\":20973:20974   */\n      0x04\n        /* \"#utility.yul\":20966:20981   */\n      mstore\n        /* \"#utility.yul\":21000:21004   */\n      0x24\n        /* \"#utility.yul\":20997:20998   */\n      0x00\n        /* \"#utility.yul\":20990:21005   */\n      revert\n        /* \"#utility.yul\":21017:21250   */\n    tag_158:\n        /* \"#utility.yul\":21056:21059   */\n      0x00\n        /* \"#utility.yul\":21079:21103   */\n      tag_606\n        /* \"#utility.yul\":21097:21102   */\n      dup3\n        /* \"#utility.yul\":21079:21103   */\n      tag_335\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":21070:21103   */\n      swap2\n      pop\n        /* \"#utility.yul\":21125:21191   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21118:21123   */\n      dup3\n        /* \"#utility.yul\":21115:21192   */\n      sub\n        /* \"#utility.yul\":21112:21215   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":21195:21213   */\n      tag_608\n      tag_375\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21112:21215   */\n    tag_607:\n        /* \"#utility.yul\":21242:21243   */\n      0x01\n        /* \"#utility.yul\":21235:21240   */\n      dup3\n        /* \"#utility.yul\":21231:21244   */\n      add\n        /* \"#utility.yul\":21224:21244   */\n      swap1\n      pop\n        /* \"#utility.yul\":21017:21250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21256:21698   */\n    tag_167:\n        /* \"#utility.yul\":21405:21409   */\n      0x00\n        /* \"#utility.yul\":21443:21445   */\n      0x60\n        /* \"#utility.yul\":21432:21441   */\n      dup3\n        /* \"#utility.yul\":21428:21446   */\n      add\n        /* \"#utility.yul\":21420:21446   */\n      swap1\n      pop\n        /* \"#utility.yul\":21456:21527   */\n      tag_610\n        /* \"#utility.yul\":21524:21525   */\n      0x00\n        /* \"#utility.yul\":21513:21522   */\n      dup4\n        /* \"#utility.yul\":21509:21526   */\n      add\n        /* \"#utility.yul\":21500:21506   */\n      dup7\n        /* \"#utility.yul\":21456:21527   */\n      tag_340\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":21537:21609   */\n      tag_611\n        /* \"#utility.yul\":21605:21607   */\n      0x20\n        /* \"#utility.yul\":21594:21603   */\n      dup4\n        /* \"#utility.yul\":21590:21608   */\n      add\n        /* \"#utility.yul\":21581:21587   */\n      dup6\n        /* \"#utility.yul\":21537:21609   */\n      tag_360\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":21619:21691   */\n      tag_612\n        /* \"#utility.yul\":21687:21689   */\n      0x40\n        /* \"#utility.yul\":21676:21685   */\n      dup4\n        /* \"#utility.yul\":21672:21690   */\n      add\n        /* \"#utility.yul\":21663:21669   */\n      dup5\n        /* \"#utility.yul\":21619:21691   */\n      tag_340\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21256:21698   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21704:21852   */\n    tag_376:\n        /* \"#utility.yul\":21806:21817   */\n      0x00\n        /* \"#utility.yul\":21843:21846   */\n      dup2\n        /* \"#utility.yul\":21828:21846   */\n      swap1\n      pop\n        /* \"#utility.yul\":21704:21852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21858:22248   */\n    tag_377:\n        /* \"#utility.yul\":21964:21967   */\n      0x00\n        /* \"#utility.yul\":21992:22031   */\n      tag_615\n        /* \"#utility.yul\":22025:22030   */\n      dup3\n        /* \"#utility.yul\":21992:22031   */\n      tag_330\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":22047:22136   */\n      tag_616\n        /* \"#utility.yul\":22129:22135   */\n      dup2\n        /* \"#utility.yul\":22124:22127   */\n      dup6\n        /* \"#utility.yul\":22047:22136   */\n      tag_376\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":22040:22136   */\n      swap4\n      pop\n        /* \"#utility.yul\":22145:22210   */\n      tag_617\n        /* \"#utility.yul\":22203:22209   */\n      dup2\n        /* \"#utility.yul\":22198:22201   */\n      dup6\n        /* \"#utility.yul\":22191:22195   */\n      0x20\n        /* \"#utility.yul\":22184:22189   */\n      dup7\n        /* \"#utility.yul\":22180:22196   */\n      add\n        /* \"#utility.yul\":22145:22210   */\n      tag_332\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":22235:22241   */\n      dup1\n        /* \"#utility.yul\":22230:22233   */\n      dup5\n        /* \"#utility.yul\":22226:22242   */\n      add\n        /* \"#utility.yul\":22219:22242   */\n      swap2\n      pop\n        /* \"#utility.yul\":21968:22248   */\n      pop\n        /* \"#utility.yul\":21858:22248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22254:22529   */\n    tag_203:\n        /* \"#utility.yul\":22386:22389   */\n      0x00\n        /* \"#utility.yul\":22408:22503   */\n      tag_619\n        /* \"#utility.yul\":22499:22502   */\n      dup3\n        /* \"#utility.yul\":22490:22496   */\n      dup5\n        /* \"#utility.yul\":22408:22503   */\n      tag_377\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":22401:22503   */\n      swap2\n      pop\n        /* \"#utility.yul\":22520:22523   */\n      dup2\n        /* \"#utility.yul\":22513:22523   */\n      swap1\n      pop\n        /* \"#utility.yul\":22254:22529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22535:22715   */\n    tag_378:\n        /* \"#utility.yul\":22583:22660   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22580:22581   */\n      0x00\n        /* \"#utility.yul\":22573:22661   */\n      mstore\n        /* \"#utility.yul\":22680:22684   */\n      0x12\n        /* \"#utility.yul\":22677:22678   */\n      0x04\n        /* \"#utility.yul\":22670:22685   */\n      mstore\n        /* \"#utility.yul\":22704:22708   */\n      0x24\n        /* \"#utility.yul\":22701:22702   */\n      0x00\n        /* \"#utility.yul\":22694:22709   */\n      revert\n        /* \"#utility.yul\":22721:22897   */\n    tag_205:\n        /* \"#utility.yul\":22753:22754   */\n      0x00\n        /* \"#utility.yul\":22770:22790   */\n      tag_622\n        /* \"#utility.yul\":22788:22789   */\n      dup3\n        /* \"#utility.yul\":22770:22790   */\n      tag_335\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22765:22790   */\n      swap2\n      pop\n        /* \"#utility.yul\":22804:22824   */\n      tag_623\n        /* \"#utility.yul\":22822:22823   */\n      dup4\n        /* \"#utility.yul\":22804:22824   */\n      tag_335\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":22799:22824   */\n      swap3\n      pop\n        /* \"#utility.yul\":22843:22844   */\n      dup3\n        /* \"#utility.yul\":22833:22868   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":22848:22866   */\n      tag_625\n      tag_378\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":22833:22868   */\n    tag_624:\n        /* \"#utility.yul\":22889:22890   */\n      dup3\n        /* \"#utility.yul\":22886:22887   */\n      dup3\n        /* \"#utility.yul\":22882:22891   */\n      mod\n        /* \"#utility.yul\":22877:22891   */\n      swap1\n      pop\n        /* \"#utility.yul\":22721:22897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22903:23094   */\n    tag_207:\n        /* \"#utility.yul\":22943:22946   */\n      0x00\n        /* \"#utility.yul\":22962:22982   */\n      tag_627\n        /* \"#utility.yul\":22980:22981   */\n      dup3\n        /* \"#utility.yul\":22962:22982   */\n      tag_335\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":22957:22982   */\n      swap2\n      pop\n        /* \"#utility.yul\":22996:23016   */\n      tag_628\n        /* \"#utility.yul\":23014:23015   */\n      dup4\n        /* \"#utility.yul\":22996:23016   */\n      tag_335\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":22991:23016   */\n      swap3\n      pop\n        /* \"#utility.yul\":23039:23040   */\n      dup3\n        /* \"#utility.yul\":23036:23037   */\n      dup3\n        /* \"#utility.yul\":23032:23041   */\n      add\n        /* \"#utility.yul\":23025:23041   */\n      swap1\n      pop\n        /* \"#utility.yul\":23060:23063   */\n      dup1\n        /* \"#utility.yul\":23057:23058   */\n      dup3\n        /* \"#utility.yul\":23054:23064   */\n      gt\n        /* \"#utility.yul\":23051:23087   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":23067:23085   */\n      tag_630\n      tag_375\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23051:23087   */\n    tag_629:\n        /* \"#utility.yul\":22903:23094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23100:23241   */\n    tag_379:\n        /* \"#utility.yul\":23149:23153   */\n      0x00\n        /* \"#utility.yul\":23172:23175   */\n      dup2\n        /* \"#utility.yul\":23164:23175   */\n      swap1\n      pop\n        /* \"#utility.yul\":23195:23198   */\n      dup2\n        /* \"#utility.yul\":23192:23193   */\n      0x00\n        /* \"#utility.yul\":23185:23199   */\n      mstore\n        /* \"#utility.yul\":23229:23233   */\n      0x20\n        /* \"#utility.yul\":23226:23227   */\n      0x00\n        /* \"#utility.yul\":23216:23234   */\n      keccak256\n        /* \"#utility.yul\":23208:23234   */\n      swap1\n      pop\n        /* \"#utility.yul\":23100:23241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23247:23340   */\n    tag_380:\n        /* \"#utility.yul\":23284:23290   */\n      0x00\n        /* \"#utility.yul\":23331:23333   */\n      0x20\n        /* \"#utility.yul\":23326:23328   */\n      0x1f\n        /* \"#utility.yul\":23319:23324   */\n      dup4\n        /* \"#utility.yul\":23315:23329   */\n      add\n        /* \"#utility.yul\":23311:23334   */\n      div\n        /* \"#utility.yul\":23301:23334   */\n      swap1\n      pop\n        /* \"#utility.yul\":23247:23340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23346:23453   */\n    tag_381:\n        /* \"#utility.yul\":23390:23398   */\n      0x00\n        /* \"#utility.yul\":23440:23445   */\n      dup3\n        /* \"#utility.yul\":23434:23438   */\n      dup3\n        /* \"#utility.yul\":23430:23446   */\n      shl\n        /* \"#utility.yul\":23409:23446   */\n      swap1\n      pop\n        /* \"#utility.yul\":23346:23453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23459:23852   */\n    tag_382:\n        /* \"#utility.yul\":23528:23534   */\n      0x00\n        /* \"#utility.yul\":23578:23579   */\n      0x08\n        /* \"#utility.yul\":23566:23576   */\n      dup4\n        /* \"#utility.yul\":23562:23580   */\n      mul\n        /* \"#utility.yul\":23601:23698   */\n      tag_635\n        /* \"#utility.yul\":23631:23697   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23620:23629   */\n      dup3\n        /* \"#utility.yul\":23601:23698   */\n      tag_381\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":23719:23758   */\n      tag_636\n        /* \"#utility.yul\":23749:23757   */\n      dup7\n        /* \"#utility.yul\":23738:23747   */\n      dup4\n        /* \"#utility.yul\":23719:23758   */\n      tag_381\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":23707:23758   */\n      swap6\n      pop\n        /* \"#utility.yul\":23791:23795   */\n      dup1\n        /* \"#utility.yul\":23787:23796   */\n      not\n        /* \"#utility.yul\":23780:23785   */\n      dup5\n        /* \"#utility.yul\":23776:23797   */\n      and\n        /* \"#utility.yul\":23767:23797   */\n      swap4\n      pop\n        /* \"#utility.yul\":23840:23844   */\n      dup1\n        /* \"#utility.yul\":23830:23838   */\n      dup7\n        /* \"#utility.yul\":23826:23845   */\n      and\n        /* \"#utility.yul\":23819:23824   */\n      dup5\n        /* \"#utility.yul\":23816:23846   */\n      or\n        /* \"#utility.yul\":23806:23846   */\n      swap3\n      pop\n        /* \"#utility.yul\":23535:23852   */\n      pop\n      pop\n        /* \"#utility.yul\":23459:23852   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23858:23918   */\n    tag_383:\n        /* \"#utility.yul\":23886:23889   */\n      0x00\n        /* \"#utility.yul\":23907:23912   */\n      dup2\n        /* \"#utility.yul\":23900:23912   */\n      swap1\n      pop\n        /* \"#utility.yul\":23858:23918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23924:24066   */\n    tag_384:\n        /* \"#utility.yul\":23974:23983   */\n      0x00\n        /* \"#utility.yul\":24007:24060   */\n      tag_639\n        /* \"#utility.yul\":24025:24059   */\n      tag_640\n        /* \"#utility.yul\":24034:24058   */\n      tag_641\n        /* \"#utility.yul\":24052:24057   */\n      dup5\n        /* \"#utility.yul\":24034:24058   */\n      tag_335\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":24025:24059   */\n      tag_383\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":24007:24060   */\n      tag_335\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":23994:24060   */\n      swap1\n      pop\n        /* \"#utility.yul\":23924:24066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24072:24147   */\n    tag_385:\n        /* \"#utility.yul\":24115:24118   */\n      0x00\n        /* \"#utility.yul\":24136:24141   */\n      dup2\n        /* \"#utility.yul\":24129:24141   */\n      swap1\n      pop\n        /* \"#utility.yul\":24072:24147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24153:24422   */\n    tag_386:\n        /* \"#utility.yul\":24263:24302   */\n      tag_644\n        /* \"#utility.yul\":24294:24301   */\n      dup4\n        /* \"#utility.yul\":24263:24302   */\n      tag_384\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":24324:24415   */\n      tag_645\n        /* \"#utility.yul\":24373:24414   */\n      tag_646\n        /* \"#utility.yul\":24397:24413   */\n      dup3\n        /* \"#utility.yul\":24373:24414   */\n      tag_385\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":24365:24371   */\n      dup5\n        /* \"#utility.yul\":24358:24362   */\n      dup5\n        /* \"#utility.yul\":24352:24363   */\n      sload\n        /* \"#utility.yul\":24324:24415   */\n      tag_382\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":24318:24322   */\n      dup3\n        /* \"#utility.yul\":24311:24416   */\n      sstore\n        /* \"#utility.yul\":24229:24422   */\n      pop\n        /* \"#utility.yul\":24153:24422   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24428:24501   */\n    tag_387:\n        /* \"#utility.yul\":24473:24476   */\n      0x00\n        /* \"#utility.yul\":24428:24501   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24507:24696   */\n    tag_388:\n        /* \"#utility.yul\":24584:24616   */\n      tag_649\n      tag_387\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":24625:24690   */\n      tag_650\n        /* \"#utility.yul\":24683:24689   */\n      dup2\n        /* \"#utility.yul\":24675:24681   */\n      dup5\n        /* \"#utility.yul\":24669:24673   */\n      dup5\n        /* \"#utility.yul\":24625:24690   */\n      tag_386\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":24560:24696   */\n      pop\n        /* \"#utility.yul\":24507:24696   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24702:24888   */\n    tag_389:\n        /* \"#utility.yul\":24762:24882   */\n    tag_652:\n        /* \"#utility.yul\":24779:24782   */\n      dup2\n        /* \"#utility.yul\":24772:24777   */\n      dup2\n        /* \"#utility.yul\":24769:24783   */\n      lt\n        /* \"#utility.yul\":24762:24882   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":24833:24872   */\n      tag_655\n        /* \"#utility.yul\":24870:24871   */\n      0x00\n        /* \"#utility.yul\":24863:24868   */\n      dup3\n        /* \"#utility.yul\":24833:24872   */\n      tag_388\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":24806:24807   */\n      0x01\n        /* \"#utility.yul\":24799:24804   */\n      dup2\n        /* \"#utility.yul\":24795:24808   */\n      add\n        /* \"#utility.yul\":24786:24808   */\n      swap1\n      pop\n        /* \"#utility.yul\":24762:24882   */\n      jump(tag_652)\n    tag_654:\n        /* \"#utility.yul\":24702:24888   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24894:25437   */\n    tag_390:\n        /* \"#utility.yul\":24995:24997   */\n      0x1f\n        /* \"#utility.yul\":24990:24993   */\n      dup3\n        /* \"#utility.yul\":24987:24998   */\n      gt\n        /* \"#utility.yul\":24984:25430   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":25029:25067   */\n      tag_658\n        /* \"#utility.yul\":25061:25066   */\n      dup2\n        /* \"#utility.yul\":25029:25067   */\n      tag_379\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":25113:25142   */\n      tag_659\n        /* \"#utility.yul\":25131:25141   */\n      dup5\n        /* \"#utility.yul\":25113:25142   */\n      tag_380\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":25103:25111   */\n      dup2\n        /* \"#utility.yul\":25099:25143   */\n      add\n        /* \"#utility.yul\":25296:25298   */\n      0x20\n        /* \"#utility.yul\":25284:25294   */\n      dup6\n        /* \"#utility.yul\":25281:25299   */\n      lt\n        /* \"#utility.yul\":25278:25327   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":25317:25325   */\n      dup2\n        /* \"#utility.yul\":25302:25325   */\n      swap1\n      pop\n        /* \"#utility.yul\":25278:25327   */\n    tag_660:\n        /* \"#utility.yul\":25340:25420   */\n      tag_661\n        /* \"#utility.yul\":25396:25418   */\n      tag_662\n        /* \"#utility.yul\":25414:25417   */\n      dup6\n        /* \"#utility.yul\":25396:25418   */\n      tag_380\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":25386:25394   */\n      dup4\n        /* \"#utility.yul\":25382:25419   */\n      add\n        /* \"#utility.yul\":25369:25380   */\n      dup3\n        /* \"#utility.yul\":25340:25420   */\n      tag_389\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":24999:25430   */\n      pop\n      pop\n        /* \"#utility.yul\":24984:25430   */\n    tag_657:\n        /* \"#utility.yul\":24894:25437   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25443:25560   */\n    tag_391:\n        /* \"#utility.yul\":25497:25505   */\n      0x00\n        /* \"#utility.yul\":25547:25552   */\n      dup3\n        /* \"#utility.yul\":25541:25545   */\n      dup3\n        /* \"#utility.yul\":25537:25553   */\n      shr\n        /* \"#utility.yul\":25516:25553   */\n      swap1\n      pop\n        /* \"#utility.yul\":25443:25560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25566:25735   */\n    tag_392:\n        /* \"#utility.yul\":25610:25616   */\n      0x00\n        /* \"#utility.yul\":25643:25694   */\n      tag_665\n        /* \"#utility.yul\":25691:25692   */\n      0x00\n        /* \"#utility.yul\":25687:25693   */\n      not\n        /* \"#utility.yul\":25679:25684   */\n      dup5\n        /* \"#utility.yul\":25676:25677   */\n      0x08\n        /* \"#utility.yul\":25672:25685   */\n      mul\n        /* \"#utility.yul\":25643:25694   */\n      tag_391\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":25639:25695   */\n      not\n        /* \"#utility.yul\":25724:25728   */\n      dup1\n        /* \"#utility.yul\":25718:25722   */\n      dup4\n        /* \"#utility.yul\":25714:25729   */\n      and\n        /* \"#utility.yul\":25704:25729   */\n      swap2\n      pop\n        /* \"#utility.yul\":25617:25735   */\n      pop\n        /* \"#utility.yul\":25566:25735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25740:26035   */\n    tag_393:\n        /* \"#utility.yul\":25816:25820   */\n      0x00\n        /* \"#utility.yul\":25962:25991   */\n      tag_667\n        /* \"#utility.yul\":25987:25990   */\n      dup4\n        /* \"#utility.yul\":25981:25985   */\n      dup4\n        /* \"#utility.yul\":25962:25991   */\n      tag_392\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":25954:25991   */\n      swap2\n      pop\n        /* \"#utility.yul\":26024:26027   */\n      dup3\n        /* \"#utility.yul\":26021:26022   */\n      0x02\n        /* \"#utility.yul\":26017:26028   */\n      mul\n        /* \"#utility.yul\":26011:26015   */\n      dup3\n        /* \"#utility.yul\":26008:26029   */\n      or\n        /* \"#utility.yul\":26000:26029   */\n      swap1\n      pop\n        /* \"#utility.yul\":25740:26035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26040:27435   */\n    tag_211:\n        /* \"#utility.yul\":26157:26194   */\n      tag_669\n        /* \"#utility.yul\":26190:26193   */\n      dup3\n        /* \"#utility.yul\":26157:26194   */\n      tag_330\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":26259:26277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26251:26257   */\n      dup2\n        /* \"#utility.yul\":26248:26278   */\n      gt\n        /* \"#utility.yul\":26245:26301   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":26281:26299   */\n      tag_671\n      tag_137\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":26245:26301   */\n    tag_670:\n        /* \"#utility.yul\":26325:26363   */\n      tag_672\n        /* \"#utility.yul\":26357:26361   */\n      dup3\n        /* \"#utility.yul\":26351:26362   */\n      sload\n        /* \"#utility.yul\":26325:26363   */\n      tag_117\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":26410:26477   */\n      tag_673\n        /* \"#utility.yul\":26470:26476   */\n      dup3\n        /* \"#utility.yul\":26462:26468   */\n      dup3\n        /* \"#utility.yul\":26456:26460   */\n      dup6\n        /* \"#utility.yul\":26410:26477   */\n      tag_390\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":26504:26505   */\n      0x00\n        /* \"#utility.yul\":26528:26532   */\n      0x20\n        /* \"#utility.yul\":26515:26532   */\n      swap1\n      pop\n        /* \"#utility.yul\":26560:26562   */\n      0x1f\n        /* \"#utility.yul\":26552:26558   */\n      dup4\n        /* \"#utility.yul\":26549:26563   */\n      gt\n        /* \"#utility.yul\":26577:26578   */\n      0x01\n        /* \"#utility.yul\":26572:27190   */\n      dup2\n      eq\n      tag_675\n      jumpi\n        /* \"#utility.yul\":27234:27235   */\n      0x00\n        /* \"#utility.yul\":27251:27257   */\n      dup5\n        /* \"#utility.yul\":27248:27325   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":27300:27309   */\n      dup3\n        /* \"#utility.yul\":27295:27298   */\n      dup8\n        /* \"#utility.yul\":27291:27310   */\n      add\n        /* \"#utility.yul\":27285:27311   */\n      mload\n        /* \"#utility.yul\":27276:27311   */\n      swap1\n      pop\n        /* \"#utility.yul\":27248:27325   */\n    tag_676:\n        /* \"#utility.yul\":27351:27418   */\n      tag_677\n        /* \"#utility.yul\":27411:27417   */\n      dup6\n        /* \"#utility.yul\":27404:27409   */\n      dup3\n        /* \"#utility.yul\":27351:27418   */\n      tag_393\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":27345:27349   */\n      dup7\n        /* \"#utility.yul\":27338:27419   */\n      sstore\n        /* \"#utility.yul\":27207:27429   */\n      pop\n        /* \"#utility.yul\":26542:27429   */\n      jump(tag_674)\n        /* \"#utility.yul\":26572:27190   */\n    tag_675:\n        /* \"#utility.yul\":26624:26628   */\n      0x1f\n        /* \"#utility.yul\":26620:26629   */\n      not\n        /* \"#utility.yul\":26612:26618   */\n      dup5\n        /* \"#utility.yul\":26608:26630   */\n      and\n        /* \"#utility.yul\":26658:26695   */\n      tag_678\n        /* \"#utility.yul\":26690:26694   */\n      dup7\n        /* \"#utility.yul\":26658:26695   */\n      tag_379\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":26717:26718   */\n      0x00\n        /* \"#utility.yul\":26731:26939   */\n    tag_679:\n        /* \"#utility.yul\":26745:26752   */\n      dup3\n        /* \"#utility.yul\":26742:26743   */\n      dup2\n        /* \"#utility.yul\":26739:26753   */\n      lt\n        /* \"#utility.yul\":26731:26939   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":26824:26833   */\n      dup5\n        /* \"#utility.yul\":26819:26822   */\n      dup10\n        /* \"#utility.yul\":26815:26834   */\n      add\n        /* \"#utility.yul\":26809:26835   */\n      mload\n        /* \"#utility.yul\":26801:26807   */\n      dup3\n        /* \"#utility.yul\":26794:26836   */\n      sstore\n        /* \"#utility.yul\":26875:26876   */\n      0x01\n        /* \"#utility.yul\":26867:26873   */\n      dup3\n        /* \"#utility.yul\":26863:26877   */\n      add\n        /* \"#utility.yul\":26853:26877   */\n      swap2\n      pop\n        /* \"#utility.yul\":26922:26924   */\n      0x20\n        /* \"#utility.yul\":26911:26920   */\n      dup6\n        /* \"#utility.yul\":26907:26925   */\n      add\n        /* \"#utility.yul\":26894:26925   */\n      swap5\n      pop\n        /* \"#utility.yul\":26768:26772   */\n      0x20\n        /* \"#utility.yul\":26765:26766   */\n      dup2\n        /* \"#utility.yul\":26761:26773   */\n      add\n        /* \"#utility.yul\":26756:26773   */\n      swap1\n      pop\n        /* \"#utility.yul\":26731:26939   */\n      jump(tag_679)\n    tag_681:\n        /* \"#utility.yul\":26967:26973   */\n      dup7\n        /* \"#utility.yul\":26958:26965   */\n      dup4\n        /* \"#utility.yul\":26955:26974   */\n      lt\n        /* \"#utility.yul\":26952:27131   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":27025:27034   */\n      dup5\n        /* \"#utility.yul\":27020:27023   */\n      dup10\n        /* \"#utility.yul\":27016:27035   */\n      add\n        /* \"#utility.yul\":27010:27036   */\n      mload\n        /* \"#utility.yul\":27068:27116   */\n      tag_683\n        /* \"#utility.yul\":27110:27114   */\n      0x1f\n        /* \"#utility.yul\":27102:27108   */\n      dup10\n        /* \"#utility.yul\":27098:27115   */\n      and\n        /* \"#utility.yul\":27087:27096   */\n      dup3\n        /* \"#utility.yul\":27068:27116   */\n      tag_392\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":27060:27066   */\n      dup4\n        /* \"#utility.yul\":27053:27117   */\n      sstore\n        /* \"#utility.yul\":26975:27131   */\n      pop\n        /* \"#utility.yul\":26952:27131   */\n    tag_682:\n        /* \"#utility.yul\":27177:27178   */\n      0x01\n        /* \"#utility.yul\":27173:27174   */\n      0x02\n        /* \"#utility.yul\":27165:27171   */\n      dup9\n        /* \"#utility.yul\":27161:27175   */\n      mul\n        /* \"#utility.yul\":27157:27179   */\n      add\n        /* \"#utility.yul\":27151:27155   */\n      dup9\n        /* \"#utility.yul\":27144:27180   */\n      sstore\n        /* \"#utility.yul\":26579:27190   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26542:27429   */\n    tag_674:\n      pop\n        /* \"#utility.yul\":26132:27435   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26040:27435   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27441:27635   */\n    tag_217:\n        /* \"#utility.yul\":27481:27485   */\n      0x00\n        /* \"#utility.yul\":27501:27521   */\n      tag_685\n        /* \"#utility.yul\":27519:27520   */\n      dup3\n        /* \"#utility.yul\":27501:27521   */\n      tag_335\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":27496:27521   */\n      swap2\n      pop\n        /* \"#utility.yul\":27535:27555   */\n      tag_686\n        /* \"#utility.yul\":27553:27554   */\n      dup4\n        /* \"#utility.yul\":27535:27555   */\n      tag_335\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":27530:27555   */\n      swap3\n      pop\n        /* \"#utility.yul\":27579:27580   */\n      dup3\n        /* \"#utility.yul\":27576:27577   */\n      dup3\n        /* \"#utility.yul\":27572:27581   */\n      sub\n        /* \"#utility.yul\":27564:27581   */\n      swap1\n      pop\n        /* \"#utility.yul\":27603:27604   */\n      dup2\n        /* \"#utility.yul\":27597:27601   */\n      dup2\n        /* \"#utility.yul\":27594:27605   */\n      gt\n        /* \"#utility.yul\":27591:27628   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":27608:27626   */\n      tag_688\n      tag_375\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":27591:27628   */\n    tag_687:\n        /* \"#utility.yul\":27441:27635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27641:27739   */\n    tag_394:\n        /* \"#utility.yul\":27692:27698   */\n      0x00\n        /* \"#utility.yul\":27726:27731   */\n      dup2\n        /* \"#utility.yul\":27720:27732   */\n      mload\n        /* \"#utility.yul\":27710:27732   */\n      swap1\n      pop\n        /* \"#utility.yul\":27641:27739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27745:27913   */\n    tag_395:\n        /* \"#utility.yul\":27828:27839   */\n      0x00\n        /* \"#utility.yul\":27862:27868   */\n      dup3\n        /* \"#utility.yul\":27857:27860   */\n      dup3\n        /* \"#utility.yul\":27850:27869   */\n      mstore\n        /* \"#utility.yul\":27902:27906   */\n      0x20\n        /* \"#utility.yul\":27897:27900   */\n      dup3\n        /* \"#utility.yul\":27893:27907   */\n      add\n        /* \"#utility.yul\":27878:27907   */\n      swap1\n      pop\n        /* \"#utility.yul\":27745:27913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27919:28292   */\n    tag_396:\n        /* \"#utility.yul\":28005:28008   */\n      0x00\n        /* \"#utility.yul\":28033:28071   */\n      tag_692\n        /* \"#utility.yul\":28065:28070   */\n      dup3\n        /* \"#utility.yul\":28033:28071   */\n      tag_394\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":28087:28157   */\n      tag_693\n        /* \"#utility.yul\":28150:28156   */\n      dup2\n        /* \"#utility.yul\":28145:28148   */\n      dup6\n        /* \"#utility.yul\":28087:28157   */\n      tag_395\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":28080:28157   */\n      swap4\n      pop\n        /* \"#utility.yul\":28166:28231   */\n      tag_694\n        /* \"#utility.yul\":28224:28230   */\n      dup2\n        /* \"#utility.yul\":28219:28222   */\n      dup6\n        /* \"#utility.yul\":28212:28216   */\n      0x20\n        /* \"#utility.yul\":28205:28210   */\n      dup7\n        /* \"#utility.yul\":28201:28217   */\n      add\n        /* \"#utility.yul\":28166:28231   */\n      tag_332\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":28256:28285   */\n      tag_695\n        /* \"#utility.yul\":28278:28284   */\n      dup2\n        /* \"#utility.yul\":28256:28285   */\n      tag_333\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":28251:28254   */\n      dup5\n        /* \"#utility.yul\":28247:28286   */\n      add\n        /* \"#utility.yul\":28240:28286   */\n      swap2\n      pop\n        /* \"#utility.yul\":28009:28292   */\n      pop\n        /* \"#utility.yul\":27919:28292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28298:28938   */\n    tag_278:\n        /* \"#utility.yul\":28493:28497   */\n      0x00\n        /* \"#utility.yul\":28531:28534   */\n      0x80\n        /* \"#utility.yul\":28520:28529   */\n      dup3\n        /* \"#utility.yul\":28516:28535   */\n      add\n        /* \"#utility.yul\":28508:28535   */\n      swap1\n      pop\n        /* \"#utility.yul\":28545:28616   */\n      tag_697\n        /* \"#utility.yul\":28613:28614   */\n      0x00\n        /* \"#utility.yul\":28602:28611   */\n      dup4\n        /* \"#utility.yul\":28598:28615   */\n      add\n        /* \"#utility.yul\":28589:28595   */\n      dup8\n        /* \"#utility.yul\":28545:28616   */\n      tag_340\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":28626:28698   */\n      tag_698\n        /* \"#utility.yul\":28694:28696   */\n      0x20\n        /* \"#utility.yul\":28683:28692   */\n      dup4\n        /* \"#utility.yul\":28679:28697   */\n      add\n        /* \"#utility.yul\":28670:28676   */\n      dup7\n        /* \"#utility.yul\":28626:28698   */\n      tag_340\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":28708:28780   */\n      tag_699\n        /* \"#utility.yul\":28776:28778   */\n      0x40\n        /* \"#utility.yul\":28765:28774   */\n      dup4\n        /* \"#utility.yul\":28761:28779   */\n      add\n        /* \"#utility.yul\":28752:28758   */\n      dup6\n        /* \"#utility.yul\":28708:28780   */\n      tag_360\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":28827:28836   */\n      dup2\n        /* \"#utility.yul\":28821:28825   */\n      dup2\n        /* \"#utility.yul\":28817:28837   */\n      sub\n        /* \"#utility.yul\":28812:28814   */\n      0x60\n        /* \"#utility.yul\":28801:28810   */\n      dup4\n        /* \"#utility.yul\":28797:28815   */\n      add\n        /* \"#utility.yul\":28790:28838   */\n      mstore\n        /* \"#utility.yul\":28855:28931   */\n      tag_700\n        /* \"#utility.yul\":28926:28930   */\n      dup2\n        /* \"#utility.yul\":28917:28923   */\n      dup5\n        /* \"#utility.yul\":28855:28931   */\n      tag_396\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":28847:28931   */\n      swap1\n      pop\n        /* \"#utility.yul\":28298:28938   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28944:29085   */\n    tag_397:\n        /* \"#utility.yul\":29000:29005   */\n      0x00\n        /* \"#utility.yul\":29031:29037   */\n      dup2\n        /* \"#utility.yul\":29025:29038   */\n      mload\n        /* \"#utility.yul\":29016:29038   */\n      swap1\n      pop\n        /* \"#utility.yul\":29047:29079   */\n      tag_702\n        /* \"#utility.yul\":29073:29078   */\n      dup2\n        /* \"#utility.yul\":29047:29079   */\n      tag_326\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":28944:29085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29091:29440   */\n    tag_281:\n        /* \"#utility.yul\":29160:29166   */\n      0x00\n        /* \"#utility.yul\":29209:29211   */\n      0x20\n        /* \"#utility.yul\":29197:29206   */\n      dup3\n        /* \"#utility.yul\":29188:29195   */\n      dup5\n        /* \"#utility.yul\":29184:29207   */\n      sub\n        /* \"#utility.yul\":29180:29212   */\n      slt\n        /* \"#utility.yul\":29177:29296   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":29215:29294   */\n      tag_705\n      tag_323\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":29177:29296   */\n    tag_704:\n        /* \"#utility.yul\":29335:29336   */\n      0x00\n        /* \"#utility.yul\":29360:29423   */\n      tag_706\n        /* \"#utility.yul\":29415:29422   */\n      dup5\n        /* \"#utility.yul\":29406:29412   */\n      dup3\n        /* \"#utility.yul\":29395:29404   */\n      dup6\n        /* \"#utility.yul\":29391:29413   */\n      add\n        /* \"#utility.yul\":29360:29423   */\n      tag_397\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":29350:29423   */\n      swap2\n      pop\n        /* \"#utility.yul\":29306:29433   */\n      pop\n        /* \"#utility.yul\":29091:29440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29446:29778   */\n    tag_313:\n        /* \"#utility.yul\":29567:29571   */\n      0x00\n        /* \"#utility.yul\":29605:29607   */\n      0x40\n        /* \"#utility.yul\":29594:29603   */\n      dup3\n        /* \"#utility.yul\":29590:29608   */\n      add\n        /* \"#utility.yul\":29582:29608   */\n      swap1\n      pop\n        /* \"#utility.yul\":29618:29689   */\n      tag_708\n        /* \"#utility.yul\":29686:29687   */\n      0x00\n        /* \"#utility.yul\":29675:29684   */\n      dup4\n        /* \"#utility.yul\":29671:29688   */\n      add\n        /* \"#utility.yul\":29662:29668   */\n      dup6\n        /* \"#utility.yul\":29618:29689   */\n      tag_340\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":29699:29771   */\n      tag_709\n        /* \"#utility.yul\":29767:29769   */\n      0x20\n        /* \"#utility.yul\":29756:29765   */\n      dup4\n        /* \"#utility.yul\":29752:29770   */\n      add\n        /* \"#utility.yul\":29743:29749   */\n      dup5\n        /* \"#utility.yul\":29699:29771   */\n      tag_360\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":29446:29778   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209bfe58888ae7c2de2f6b665a7f4a0db10fb255ae76ac15bb99cb931d580a0e7e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_488": {
									"entryPoint": null,
									"id": 488,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:12"
															},
															"nodeType": "YulIf",
															"src": "2801:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:12",
														"type": ""
													}
												],
												"src": "2677:853:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:12",
														"type": ""
													}
												],
												"src": "3536:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:12"
															},
															"nodeType": "YulIf",
															"src": "3966:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:12"
															},
															"nodeType": "YulIf",
															"src": "4057:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:12",
														"type": ""
													}
												],
												"src": "3827:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:12",
														"type": ""
													}
												],
												"src": "4153:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:12",
														"type": ""
													}
												],
												"src": "4300:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:12",
														"type": ""
													}
												],
												"src": "4399:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:12",
														"type": ""
													}
												],
												"src": "4512:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:12",
														"type": ""
													}
												],
												"src": "4911:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:12",
														"type": ""
													}
												],
												"src": "4994:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:12",
														"type": ""
													}
												],
												"src": "5060:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:12",
														"type": ""
													}
												],
												"src": "5208:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:12",
														"type": ""
													}
												],
												"src": "5289:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:12",
														"type": ""
													}
												],
												"src": "5564:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:12",
														"type": ""
													}
												],
												"src": "5643:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:12",
																"statements": []
															},
															"src": "5898:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:12",
														"type": ""
													}
												],
												"src": "5838:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:12"
															},
															"nodeType": "YulIf",
															"src": "6120:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:12",
														"type": ""
													}
												],
												"src": "6030:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:12",
														"type": ""
													}
												],
												"src": "6579:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:12",
														"type": ""
													}
												],
												"src": "6702:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:12",
														"type": ""
													}
												],
												"src": "6876:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:12"
															},
															"nodeType": "YulIf",
															"src": "7381:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:12",
																					"statements": []
																				},
																				"src": "7867:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:12",
														"type": ""
													}
												],
												"src": "7176:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60075534801562000014575f80fd5b50604051620030333803806200303383398181016040528101906200003a9190620001ee565b8181815f90816200004c9190620004a8565b5080600190816200005e9190620004a8565b50505050506200058c565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000ca8262000082565b810181811067ffffffffffffffff82111715620000ec57620000eb62000092565b5b80604052505050565b5f6200010062000069565b90506200010e8282620000bf565b919050565b5f67ffffffffffffffff82111562000130576200012f62000092565b5b6200013b8262000082565b9050602081019050919050565b5f5b83811015620001675780820151818401526020810190506200014a565b5f8484015250505050565b5f62000188620001828462000113565b620000f5565b905082815260208101848484011115620001a757620001a66200007e565b5b620001b484828562000148565b509392505050565b5f82601f830112620001d357620001d26200007a565b5b8151620001e584826020860162000172565b91505092915050565b5f806040838503121562000207576200020662000072565b5b5f83015167ffffffffffffffff81111562000227576200022662000076565b5b6200023585828601620001bc565b925050602083015167ffffffffffffffff81111562000259576200025862000076565b5b6200026785828601620001bc565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002c057607f821691505b602082108103620002d657620002d56200027b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200033a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fd565b620003468683620002fd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003906200038a62000384846200035e565b62000367565b6200035e565b9050919050565b5f819050919050565b620003ab8362000370565b620003c3620003ba8262000397565b84845462000309565b825550505050565b5f90565b620003d9620003cb565b620003e6818484620003a0565b505050565b5b818110156200040d57620004015f82620003cf565b600181019050620003ec565b5050565b601f8211156200045c576200042681620002dc565b6200043184620002ee565b8101602085101562000441578190505b620004596200045085620002ee565b830182620003eb565b50505b505050565b5f82821c905092915050565b5f6200047e5f198460080262000461565b1980831691505092915050565b5f6200049883836200046d565b9150826002028217905092915050565b620004b38262000271565b67ffffffffffffffff811115620004cf57620004ce62000092565b5b620004db8254620002a8565b620004e882828562000411565b5f60209050601f8311600181146200051e575f841562000509578287015190505b6200051585826200048b565b86555062000584565b601f1984166200052e86620002dc565b5f5b82811015620005575784890151825560018201915060208501945060208101905062000530565b8683101562000577578489015162000573601f8916826200046d565b8355505b6001600288020188555050505b505050505050565b612a99806200059a5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636352211e116100ab578063a22cb4651161006f578063a22cb46514610363578063b88d4fde1461037f578063c87b56dd1461039b578063d15a76d2146103cb578063e985e9c5146103fb5761011f565b80636352211e1461028557806370a08231146102b5578063838e4537146102e55780638a55a50e1461031557806395d89b41146103455761011f565b80630a48a1ac116100f25780630a48a1ac146101bd57806323b872dd146101ed5780633bb3a24d1461020957806342842e0e146102395780635f0cac76146102555761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611bb8565b61042b565b60405161014a9190611bfd565b60405180910390f35b61015b61050c565b6040516101689190611ca0565b60405180910390f35b61018b60048036038101906101869190611cf3565b61059b565b6040516101989190611d5d565b60405180910390f35b6101bb60048036038101906101b69190611da0565b6105b6565b005b6101d760048036038101906101d29190611dde565b6105cc565b6040516101e49190611f8f565b60405180910390f35b61020760048036038101906102029190611faf565b6107f7565b005b610223600480360381019061021e9190611cf3565b6108f6565b6040516102309190611ca0565b60405180910390f35b610253600480360381019061024e9190611faf565b610999565b005b61026f600480360381019061026a9190611dde565b6109b8565b60405161027c91906120ba565b60405180910390f35b61029f600480360381019061029a9190611cf3565b610b94565b6040516102ac9190611d5d565b60405180910390f35b6102cf60048036038101906102ca9190611dde565b610ba5565b6040516102dc91906120e9565b60405180910390f35b6102ff60048036038101906102fa919061222e565b610c5b565b60405161030c91906120e9565b60405180910390f35b61032f600480360381019061032a9190612275565b610ca4565b60405161033c9190611ca0565b60405180910390f35b61034d610e34565b60405161035a9190611ca0565b60405180910390f35b61037d60048036038101906103789190612315565b610ec4565b005b610399600480360381019061039491906123f1565b610eda565b005b6103b560048036038101906103b09190611cf3565b610ef7565b6040516103c29190611ca0565b60405180910390f35b6103e560048036038101906103e09190611cf3565b610f9a565b6040516103f291906120e9565b60405180910390f35b61041560048036038101906104109190612471565b610fb7565b6040516104229190611bfd565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104f557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610505575061050482611045565b5b9050919050565b60605f805461051a906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610546906124dc565b80156105915780601f1061056857610100808354040283529160200191610591565b820191905f5260205f20905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b5f6105a5826110ae565b506105af82611134565b9050919050565b6105c882826105c361116d565b611174565b5050565b60605f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561065457602002820191905f5260205f20905b815481526020019060010190808311610640575b505050505090505f815167ffffffffffffffff8111156106775761067661210a565b5b6040519080825280602002602001820160405280156106b057816020015b61069d611b1a565b8152602001906001900390816106955790505b5090505f5b82518110156107ec5760405180604001604052808483815181106106dc576106db61250c565b5b6020026020010151815260200160065f8685815181106106ff576106fe61250c565b5b602002602001015181526020019081526020015f206040518060400160405290815f8201805461072e906124dc565b80601f016020809104026020016040519081016040528092919081815260200182805461075a906124dc565b80156107a55780601f1061077c576101008083540402835291602001916107a5565b820191905f5260205f20905b81548152906001019060200180831161078857829003601f168201915b505050505081526020016001820154815250508152508282815181106107ce576107cd61250c565b5b602002602001018190525080806107e490612566565b9150506106b5565b508092505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610867575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161085e9190611d5d565b60405180910390fd5b5f61087a838361087561116d565b611186565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108f0578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016108e7939291906125ad565b60405180910390fd5b50505050565b606060065f8381526020019081526020015f205f018054610916906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610942906124dc565b801561098d5780601f106109645761010080835404028352916020019161098d565b820191905f5260205f20905b81548152906001019060200180831161097057829003601f168201915b50505050509050919050565b6109b383838360405180602001604052805f815250610eda565b505050565b60605f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610a4057602002820191905f5260205f20905b815481526020019060010190808311610a2c575b505050505090505f815167ffffffffffffffff811115610a6357610a6261210a565b5b604051908082528060200260200182016040528015610a9657816020015b6060815260200190600190039081610a815790505b5090505f5b8251811015610b895760065f848381518110610aba57610ab961250c565b5b602002602001015181526020019081526020015f205f018054610adc906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b08906124dc565b8015610b535780601f10610b2a57610100808354040283529160200191610b53565b820191905f5260205f20905b815481529060010190602001808311610b3657829003601f168201915b5050505050828281518110610b6b57610b6a61250c565b5b60200260200101819052508080610b8190612566565b915050610a9b565b508092505050919050565b5f610b9e826110ae565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c16575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610c0d9190611d5d565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6001600a83604051602001610c71919061261c565b604051602081830303815290604052805190602001205f1c610c93919061265f565b610c9d919061268f565b9050919050565b60605f610cb083610c5b565b905060405180604001604052808581526020018281525060065f60075481526020019081526020015f205f820151815f019081610ced919061285f565b5060208201518160010155905050610d0733600754611391565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600754908060018154018082558091505060019003905f5260205f20015f9091909190915055600160075f828254610d7c919061268f565b9250508190555060065f6001600754610d95919061292e565b81526020019081526020015f205f018054610daf906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddb906124dc565b8015610e265780601f10610dfd57610100808354040283529160200191610e26565b820191905f5260205f20905b815481529060010190602001808311610e0957829003601f168201915b505050505091505092915050565b606060018054610e43906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6f906124dc565b8015610eba5780601f10610e9157610100808354040283529160200191610eba565b820191905f5260205f20905b815481529060010190602001808311610e9d57829003601f168201915b5050505050905090565b610ed6610ecf61116d565b8383611484565b5050565b610ee58484846107f7565b610ef1848484846115ed565b50505050565b606060065f8381526020019081526020015f205f018054610f17906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f43906124dc565b8015610f8e5780601f10610f6557610100808354040283529160200191610f8e565b820191905f5260205f20905b815481529060010190602001808311610f7157829003601f168201915b50505050509050919050565b5f60065f8381526020019081526020015f20600101549050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f806110b98361179f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361112b57826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161112291906120e9565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b61118183838360016117d8565b505050565b5f806111918461179f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146111d2576111d1818486611997565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461125d576112115f855f806117d8565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146112dc57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611401575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113f89190611d5d565b60405180910390fd5b5f61140d83835f611186565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461147f575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016114769190611d5d565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114f457816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114eb9190611d5d565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115e09190611bfd565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611799578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261163061116d565b8685856040518563ffffffff1660e01b815260040161165294939291906129b3565b6020604051808303815f875af192505050801561168d57506040513d601f19601f8201168201806040525081019061168a9190612a11565b60015b61170e573d805f81146116bb576040519150601f19603f3d011682016040523d82523d5f602084013e6116c0565b606091505b505f81510361170657836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116fd9190611d5d565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461179757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161178e9190611d5d565b60405180910390fd5b505b50505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061181057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611942575f61181f846110ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561188957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561189c575061189a8184610fb7565b155b156118de57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118d59190611d5d565b60405180910390fd5b811561194057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119a2838383611a5a565b611a55575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a1657806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a0d91906120e9565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a4c929190612a3c565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b1157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ad25750611ad18484610fb7565b5b80611b1057508273ffffffffffffffffffffffffffffffffffffffff16611af883611134565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60405180604001604052805f8152602001611b33611b39565b81525090565b6040518060400160405280606081526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b9781611b63565b8114611ba1575f80fd5b50565b5f81359050611bb281611b8e565b92915050565b5f60208284031215611bcd57611bcc611b5b565b5b5f611bda84828501611ba4565b91505092915050565b5f8115159050919050565b611bf781611be3565b82525050565b5f602082019050611c105f830184611bee565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c4d578082015181840152602081019050611c32565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611c7282611c16565b611c7c8185611c20565b9350611c8c818560208601611c30565b611c9581611c58565b840191505092915050565b5f6020820190508181035f830152611cb88184611c68565b905092915050565b5f819050919050565b611cd281611cc0565b8114611cdc575f80fd5b50565b5f81359050611ced81611cc9565b92915050565b5f60208284031215611d0857611d07611b5b565b5b5f611d1584828501611cdf565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d4782611d1e565b9050919050565b611d5781611d3d565b82525050565b5f602082019050611d705f830184611d4e565b92915050565b611d7f81611d3d565b8114611d89575f80fd5b50565b5f81359050611d9a81611d76565b92915050565b5f8060408385031215611db657611db5611b5b565b5b5f611dc385828601611d8c565b9250506020611dd485828601611cdf565b9150509250929050565b5f60208284031215611df357611df2611b5b565b5b5f611e0084828501611d8c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e3b81611cc0565b82525050565b5f82825260208201905092915050565b5f611e5b82611c16565b611e658185611e41565b9350611e75818560208601611c30565b611e7e81611c58565b840191505092915050565b5f604083015f8301518482035f860152611ea38282611e51565b9150506020830151611eb86020860182611e32565b508091505092915050565b5f604083015f830151611ed85f860182611e32565b5060208301518482036020860152611ef08282611e89565b9150508091505092915050565b5f611f088383611ec3565b905092915050565b5f602082019050919050565b5f611f2682611e09565b611f308185611e13565b935083602082028501611f4285611e23565b805f5b85811015611f7d5784840389528151611f5e8582611efd565b9450611f6983611f10565b925060208a01995050600181019050611f45565b50829750879550505050505092915050565b5f6020820190508181035f830152611fa78184611f1c565b905092915050565b5f805f60608486031215611fc657611fc5611b5b565b5b5f611fd386828701611d8c565b9350506020611fe486828701611d8c565b9250506040611ff586828701611cdf565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f6120338383611e51565b905092915050565b5f602082019050919050565b5f61205182611fff565b61205b8185612009565b93508360208202850161206d85612019565b805f5b858110156120a857848403895281516120898582612028565b94506120948361203b565b925060208a01995050600181019050612070565b50829750879550505050505092915050565b5f6020820190508181035f8301526120d28184612047565b905092915050565b6120e381611cc0565b82525050565b5f6020820190506120fc5f8301846120da565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61214082611c58565b810181811067ffffffffffffffff8211171561215f5761215e61210a565b5b80604052505050565b5f612171611b52565b905061217d8282612137565b919050565b5f67ffffffffffffffff82111561219c5761219b61210a565b5b6121a582611c58565b9050602081019050919050565b828183375f83830152505050565b5f6121d26121cd84612182565b612168565b9050828152602081018484840111156121ee576121ed612106565b5b6121f98482856121b2565b509392505050565b5f82601f83011261221557612214612102565b5b81356122258482602086016121c0565b91505092915050565b5f6020828403121561224357612242611b5b565b5b5f82013567ffffffffffffffff8111156122605761225f611b5f565b5b61226c84828501612201565b91505092915050565b5f806040838503121561228b5761228a611b5b565b5b5f83013567ffffffffffffffff8111156122a8576122a7611b5f565b5b6122b485828601612201565b925050602083013567ffffffffffffffff8111156122d5576122d4611b5f565b5b6122e185828601612201565b9150509250929050565b6122f481611be3565b81146122fe575f80fd5b50565b5f8135905061230f816122eb565b92915050565b5f806040838503121561232b5761232a611b5b565b5b5f61233885828601611d8c565b925050602061234985828601612301565b9150509250929050565b5f67ffffffffffffffff82111561236d5761236c61210a565b5b61237682611c58565b9050602081019050919050565b5f61239561239084612353565b612168565b9050828152602081018484840111156123b1576123b0612106565b5b6123bc8482856121b2565b509392505050565b5f82601f8301126123d8576123d7612102565b5b81356123e8848260208601612383565b91505092915050565b5f805f806080858703121561240957612408611b5b565b5b5f61241687828801611d8c565b945050602061242787828801611d8c565b935050604061243887828801611cdf565b925050606085013567ffffffffffffffff81111561245957612458611b5f565b5b612465878288016123c4565b91505092959194509250565b5f806040838503121561248757612486611b5b565b5b5f61249485828601611d8c565b92505060206124a585828601611d8c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124f357607f821691505b602082108103612506576125056124af565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61257082611cc0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125a2576125a1612539565b5b600182019050919050565b5f6060820190506125c05f830186611d4e565b6125cd60208301856120da565b6125da6040830184611d4e565b949350505050565b5f81905092915050565b5f6125f682611c16565b61260081856125e2565b9350612610818560208601611c30565b80840191505092915050565b5f61262782846125ec565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61266982611cc0565b915061267483611cc0565b92508261268457612683612632565b5b828206905092915050565b5f61269982611cc0565b91506126a483611cc0565b92508282019050808211156126bc576126bb612539565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261271e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126e3565b61272886836126e3565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61276361275e61275984611cc0565b612740565b611cc0565b9050919050565b5f819050919050565b61277c83612749565b6127906127888261276a565b8484546126ef565b825550505050565b5f90565b6127a4612798565b6127af818484612773565b505050565b5b818110156127d2576127c75f8261279c565b6001810190506127b5565b5050565b601f821115612817576127e8816126c2565b6127f1846126d4565b81016020851015612800578190505b61281461280c856126d4565b8301826127b4565b50505b505050565b5f82821c905092915050565b5f6128375f198460080261281c565b1980831691505092915050565b5f61284f8383612828565b9150826002028217905092915050565b61286882611c16565b67ffffffffffffffff8111156128815761288061210a565b5b61288b82546124dc565b6128968282856127d6565b5f60209050601f8311600181146128c7575f84156128b5578287015190505b6128bf8582612844565b865550612926565b601f1984166128d5866126c2565b5f5b828110156128fc578489015182556001820191506020850194506020810190506128d7565b868310156129195784890151612915601f891682612828565b8355505b6001600288020188555050505b505050505050565b5f61293882611cc0565b915061294383611cc0565b925082820390508181111561295b5761295a612539565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f61298582612961565b61298f818561296b565b935061299f818560208601611c30565b6129a881611c58565b840191505092915050565b5f6080820190506129c65f830187611d4e565b6129d36020830186611d4e565b6129e060408301856120da565b81810360608301526129f2818461297b565b905095945050505050565b5f81519050612a0b81611b8e565b92915050565b5f60208284031215612a2657612a25611b5b565b5b5f612a33848285016129fd565b91505092915050565b5f604082019050612a4f5f830185611d4e565b612a5c60208301846120da565b939250505056fea26469706673582212209bfe58888ae7c2de2f6b665a7f4a0db10fb255ae76ac15bb99cb931d580a0e7e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3033 CODESIZE SUB DUP1 PUSH3 0x3033 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3A SWAP2 SWAP1 PUSH3 0x1EE JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x4C SWAP2 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5E SWAP2 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x58C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xCA DUP3 PUSH3 0x82 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEC JUMPI PUSH3 0xEB PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x100 PUSH3 0x69 JUMP JUMPDEST SWAP1 POP PUSH3 0x10E DUP3 DUP3 PUSH3 0xBF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x130 JUMPI PUSH3 0x12F PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13B DUP3 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x167 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x188 PUSH3 0x182 DUP5 PUSH3 0x113 JUMP JUMPDEST PUSH3 0xF5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A7 JUMPI PUSH3 0x1A6 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH3 0x1B4 DUP5 DUP3 DUP6 PUSH3 0x148 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x7A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x207 JUMPI PUSH3 0x206 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x227 JUMPI PUSH3 0x226 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x235 DUP6 DUP3 DUP7 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x259 JUMPI PUSH3 0x258 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x267 DUP6 DUP3 DUP7 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D6 JUMPI PUSH3 0x2D5 PUSH3 0x27B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x33A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FD JUMP JUMPDEST PUSH3 0x346 DUP7 DUP4 PUSH3 0x2FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x390 PUSH3 0x38A PUSH3 0x384 DUP5 PUSH3 0x35E JUMP JUMPDEST PUSH3 0x367 JUMP JUMPDEST PUSH3 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3AB DUP4 PUSH3 0x370 JUMP JUMPDEST PUSH3 0x3C3 PUSH3 0x3BA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x309 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D9 PUSH3 0x3CB JUMP JUMPDEST PUSH3 0x3E6 DUP2 DUP5 DUP5 PUSH3 0x3A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x40D JUMPI PUSH3 0x401 PUSH0 DUP3 PUSH3 0x3CF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3EC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x45C JUMPI PUSH3 0x426 DUP2 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x431 DUP5 PUSH3 0x2EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x441 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x459 PUSH3 0x450 DUP6 PUSH3 0x2EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3EB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x461 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x498 DUP4 DUP4 PUSH3 0x46D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4B3 DUP3 PUSH3 0x271 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4CF JUMPI PUSH3 0x4CE PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4DB DUP3 SLOAD PUSH3 0x2A8 JUMP JUMPDEST PUSH3 0x4E8 DUP3 DUP3 DUP6 PUSH3 0x411 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x51E JUMPI PUSH0 DUP5 ISZERO PUSH3 0x509 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x515 DUP6 DUP3 PUSH3 0x48B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x584 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x52E DUP7 PUSH3 0x2DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x557 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x530 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x577 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x573 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x46D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2A99 DUP1 PUSH3 0x59A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xD15A76D2 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FB JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x838E4537 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x8A55A50E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x345 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0xA48A1AC GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA48A1AC EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x3BB3A24D EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x5F0CAC76 EQ PUSH2 0x255 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x999 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0xEC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x505 JUMPI POP PUSH2 0x504 DUP3 PUSH2 0x1045 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x51A SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x591 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x591 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x574 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5A5 DUP3 PUSH2 0x10AE JUMP JUMPDEST POP PUSH2 0x5AF DUP3 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 DUP3 DUP3 PUSH2 0x5C3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1174 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x640 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x69D PUSH2 0x1B1A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x695 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6DC JUMPI PUSH2 0x6DB PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6FF JUMPI PUSH2 0x6FE PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x72E SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x75A SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7CE JUMPI PUSH2 0x7CD PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x7E4 SWAP1 PUSH2 0x2566 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x867 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x87A DUP4 DUP4 PUSH2 0x875 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8F0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x942 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEDA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA2C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA63 JUMPI PUSH2 0xA62 PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA96 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA81 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x6 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xABA JUMPI PUSH2 0xAB9 PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0xADC SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB08 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB53 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB53 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB36 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB6B JUMPI PUSH2 0xB6A PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xB81 SWAP1 PUSH2 0x2566 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA9B JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9E DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC16 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xA DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xC93 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xCB0 DUP4 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x285F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0xD07 CALLER PUSH1 0x7 SLOAD PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0xDAF SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDDB SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE43 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6F SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEBA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE91 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEBA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0xECF PUSH2 0x116D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1484 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xEE5 DUP5 DUP5 DUP5 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0xEF1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0xF17 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF43 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x10B9 DUP4 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1181 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1191 DUP5 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D2 JUMPI PUSH2 0x11D1 DUP2 DUP5 DUP7 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125D JUMPI PUSH2 0x1211 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12DC JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1401 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x140D DUP4 DUP4 PUSH0 PUSH2 0x1186 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1476 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14F4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EB SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1799 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1630 PUSH2 0x116D JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1652 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x168D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x170E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1706 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1797 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1810 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1942 JUMPI PUSH0 PUSH2 0x181F DUP5 PUSH2 0x10AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1889 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x189C JUMPI POP PUSH2 0x189A DUP2 DUP5 PUSH2 0xFB7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18DE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1940 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP4 DUP4 DUP4 PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x1A55 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A16 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0D SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4C SWAP3 SWAP2 SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B11 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AD2 JUMPI POP PUSH2 0x1AD1 DUP5 DUP5 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B10 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AF8 DUP4 PUSH2 0x1134 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B33 PUSH2 0x1B39 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B97 DUP2 PUSH2 0x1B63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB2 DUP2 PUSH2 0x1B8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCD JUMPI PUSH2 0x1BCC PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BDA DUP5 DUP3 DUP6 ADD PUSH2 0x1BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF7 DUP2 PUSH2 0x1BE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C10 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C32 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C72 DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0x1C7C DUP2 DUP6 PUSH2 0x1C20 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CB8 DUP2 DUP5 PUSH2 0x1C68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD2 DUP2 PUSH2 0x1CC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CED DUP2 PUSH2 0x1CC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D08 JUMPI PUSH2 0x1D07 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D15 DUP5 DUP3 DUP6 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D47 DUP3 PUSH2 0x1D1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D57 DUP2 PUSH2 0x1D3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D70 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D7F DUP2 PUSH2 0x1D3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9A DUP2 PUSH2 0x1D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E00 DUP5 DUP3 DUP6 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3B DUP2 PUSH2 0x1CC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5B DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0x1E65 DUP2 DUP6 PUSH2 0x1E41 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x1E7E DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1EA3 DUP3 DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1EB8 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1E32 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1ED8 PUSH0 DUP7 ADD DUP3 PUSH2 0x1E32 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1EF0 DUP3 DUP3 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F08 DUP4 DUP4 PUSH2 0x1EC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F26 DUP3 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1F30 DUP2 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1F42 DUP6 PUSH2 0x1E23 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1F7D JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1F5E DUP6 DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP5 POP PUSH2 0x1F69 DUP4 PUSH2 0x1F10 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F45 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA7 DUP2 DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC5 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD3 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FE4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FF5 DUP7 DUP3 DUP8 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2033 DUP4 DUP4 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2051 DUP3 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x205B DUP2 DUP6 PUSH2 0x2009 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x206D DUP6 PUSH2 0x2019 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x20A8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2089 DUP6 DUP3 PUSH2 0x2028 JUMP JUMPDEST SWAP5 POP PUSH2 0x2094 DUP4 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2070 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D2 DUP2 DUP5 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E3 DUP2 PUSH2 0x1CC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FC PUSH0 DUP4 ADD DUP5 PUSH2 0x20DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2140 DUP3 PUSH2 0x1C58 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x215F JUMPI PUSH2 0x215E PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2171 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP PUSH2 0x217D DUP3 DUP3 PUSH2 0x2137 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x219C JUMPI PUSH2 0x219B PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH2 0x21A5 DUP3 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21D2 PUSH2 0x21CD DUP5 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21EE JUMPI PUSH2 0x21ED PUSH2 0x2106 JUMP JUMPDEST JUMPDEST PUSH2 0x21F9 DUP5 DUP3 DUP6 PUSH2 0x21B2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x2102 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2225 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x226C DUP5 DUP3 DUP6 ADD PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A8 JUMPI PUSH2 0x22A7 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x22B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2201 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x22E1 DUP6 DUP3 DUP7 ADD PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F4 DUP2 PUSH2 0x1BE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x230F DUP2 PUSH2 0x22EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x232B JUMPI PUSH2 0x232A PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2338 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2349 DUP6 DUP3 DUP7 ADD PUSH2 0x2301 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x236D JUMPI PUSH2 0x236C PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH2 0x2376 DUP3 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2395 PUSH2 0x2390 DUP5 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x2106 JUMP JUMPDEST JUMPDEST PUSH2 0x23BC DUP5 DUP3 DUP6 PUSH2 0x21B2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23D8 JUMPI PUSH2 0x23D7 PUSH2 0x2102 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23E8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2416 DUP8 DUP3 DUP9 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2427 DUP8 DUP3 DUP9 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2438 DUP8 DUP3 DUP9 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2459 JUMPI PUSH2 0x2458 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x2465 DUP8 DUP3 DUP9 ADD PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2494 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x24AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2570 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x25A2 JUMPI PUSH2 0x25A1 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x25CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x25DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25F6 DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0x2600 DUP2 DUP6 PUSH2 0x25E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2610 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2627 DUP3 DUP5 PUSH2 0x25EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2669 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2674 DUP4 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2684 JUMPI PUSH2 0x2683 PUSH2 0x2632 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2699 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A4 DUP4 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26BC JUMPI PUSH2 0x26BB PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x271E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x2728 DUP7 DUP4 PUSH2 0x26E3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2763 PUSH2 0x275E PUSH2 0x2759 DUP5 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x2740 JUMP JUMPDEST PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x277C DUP4 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2790 PUSH2 0x2788 DUP3 PUSH2 0x276A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26EF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x27A4 PUSH2 0x2798 JUMP JUMPDEST PUSH2 0x27AF DUP2 DUP5 DUP5 PUSH2 0x2773 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D2 JUMPI PUSH2 0x27C7 PUSH0 DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2817 JUMPI PUSH2 0x27E8 DUP2 PUSH2 0x26C2 JUMP JUMPDEST PUSH2 0x27F1 DUP5 PUSH2 0x26D4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2800 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2814 PUSH2 0x280C DUP6 PUSH2 0x26D4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27B4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2837 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x281C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x284F DUP4 DUP4 PUSH2 0x2828 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2868 DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2881 JUMPI PUSH2 0x2880 PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH2 0x288B DUP3 SLOAD PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x2896 DUP3 DUP3 DUP6 PUSH2 0x27D6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28C7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28B5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28BF DUP6 DUP3 PUSH2 0x2844 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28D5 DUP7 PUSH2 0x26C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28FC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28D7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2919 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2915 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2828 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2938 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2943 DUP4 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x295B JUMPI PUSH2 0x295A PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2985 DUP3 PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x298F DUP2 DUP6 PUSH2 0x296B JUMP JUMPDEST SWAP4 POP PUSH2 0x299F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x29A8 DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x29C6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x29D3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x29E0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20DA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x29F2 DUP2 DUP5 PUSH2 0x297B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A0B DUP2 PUSH2 0x1B8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A33 DUP5 DUP3 DUP6 ADD PUSH2 0x29FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A4F PUSH0 DUP4 ADD DUP6 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x2A5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 INVALID PC DUP9 DUP11 0xE7 0xC2 0xDE 0x2F PUSH12 0x665A7F4A0DB10FB255AE76AC ISZERO 0xBB SWAP10 0xCB SWAP4 SAR PC EXP 0xE PUSH31 0x64736F6C634300081400330000000000000000000000000000000000000000 ",
							"sourceMap": "175:8781:0:-:0;;;2028:1;2006:23;;207:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;272:5;279:7;2788:5:2;2780;:13;;;;;;:::i;:::-;;2813:7;2803;:17;;;;;;:::i;:::-;;2714:113;;207:91:0;;175:8781;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;175:8781:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1230": {
									"entryPoint": 4468,
									"id": 1230,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1296": {
									"entryPoint": 6104,
									"id": 1296,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAuthorized_878": {
									"entryPoint": 6551,
									"id": 878,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1426": {
									"entryPoint": 5613,
									"id": 1426,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_805": {
									"entryPoint": 4404,
									"id": 805,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_841": {
									"entryPoint": 6746,
									"id": 841,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1034": {
									"entryPoint": 5009,
									"id": 1034,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1602": {
									"entryPoint": 4461,
									"id": 1602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_792": {
									"entryPoint": 6047,
									"id": 792,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1362": {
									"entryPoint": 4270,
									"id": 1362,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1333": {
									"entryPoint": 5252,
									"id": 1333,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_984": {
									"entryPoint": 4486,
									"id": 984,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_639": {
									"entryPoint": 1462,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_547": {
									"entryPoint": 2981,
									"id": 547,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_656": {
									"entryPoint": 1435,
									"id": 656,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwnerTokenMetaData_257": {
									"entryPoint": 1484,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwnerURIs_195": {
									"entryPoint": 2488,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenRanking_139": {
									"entryPoint": 3994,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenURI_126": {
									"entryPoint": 2294,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_689": {
									"entryPoint": 4023,
									"id": 689,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@makeRandom_63": {
									"entryPoint": 3163,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@minting_113": {
									"entryPoint": 3236,
									"id": 113,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_569": {
									"entryPoint": 1292,
									"id": 569,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_560": {
									"entryPoint": 2964,
									"id": 560,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_753": {
									"entryPoint": 2457,
									"id": 753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_779": {
									"entryPoint": 3802,
									"id": 779,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_672": {
									"entryPoint": 3780,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1890": {
									"entryPoint": 4165,
									"id": 1890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_519": {
									"entryPoint": 1067,
									"id": 519,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_578": {
									"entryPoint": 3636,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_271": {
									"entryPoint": 3831,
									"id": 271,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_735": {
									"entryPoint": 2039,
									"id": 735,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TokenMetaData_$21_memory_ptr_to_t_struct$_TokenMetaData_$21_memory_ptr": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10675,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10812,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9645,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9778,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9967,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:29781:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5002:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5004:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5004:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5004:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4977:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4973:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:32:12"
															},
															"nodeType": "YulIf",
															"src": "4966:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5095:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5110:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5114:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5139:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5174:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5185:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5170:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5194:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5149:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5149:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5139:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4926:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4937:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4949:6:12",
														"type": ""
													}
												],
												"src": "4890:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5337:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5348:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5364:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5320:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5330:6:12",
														"type": ""
													}
												],
												"src": "5225:152:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5532:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5549:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5554:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5570:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5589:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5594:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5585:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5570:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5504:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5509:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5520:11:12",
														"type": ""
													}
												],
												"src": "5383:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5721:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5731:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5739:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5731:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5752:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5764:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5760:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5752:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5708:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5716:4:12",
														"type": ""
													}
												],
												"src": "5611:170:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5842:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5859:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5882:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5864:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5852:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5852:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5830:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5837:3:12",
														"type": ""
													}
												],
												"src": "5787:108:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5987:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6004:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6009:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5997:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5997:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5997:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6025:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6044:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6049:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6040:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6025:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5959:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5964:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5975:11:12",
														"type": ""
													}
												],
												"src": "5901:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6148:275:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6158:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6205:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6172:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6162:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6220:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6276:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6227:48:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:61:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6220:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6336:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6343:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6332:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6350:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6355:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6297:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6297:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6371:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6382:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6409:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6387:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6387:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6378:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6378:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6371:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6129:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6136:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6144:3:12",
														"type": ""
													}
												],
												"src": "6066:357:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6615:489:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6625:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6641:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6646:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6637:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6637:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6629:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6661:239:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6700:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6730:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6737:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6726:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6726:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6720:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6720:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6704:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6768:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6773:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6764:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6764:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "6784:4:12"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6790:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6780:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6757:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6757:38:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6757:38:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6808:81:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6870:12:12"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6884:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6816:53:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6816:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "6808:4:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6910:167:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6948:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6978:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6985:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6974:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6974:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6968:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6968:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6952:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7038:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7056:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7061:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7052:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7052:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7004:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7004:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7004:63:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7087:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7094:4:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7087:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenMetaData_$21_memory_ptr_to_t_struct$_TokenMetaData_$21_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6594:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6610:3:12",
														"type": ""
													}
												],
												"src": "6493:611:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7332:527:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7342:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7358:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "7346:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7378:167:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7416:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7446:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7453:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7442:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7442:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7436:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7420:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7506:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7524:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7529:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7520:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7520:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7472:33:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7472:63:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7472:63:12"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7555:277:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7594:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7624:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7631:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7620:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7620:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7614:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7614:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7598:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7662:3:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7667:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7658:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "7678:4:12"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7684:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7674:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7674:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "7651:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:38:12"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7651:38:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7702:119:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7802:12:12"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7816:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_TokenMetaData_$21_memory_ptr_to_t_struct$_TokenMetaData_$21_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7710:91:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7710:111:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "7702:4:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7842:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7849:4:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7842:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7311:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7318:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7327:3:12",
														"type": ""
													}
												],
												"src": "7192:667:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8021:152:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8031:136:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8155:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8163:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8045:109:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:122:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8031:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7994:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8002:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8010:10:12",
														"type": ""
													}
												],
												"src": "7865:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8292:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8302:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8314:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8319:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "8302:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8279:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "8287:4:12",
														"type": ""
													}
												],
												"src": "8179:151:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8622:1015:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8632:106:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8732:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8646:85:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:92:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8636:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8747:131:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8866:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8871:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8754:111:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:124:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8747:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8887:20:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8904:3:12"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "8891:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8916:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8932:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8941:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8949:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8937:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8937:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8928:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8928:27:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "8920:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8964:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9067:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8979:87:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:94:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "8968:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9082:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9096:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9086:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9172:420:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9193:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "9202:4:12"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "9208:9:12"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "9198:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9198:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9186:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9186:33:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9186:33:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9232:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9259:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9253:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9253:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9236:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9279:148:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9407:13:12"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "9422:4:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9287:119:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9287:140:12"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9279:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9440:108:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9541:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9450:90:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9450:98:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9440:6:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9561:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9572:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9577:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9568:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9568:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9561:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9134:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9137:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9131:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9131:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9145:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9147:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9156:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9159:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9152:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9152:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9147:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9116:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9118:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9127:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9122:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9112:480:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9601:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "9608:4:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9601:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9621:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9628:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8601:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8608:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8617:3:12",
														"type": ""
													}
												],
												"src": "8422:1215:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9867:301:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9877:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9889:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9900:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9885:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9877:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9924:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9935:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9920:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9920:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9943:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9949:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9939:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9939:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9913:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9913:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9913:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9969:192:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10147:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10156:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9977:169:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:184:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9969:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9839:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9851:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9862:4:12",
														"type": ""
													}
												],
												"src": "9643:525:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10274:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10320:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10322:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10322:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10322:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10295:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10304:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10291:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10291:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10316:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10287:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10287:32:12"
															},
															"nodeType": "YulIf",
															"src": "10284:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10413:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10428:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10442:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10432:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10457:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10492:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10503:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10488:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10488:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10512:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10467:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10467:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10457:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10540:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10555:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10569:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10559:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10585:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10620:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10631:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10616:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10616:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10640:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10595:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10595:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10585:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10668:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10683:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10697:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10687:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10713:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10748:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10759:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10744:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10744:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10768:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10723:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10723:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10713:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10228:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10239:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10251:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10259:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10267:6:12",
														"type": ""
													}
												],
												"src": "10174:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10883:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10894:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10910:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10904:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10904:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10894:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10876:6:12",
														"type": ""
													}
												],
												"src": "10799:124:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11050:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11067:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11060:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11060:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11060:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11088:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11107:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11112:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11088:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11022:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11027:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11038:11:12",
														"type": ""
													}
												],
												"src": "10929:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11211:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11221:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "11229:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "11221:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11242:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11254:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11250:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "11242:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11198:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11206:4:12",
														"type": ""
													}
												],
												"src": "11129:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11377:96:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11387:80:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11455:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11463:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11401:53:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:66:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "11387:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11350:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11358:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "11366:10:12",
														"type": ""
													}
												],
												"src": "11277:196:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11564:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11574:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11586:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11591:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11582:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "11574:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11551:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "11559:4:12",
														"type": ""
													}
												],
												"src": "11479:123:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11780:847:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11790:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11862:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11804:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11804:64:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11794:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11877:103:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11973:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11884:83:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11884:96:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11877:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11989:20:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12006:3:12"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "11993:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12018:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12034:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12043:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12051:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12039:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12039:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12030:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:27:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "12022:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12066:81:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12141:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12081:59:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12081:66:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "12070:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12156:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "12170:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12160:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12246:336:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12267:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "12276:4:12"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "12282:9:12"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "12272:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12272:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12260:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12260:33:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12260:33:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12306:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12333:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12327:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12327:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "12310:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12353:92:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "12425:13:12"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "12440:4:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "12361:63:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12361:84:12"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12353:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12458:80:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12531:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "12468:62:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12468:70:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12458:6:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12551:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12562:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12567:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12558:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12558:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12551:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12208:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12211:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12205:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12219:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12221:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12230:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12233:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12226:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12226:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12221:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12190:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12192:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12201:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "12196:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12186:396:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12591:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "12598:4:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12591:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12611:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12618:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12611:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11759:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11766:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11775:3:12",
														"type": ""
													}
												],
												"src": "11636:991:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:245:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12811:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12823:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12834:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12819:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12811:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12858:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12869:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12854:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12854:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12877:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12883:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12873:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12873:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12847:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12847:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12903:136:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13025:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13034:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12911:113:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12911:128:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12903:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12773:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12785:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12796:4:12",
														"type": ""
													}
												],
												"src": "12633:413:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13117:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13134:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13157:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13139:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13139:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13127:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13127:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13105:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13112:3:12",
														"type": ""
													}
												],
												"src": "13052:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13274:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13284:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13296:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13307:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13292:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13292:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13284:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13364:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13377:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13388:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13373:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13373:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13320:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13320:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13320:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13246:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13258:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13269:4:12",
														"type": ""
													}
												],
												"src": "13176:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13493:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13510:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13513:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13503:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13503:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13503:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13404:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13616:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13633:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13636:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13626:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13626:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13626:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "13527:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13678:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13698:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13688:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13688:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13688:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13792:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13795:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13785:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13785:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13785:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13819:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13809:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13809:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13809:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13650:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13879:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13889:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "13911:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "13941:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13919:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13919:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13907:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13907:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "13893:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14058:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14060:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14060:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14060:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14001:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14013:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13998:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13998:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14037:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14049:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14034:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14034:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13995:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13995:62:12"
															},
															"nodeType": "YulIf",
															"src": "13992:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14096:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14100:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14089:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14089:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14089:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13865:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13873:4:12",
														"type": ""
													}
												],
												"src": "13836:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14164:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14174:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "14184:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14184:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "14174:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14233:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "14241:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14213:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14213:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14213:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14148:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14157:6:12",
														"type": ""
													}
												],
												"src": "14123:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14325:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14430:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14432:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14432:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14432:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14402:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14410:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14399:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14399:30:12"
															},
															"nodeType": "YulIf",
															"src": "14396:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14462:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14492:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "14470:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14462:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14536:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "14548:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14554:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14544:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14544:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14536:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14309:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14320:4:12",
														"type": ""
													}
												],
												"src": "14258:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14636:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "14659:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "14664:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14669:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14646:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14646:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14646:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14696:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14701:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14692:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14692:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14710:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14685:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14685:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14685:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14618:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14623:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14628:6:12",
														"type": ""
													}
												],
												"src": "14572:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14808:341:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14818:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14885:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14843:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14843:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14827:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14827:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "14818:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "14909:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14916:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14902:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14902:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14902:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14932:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "14947:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14954:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14943:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14943:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "14936:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14997:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "14999:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14999:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14999:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "14978:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14983:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14974:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14974:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "14992:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14971:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14971:25:12"
															},
															"nodeType": "YulIf",
															"src": "14968:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15126:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "15131:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15136:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15089:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15089:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15089:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14781:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14786:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14794:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "14802:5:12",
														"type": ""
													}
												],
												"src": "14724:425:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15231:278:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15280:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "15282:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15282:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15282:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15259:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15267:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15255:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15255:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "15274:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "15251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15251:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15244:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15244:35:12"
															},
															"nodeType": "YulIf",
															"src": "15241:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15372:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15399:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "15386:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15386:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15376:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15415:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15476:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15484:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15472:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15472:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15491:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "15499:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15424:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15424:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "15415:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15209:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15217:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "15225:5:12",
														"type": ""
													}
												],
												"src": "15169:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15591:433:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15637:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15639:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15639:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15639:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15612:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15621:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15608:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15633:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15604:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15604:32:12"
															},
															"nodeType": "YulIf",
															"src": "15601:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "15730:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15745:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15776:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15787:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15772:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15772:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "15759:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15759:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15749:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15837:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "15839:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15839:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "15839:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15809:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15817:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15806:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15806:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "15803:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15934:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15979:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15990:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15975:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15975:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15999:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "15944:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15944:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15934:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15561:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15572:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15584:6:12",
														"type": ""
													}
												],
												"src": "15515:509:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16133:731:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16179:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16181:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16181:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16181:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16154:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16163:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16150:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16150:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16175:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16146:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16146:32:12"
															},
															"nodeType": "YulIf",
															"src": "16143:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "16272:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16287:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16318:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16329:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16314:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16314:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16301:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16301:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16291:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16379:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16381:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16381:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16381:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16351:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16359:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16348:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16348:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "16345:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16476:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16521:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16532:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16517:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16517:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16541:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16486:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16486:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16476:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16569:288:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16584:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16615:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16626:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16611:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16611:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16598:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16598:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16588:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16677:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16679:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16679:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16679:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16649:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16657:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16646:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16646:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "16643:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16774:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16819:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16830:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16815:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16815:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16839:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16784:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16784:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16774:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16095:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16106:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16118:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16126:6:12",
														"type": ""
													}
												],
												"src": "16030:834:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16910:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16964:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16973:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16976:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16966:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16966:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16966:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16933:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16955:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "16940:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16940:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16930:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16930:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16923:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16923:40:12"
															},
															"nodeType": "YulIf",
															"src": "16920:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16903:5:12",
														"type": ""
													}
												],
												"src": "16870:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17041:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17051:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17073:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "17060:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17060:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17051:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17113:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "17089:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17089:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17089:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17019:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17027:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17035:5:12",
														"type": ""
													}
												],
												"src": "16992:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17211:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17257:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17259:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17259:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17259:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17232:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17241:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17228:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17228:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17253:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17224:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17224:32:12"
															},
															"nodeType": "YulIf",
															"src": "17221:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "17350:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17365:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17379:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17369:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17394:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17429:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17440:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17425:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17425:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17449:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17404:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17404:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17394:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17477:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17492:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17506:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17496:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17522:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17554:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17565:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17550:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17550:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17574:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "17532:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17532:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "17522:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17173:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17184:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17196:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17204:6:12",
														"type": ""
													}
												],
												"src": "17131:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17671:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17776:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17778:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17778:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17778:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17748:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17756:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17745:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17745:30:12"
															},
															"nodeType": "YulIf",
															"src": "17742:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17808:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17838:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "17816:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17816:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17808:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17882:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17894:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17900:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17890:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17890:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17882:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17655:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17666:4:12",
														"type": ""
													}
												],
												"src": "17605:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18001:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18011:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18077:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "18036:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18036:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "18020:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18020:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "18011:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "18101:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18108:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18094:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18094:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18094:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18124:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "18139:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18146:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18135:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18135:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "18128:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18189:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "18191:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18191:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18191:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "18170:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18175:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18166:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18166:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "18184:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18163:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18163:25:12"
															},
															"nodeType": "YulIf",
															"src": "18160:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "18318:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "18323:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18328:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18281:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18281:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18281:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "17974:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17979:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17987:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "17995:5:12",
														"type": ""
													}
												],
												"src": "17918:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18421:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18470:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "18472:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18472:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18472:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18449:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18457:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18445:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18445:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "18464:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "18441:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18441:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18434:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18434:35:12"
															},
															"nodeType": "YulIf",
															"src": "18431:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18562:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18589:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "18576:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18576:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18566:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18605:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "18665:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18673:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18661:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18661:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18680:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "18688:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18614:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18614:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "18605:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18399:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18407:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "18415:5:12",
														"type": ""
													}
												],
												"src": "18360:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18830:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18877:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18879:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18879:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18879:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18851:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18860:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18847:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18847:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18872:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18843:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18843:33:12"
															},
															"nodeType": "YulIf",
															"src": "18840:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "18970:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18985:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18999:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18989:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19014:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19049:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19060:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19045:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19045:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19069:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19024:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19024:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19014:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19097:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19112:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19126:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19116:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19142:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19177:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19188:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19173:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19173:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19197:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19152:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19152:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19142:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19225:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19240:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19254:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19244:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19270:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19305:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19316:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19301:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19301:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19325:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19280:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19280:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "19270:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19353:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19368:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19399:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19410:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19395:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19395:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "19382:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19382:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19372:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19461:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "19463:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19463:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19463:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19433:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19441:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19430:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19430:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "19427:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19558:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19602:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19613:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19598:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19598:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19622:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19568:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19568:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "19558:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18776:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18787:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18799:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18807:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18815:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18823:6:12",
														"type": ""
													}
												],
												"src": "18704:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19736:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19782:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19784:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19784:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19784:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19757:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19766:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19753:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19753:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19778:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19749:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19749:32:12"
															},
															"nodeType": "YulIf",
															"src": "19746:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "19875:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19890:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19904:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19894:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19919:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19954:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19965:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19950:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19950:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19974:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19929:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19929:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19919:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20002:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20017:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20031:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20021:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20047:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20082:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20093:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20078:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20078:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20102:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20057:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20057:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20047:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19698:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19709:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19721:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19729:6:12",
														"type": ""
													}
												],
												"src": "19653:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20161:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20178:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20181:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20171:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20171:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20171:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20275:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20278:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20268:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20268:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20268:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20299:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20302:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20292:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20292:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20292:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "20133:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20370:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20380:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20394:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20400:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20390:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20390:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20380:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20411:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20441:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20447:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20437:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20437:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "20415:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20488:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20502:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "20516:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20524:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "20512:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20512:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20502:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "20468:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20461:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20461:26:12"
															},
															"nodeType": "YulIf",
															"src": "20458:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20591:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "20605:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20605:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20605:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "20555:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20578:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20586:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "20575:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20575:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20552:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20552:38:12"
															},
															"nodeType": "YulIf",
															"src": "20549:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20354:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20363:6:12",
														"type": ""
													}
												],
												"src": "20319:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20673:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20690:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20693:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20683:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20683:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20683:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20787:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20790:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20780:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20780:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20780:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20811:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20814:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20804:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20804:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20804:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20645:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20859:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20876:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20879:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20869:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20869:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20869:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20973:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20976:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20966:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20966:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20966:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20997:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21000:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20990:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20990:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20990:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20831:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21060:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21070:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21097:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21079:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21079:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21070:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21193:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21195:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21195:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21195:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21118:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21125:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21115:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21115:77:12"
															},
															"nodeType": "YulIf",
															"src": "21112:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21224:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21235:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21242:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21231:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21231:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21224:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21046:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21056:3:12",
														"type": ""
													}
												],
												"src": "21017:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21410:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21420:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21432:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21443:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21428:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21428:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21420:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21500:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21513:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21524:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21509:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21509:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21456:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21456:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21456:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21581:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21594:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21605:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21590:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21590:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21537:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21537:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21537:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21663:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21676:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21687:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21672:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21672:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21619:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21619:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21619:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21366:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21378:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21386:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21394:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21405:4:12",
														"type": ""
													}
												],
												"src": "21256:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21818:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21828:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21843:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21828:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21790:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21795:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21806:11:12",
														"type": ""
													}
												],
												"src": "21704:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21968:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21978:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22025:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21992:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21992:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21982:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22040:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22124:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22129:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22047:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22047:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22040:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22184:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22191:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22180:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22180:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22198:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22203:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "22145:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22145:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22145:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22219:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22230:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22235:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22226:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22226:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22219:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21949:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21956:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21964:3:12",
														"type": ""
													}
												],
												"src": "21858:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22390:139:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22401:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22490:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22499:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22408:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22408:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22401:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22513:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22520:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22513:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22369:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22375:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22386:3:12",
														"type": ""
													}
												],
												"src": "22254:275:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22563:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22580:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22583:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22573:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22573:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22573:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22677:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22680:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22670:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22670:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22670:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22701:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22704:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22694:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22694:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22694:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22535:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22755:142:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22765:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22788:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22770:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22770:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22765:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22799:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22822:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22804:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22804:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22799:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22846:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22848:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22848:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22848:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22843:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22836:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22836:9:12"
															},
															"nodeType": "YulIf",
															"src": "22833:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22877:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22886:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22889:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "22882:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22882:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22877:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22744:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22747:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22753:1:12",
														"type": ""
													}
												],
												"src": "22721:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22947:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22957:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22980:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22962:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22962:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22957:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22991:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23014:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22996:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22996:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22991:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23025:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23036:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23039:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23032:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23032:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "23025:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23065:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23067:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23067:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23067:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23057:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "23060:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23054:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23054:10:12"
															},
															"nodeType": "YulIf",
															"src": "23051:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22934:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22937:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "22943:3:12",
														"type": ""
													}
												],
												"src": "22903:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23154:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23164:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "23172:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23164:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23192:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "23195:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23185:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23185:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23185:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23208:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23226:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23229:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "23216:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23216:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23208:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "23141:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "23149:4:12",
														"type": ""
													}
												],
												"src": "23100:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23291:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23301:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23319:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23326:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23315:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23315:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23331:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "23311:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23311:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23301:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23274:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "23284:6:12",
														"type": ""
													}
												],
												"src": "23247:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23399:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23409:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "23434:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23440:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "23430:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23430:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "23409:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "23374:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23380:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "23390:8:12",
														"type": ""
													}
												],
												"src": "23346:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23535:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23545:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "23566:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23578:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23562:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23562:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "23549:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23589:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "23620:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23631:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "23601:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23601:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "23593:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23707:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "23738:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "23749:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "23719:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23719:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "23707:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23767:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23780:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "23791:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "23787:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23787:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23776:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23776:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23767:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23806:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23819:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "23830:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "23840:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23826:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23826:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "23816:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23816:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23806:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23496:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "23503:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "23515:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "23528:6:12",
														"type": ""
													}
												],
												"src": "23459:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23890:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23900:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23907:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23900:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23876:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23886:3:12",
														"type": ""
													}
												],
												"src": "23858:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23984:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23994:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24052:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24034:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24034:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "24025:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24025:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24007:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24007:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23994:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23964:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23974:9:12",
														"type": ""
													}
												],
												"src": "23924:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24119:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24129:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "24136:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24129:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24105:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24115:3:12",
														"type": ""
													}
												],
												"src": "24072:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24229:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24239:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "24294:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24263:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24263:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "24243:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "24318:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "24358:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "24352:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24352:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "24365:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "24397:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24373:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24373:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "24324:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24324:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "24311:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24311:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24311:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "24206:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24212:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "24220:7:12",
														"type": ""
													}
												],
												"src": "24153:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24477:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24487:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24494:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24487:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24473:3:12",
														"type": ""
													}
												],
												"src": "24428:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24560:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24570:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24584:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24584:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "24574:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "24669:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24675:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "24683:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24625:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24625:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24625:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "24546:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24552:6:12",
														"type": ""
													}
												],
												"src": "24507:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24752:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24819:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "24863:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24870:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "24833:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24833:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24833:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "24772:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "24779:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24769:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24769:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24784:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24786:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "24799:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24806:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24795:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24795:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "24786:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24766:2:12",
																"statements": []
															},
															"src": "24762:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "24740:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24747:3:12",
														"type": ""
													}
												],
												"src": "24702:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24973:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24999:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25013:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "25061:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "25029:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25029:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "25017:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25080:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "25103:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "25131:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "25113:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25113:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25099:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25099:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "25084:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "25300:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "25302:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "25317:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "25302:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "25284:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25296:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "25281:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25281:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "25278:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "25369:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "25386:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "25414:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "25396:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25396:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25382:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25382:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "25340:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25340:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25340:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "24990:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24995:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24987:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24987:11:12"
															},
															"nodeType": "YulIf",
															"src": "24984:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "24949:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "24956:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "24961:10:12",
														"type": ""
													}
												],
												"src": "24894:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25506:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25516:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "25541:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25547:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "25537:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25537:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "25516:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "25481:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25487:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "25497:8:12",
														"type": ""
													}
												],
												"src": "25443:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25617:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25627:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25676:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "25679:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "25672:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25672:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25691:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "25687:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25687:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "25643:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25643:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "25639:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25639:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "25631:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25704:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "25718:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "25724:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25714:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25714:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25704:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25594:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "25600:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25610:6:12",
														"type": ""
													}
												],
												"src": "25566:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25821:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25954:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "25981:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "25987:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "25962:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "25962:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "25954:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26000:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26011:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26021:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "26024:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "26017:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26017:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "26008:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26008:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "26000:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25802:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "25808:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "25816:4:12",
														"type": ""
													}
												],
												"src": "25740:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26132:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26143:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "26190:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26157:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26157:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "26147:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26279:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26281:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26281:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26281:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "26251:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26259:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26248:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26248:30:12"
															},
															"nodeType": "YulIf",
															"src": "26245:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26311:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "26357:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "26351:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26351:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "26325:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26325:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "26315:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "26456:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "26462:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "26470:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "26410:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26410:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26410:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26487:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26504:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "26491:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26515:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26528:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "26515:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "26579:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26593:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "26612:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "26624:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "26620:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26620:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "26608:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26608:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "26597:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26644:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "26690:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "26658:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26658:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "26648:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26708:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26717:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "26712:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "26776:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26801:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "26819:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "26824:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "26815:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "26815:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "26809:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26809:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "26794:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26794:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26794:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "26853:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26867:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26875:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26863:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26863:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "26853:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "26894:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "26911:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26922:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26907:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26907:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "26894:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26742:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "26745:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "26739:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26739:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "26754:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "26756:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "26765:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26768:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26761:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26761:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26756:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "26735:3:12",
																					"statements": []
																				},
																				"src": "26731:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "26975:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "26993:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "27020:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "27025:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27016:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27016:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "27010:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27010:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "26997:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "27060:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "27087:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "27102:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "27110:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "27098:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "27098:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "27068:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27068:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "27053:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27053:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27053:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "26958:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "26967:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "26955:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26955:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "26952:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "27151:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "27165:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "27173:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "27161:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "27161:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "27177:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27157:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27157:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "27144:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27144:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27144:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "26572:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26577:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "27207:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "27221:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27234:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "27225:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "27258:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "27276:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "27295:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "27300:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27291:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27291:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "27285:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27285:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "27276:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "27251:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "27248:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "27345:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "27404:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "27411:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "27351:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27351:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "27338:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27338:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27338:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "27199:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "26552:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26560:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26549:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "26549:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "26542:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "26121:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26127:3:12",
														"type": ""
													}
												],
												"src": "26040:1395:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27486:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27496:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27519:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27501:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27501:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27496:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27530:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27553:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27535:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27535:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27530:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27564:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27576:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27579:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "27572:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27572:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "27564:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27606:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27608:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27608:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27608:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "27597:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27603:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27594:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27594:11:12"
															},
															"nodeType": "YulIf",
															"src": "27591:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27472:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27475:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "27481:4:12",
														"type": ""
													}
												],
												"src": "27441:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27699:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27710:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27726:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27720:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27720:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27710:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27682:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27692:6:12",
														"type": ""
													}
												],
												"src": "27641:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27840:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27857:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27862:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27850:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27850:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27850:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27878:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27897:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27902:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27893:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "27893:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "27878:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27812:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27817:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "27828:11:12",
														"type": ""
													}
												],
												"src": "27745:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28009:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28019:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28065:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "28033:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28033:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28023:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28080:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28145:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28150:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28087:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28087:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28080:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28205:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28212:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28201:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28201:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28219:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28224:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28166:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28166:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28166:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28240:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28251:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28278:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28256:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28256:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28247:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28247:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28240:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27990:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27997:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28005:3:12",
														"type": ""
													}
												],
												"src": "27919:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28498:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28508:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28520:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28531:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28516:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28516:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28508:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28589:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28602:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28613:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28598:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28598:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28545:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28545:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28545:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28670:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28683:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28694:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28679:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28679:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28626:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28626:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28626:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28752:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28765:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28776:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28761:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28761:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28708:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28708:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28708:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28801:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28812:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28797:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28797:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28821:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28827:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28817:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28817:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28790:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28790:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28790:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28847:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28917:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28926:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28855:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "28855:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28847:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28446:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28458:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28466:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28474:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28482:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28493:4:12",
														"type": ""
													}
												],
												"src": "28298:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29006:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29016:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29031:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29025:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29025:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29016:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29073:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "29047:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29047:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29047:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28984:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28992:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29000:5:12",
														"type": ""
													}
												],
												"src": "28944:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29167:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29213:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "29215:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29215:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29215:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29188:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29197:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29184:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29184:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29209:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29180:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29180:32:12"
															},
															"nodeType": "YulIf",
															"src": "29177:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "29306:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29321:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29335:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "29325:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29350:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "29395:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29406:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29391:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29391:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29415:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "29360:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29360:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "29350:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29137:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29148:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29160:6:12",
														"type": ""
													}
												],
												"src": "29091:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29572:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29582:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29594:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29605:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29590:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29590:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29582:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29662:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29675:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29686:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29671:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29671:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29618:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29618:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29618:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29743:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29756:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29767:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29752:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29752:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29699:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "29699:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29699:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29536:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29548:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29556:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29567:4:12",
														"type": ""
													}
												],
												"src": "29446:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct MyNFT.TokenMetaData -> struct MyNFT.TokenMetaData\n    function abi_encode_t_struct$_TokenMetaData_$21_memory_ptr_to_t_struct$_TokenMetaData_$21_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // tokenURI\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // ranking\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    // struct MyNFT.TokenIdMetaDataWrapper -> struct MyNFT.TokenIdMetaDataWrapper\n    function abi_encode_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // metaData\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_struct$_TokenMetaData_$21_memory_ptr_to_t_struct$_TokenMetaData_$21_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MyNFT.TokenIdMetaDataWrapper[] -> struct MyNFT.TokenIdMetaDataWrapper[]\n    function abi_encode_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_to_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636352211e116100ab578063a22cb4651161006f578063a22cb46514610363578063b88d4fde1461037f578063c87b56dd1461039b578063d15a76d2146103cb578063e985e9c5146103fb5761011f565b80636352211e1461028557806370a08231146102b5578063838e4537146102e55780638a55a50e1461031557806395d89b41146103455761011f565b80630a48a1ac116100f25780630a48a1ac146101bd57806323b872dd146101ed5780633bb3a24d1461020957806342842e0e146102395780635f0cac76146102555761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc14610171578063095ea7b3146101a1575b5f80fd5b61013d60048036038101906101389190611bb8565b61042b565b60405161014a9190611bfd565b60405180910390f35b61015b61050c565b6040516101689190611ca0565b60405180910390f35b61018b60048036038101906101869190611cf3565b61059b565b6040516101989190611d5d565b60405180910390f35b6101bb60048036038101906101b69190611da0565b6105b6565b005b6101d760048036038101906101d29190611dde565b6105cc565b6040516101e49190611f8f565b60405180910390f35b61020760048036038101906102029190611faf565b6107f7565b005b610223600480360381019061021e9190611cf3565b6108f6565b6040516102309190611ca0565b60405180910390f35b610253600480360381019061024e9190611faf565b610999565b005b61026f600480360381019061026a9190611dde565b6109b8565b60405161027c91906120ba565b60405180910390f35b61029f600480360381019061029a9190611cf3565b610b94565b6040516102ac9190611d5d565b60405180910390f35b6102cf60048036038101906102ca9190611dde565b610ba5565b6040516102dc91906120e9565b60405180910390f35b6102ff60048036038101906102fa919061222e565b610c5b565b60405161030c91906120e9565b60405180910390f35b61032f600480360381019061032a9190612275565b610ca4565b60405161033c9190611ca0565b60405180910390f35b61034d610e34565b60405161035a9190611ca0565b60405180910390f35b61037d60048036038101906103789190612315565b610ec4565b005b610399600480360381019061039491906123f1565b610eda565b005b6103b560048036038101906103b09190611cf3565b610ef7565b6040516103c29190611ca0565b60405180910390f35b6103e560048036038101906103e09190611cf3565b610f9a565b6040516103f291906120e9565b60405180910390f35b61041560048036038101906104109190612471565b610fb7565b6040516104229190611bfd565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104f557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610505575061050482611045565b5b9050919050565b60605f805461051a906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610546906124dc565b80156105915780601f1061056857610100808354040283529160200191610591565b820191905f5260205f20905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b5f6105a5826110ae565b506105af82611134565b9050919050565b6105c882826105c361116d565b611174565b5050565b60605f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561065457602002820191905f5260205f20905b815481526020019060010190808311610640575b505050505090505f815167ffffffffffffffff8111156106775761067661210a565b5b6040519080825280602002602001820160405280156106b057816020015b61069d611b1a565b8152602001906001900390816106955790505b5090505f5b82518110156107ec5760405180604001604052808483815181106106dc576106db61250c565b5b6020026020010151815260200160065f8685815181106106ff576106fe61250c565b5b602002602001015181526020019081526020015f206040518060400160405290815f8201805461072e906124dc565b80601f016020809104026020016040519081016040528092919081815260200182805461075a906124dc565b80156107a55780601f1061077c576101008083540402835291602001916107a5565b820191905f5260205f20905b81548152906001019060200180831161078857829003601f168201915b505050505081526020016001820154815250508152508282815181106107ce576107cd61250c565b5b602002602001018190525080806107e490612566565b9150506106b5565b508092505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610867575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161085e9190611d5d565b60405180910390fd5b5f61087a838361087561116d565b611186565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108f0578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016108e7939291906125ad565b60405180910390fd5b50505050565b606060065f8381526020019081526020015f205f018054610916906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610942906124dc565b801561098d5780601f106109645761010080835404028352916020019161098d565b820191905f5260205f20905b81548152906001019060200180831161097057829003601f168201915b50505050509050919050565b6109b383838360405180602001604052805f815250610eda565b505050565b60605f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610a4057602002820191905f5260205f20905b815481526020019060010190808311610a2c575b505050505090505f815167ffffffffffffffff811115610a6357610a6261210a565b5b604051908082528060200260200182016040528015610a9657816020015b6060815260200190600190039081610a815790505b5090505f5b8251811015610b895760065f848381518110610aba57610ab961250c565b5b602002602001015181526020019081526020015f205f018054610adc906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b08906124dc565b8015610b535780601f10610b2a57610100808354040283529160200191610b53565b820191905f5260205f20905b815481529060010190602001808311610b3657829003601f168201915b5050505050828281518110610b6b57610b6a61250c565b5b60200260200101819052508080610b8190612566565b915050610a9b565b508092505050919050565b5f610b9e826110ae565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c16575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610c0d9190611d5d565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6001600a83604051602001610c71919061261c565b604051602081830303815290604052805190602001205f1c610c93919061265f565b610c9d919061268f565b9050919050565b60605f610cb083610c5b565b905060405180604001604052808581526020018281525060065f60075481526020019081526020015f205f820151815f019081610ced919061285f565b5060208201518160010155905050610d0733600754611391565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600754908060018154018082558091505060019003905f5260205f20015f9091909190915055600160075f828254610d7c919061268f565b9250508190555060065f6001600754610d95919061292e565b81526020019081526020015f205f018054610daf906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddb906124dc565b8015610e265780601f10610dfd57610100808354040283529160200191610e26565b820191905f5260205f20905b815481529060010190602001808311610e0957829003601f168201915b505050505091505092915050565b606060018054610e43906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6f906124dc565b8015610eba5780601f10610e9157610100808354040283529160200191610eba565b820191905f5260205f20905b815481529060010190602001808311610e9d57829003601f168201915b5050505050905090565b610ed6610ecf61116d565b8383611484565b5050565b610ee58484846107f7565b610ef1848484846115ed565b50505050565b606060065f8381526020019081526020015f205f018054610f17906124dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f43906124dc565b8015610f8e5780601f10610f6557610100808354040283529160200191610f8e565b820191905f5260205f20905b815481529060010190602001808311610f7157829003601f168201915b50505050509050919050565b5f60065f8381526020019081526020015f20600101549050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f806110b98361179f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361112b57826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161112291906120e9565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b61118183838360016117d8565b505050565b5f806111918461179f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146111d2576111d1818486611997565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461125d576112115f855f806117d8565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146112dc57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611401575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113f89190611d5d565b60405180910390fd5b5f61140d83835f611186565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461147f575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016114769190611d5d565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114f457816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114eb9190611d5d565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115e09190611bfd565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611799578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261163061116d565b8685856040518563ffffffff1660e01b815260040161165294939291906129b3565b6020604051808303815f875af192505050801561168d57506040513d601f19601f8201168201806040525081019061168a9190612a11565b60015b61170e573d805f81146116bb576040519150601f19603f3d011682016040523d82523d5f602084013e6116c0565b606091505b505f81510361170657836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116fd9190611d5d565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461179757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161178e9190611d5d565b60405180910390fd5b505b50505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061181057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611942575f61181f846110ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561188957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561189c575061189a8184610fb7565b155b156118de57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118d59190611d5d565b60405180910390fd5b811561194057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119a2838383611a5a565b611a55575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a1657806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a0d91906120e9565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a4c929190612a3c565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b1157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ad25750611ad18484610fb7565b5b80611b1057508273ffffffffffffffffffffffffffffffffffffffff16611af883611134565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60405180604001604052805f8152602001611b33611b39565b81525090565b6040518060400160405280606081526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b9781611b63565b8114611ba1575f80fd5b50565b5f81359050611bb281611b8e565b92915050565b5f60208284031215611bcd57611bcc611b5b565b5b5f611bda84828501611ba4565b91505092915050565b5f8115159050919050565b611bf781611be3565b82525050565b5f602082019050611c105f830184611bee565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c4d578082015181840152602081019050611c32565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611c7282611c16565b611c7c8185611c20565b9350611c8c818560208601611c30565b611c9581611c58565b840191505092915050565b5f6020820190508181035f830152611cb88184611c68565b905092915050565b5f819050919050565b611cd281611cc0565b8114611cdc575f80fd5b50565b5f81359050611ced81611cc9565b92915050565b5f60208284031215611d0857611d07611b5b565b5b5f611d1584828501611cdf565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d4782611d1e565b9050919050565b611d5781611d3d565b82525050565b5f602082019050611d705f830184611d4e565b92915050565b611d7f81611d3d565b8114611d89575f80fd5b50565b5f81359050611d9a81611d76565b92915050565b5f8060408385031215611db657611db5611b5b565b5b5f611dc385828601611d8c565b9250506020611dd485828601611cdf565b9150509250929050565b5f60208284031215611df357611df2611b5b565b5b5f611e0084828501611d8c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e3b81611cc0565b82525050565b5f82825260208201905092915050565b5f611e5b82611c16565b611e658185611e41565b9350611e75818560208601611c30565b611e7e81611c58565b840191505092915050565b5f604083015f8301518482035f860152611ea38282611e51565b9150506020830151611eb86020860182611e32565b508091505092915050565b5f604083015f830151611ed85f860182611e32565b5060208301518482036020860152611ef08282611e89565b9150508091505092915050565b5f611f088383611ec3565b905092915050565b5f602082019050919050565b5f611f2682611e09565b611f308185611e13565b935083602082028501611f4285611e23565b805f5b85811015611f7d5784840389528151611f5e8582611efd565b9450611f6983611f10565b925060208a01995050600181019050611f45565b50829750879550505050505092915050565b5f6020820190508181035f830152611fa78184611f1c565b905092915050565b5f805f60608486031215611fc657611fc5611b5b565b5b5f611fd386828701611d8c565b9350506020611fe486828701611d8c565b9250506040611ff586828701611cdf565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f6120338383611e51565b905092915050565b5f602082019050919050565b5f61205182611fff565b61205b8185612009565b93508360208202850161206d85612019565b805f5b858110156120a857848403895281516120898582612028565b94506120948361203b565b925060208a01995050600181019050612070565b50829750879550505050505092915050565b5f6020820190508181035f8301526120d28184612047565b905092915050565b6120e381611cc0565b82525050565b5f6020820190506120fc5f8301846120da565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61214082611c58565b810181811067ffffffffffffffff8211171561215f5761215e61210a565b5b80604052505050565b5f612171611b52565b905061217d8282612137565b919050565b5f67ffffffffffffffff82111561219c5761219b61210a565b5b6121a582611c58565b9050602081019050919050565b828183375f83830152505050565b5f6121d26121cd84612182565b612168565b9050828152602081018484840111156121ee576121ed612106565b5b6121f98482856121b2565b509392505050565b5f82601f83011261221557612214612102565b5b81356122258482602086016121c0565b91505092915050565b5f6020828403121561224357612242611b5b565b5b5f82013567ffffffffffffffff8111156122605761225f611b5f565b5b61226c84828501612201565b91505092915050565b5f806040838503121561228b5761228a611b5b565b5b5f83013567ffffffffffffffff8111156122a8576122a7611b5f565b5b6122b485828601612201565b925050602083013567ffffffffffffffff8111156122d5576122d4611b5f565b5b6122e185828601612201565b9150509250929050565b6122f481611be3565b81146122fe575f80fd5b50565b5f8135905061230f816122eb565b92915050565b5f806040838503121561232b5761232a611b5b565b5b5f61233885828601611d8c565b925050602061234985828601612301565b9150509250929050565b5f67ffffffffffffffff82111561236d5761236c61210a565b5b61237682611c58565b9050602081019050919050565b5f61239561239084612353565b612168565b9050828152602081018484840111156123b1576123b0612106565b5b6123bc8482856121b2565b509392505050565b5f82601f8301126123d8576123d7612102565b5b81356123e8848260208601612383565b91505092915050565b5f805f806080858703121561240957612408611b5b565b5b5f61241687828801611d8c565b945050602061242787828801611d8c565b935050604061243887828801611cdf565b925050606085013567ffffffffffffffff81111561245957612458611b5f565b5b612465878288016123c4565b91505092959194509250565b5f806040838503121561248757612486611b5b565b5b5f61249485828601611d8c565b92505060206124a585828601611d8c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124f357607f821691505b602082108103612506576125056124af565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61257082611cc0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125a2576125a1612539565b5b600182019050919050565b5f6060820190506125c05f830186611d4e565b6125cd60208301856120da565b6125da6040830184611d4e565b949350505050565b5f81905092915050565b5f6125f682611c16565b61260081856125e2565b9350612610818560208601611c30565b80840191505092915050565b5f61262782846125ec565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61266982611cc0565b915061267483611cc0565b92508261268457612683612632565b5b828206905092915050565b5f61269982611cc0565b91506126a483611cc0565b92508282019050808211156126bc576126bb612539565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261271e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126e3565b61272886836126e3565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61276361275e61275984611cc0565b612740565b611cc0565b9050919050565b5f819050919050565b61277c83612749565b6127906127888261276a565b8484546126ef565b825550505050565b5f90565b6127a4612798565b6127af818484612773565b505050565b5b818110156127d2576127c75f8261279c565b6001810190506127b5565b5050565b601f821115612817576127e8816126c2565b6127f1846126d4565b81016020851015612800578190505b61281461280c856126d4565b8301826127b4565b50505b505050565b5f82821c905092915050565b5f6128375f198460080261281c565b1980831691505092915050565b5f61284f8383612828565b9150826002028217905092915050565b61286882611c16565b67ffffffffffffffff8111156128815761288061210a565b5b61288b82546124dc565b6128968282856127d6565b5f60209050601f8311600181146128c7575f84156128b5578287015190505b6128bf8582612844565b865550612926565b601f1984166128d5866126c2565b5f5b828110156128fc578489015182556001820191506020850194506020810190506128d7565b868310156129195784890151612915601f891682612828565b8355505b6001600288020188555050505b505050505050565b5f61293882611cc0565b915061294383611cc0565b925082820390508181111561295b5761295a612539565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f61298582612961565b61298f818561296b565b935061299f818560208601611c30565b6129a881611c58565b840191505092915050565b5f6080820190506129c65f830187611d4e565b6129d36020830186611d4e565b6129e060408301856120da565b81810360608301526129f2818461297b565b905095945050505050565b5f81519050612a0b81611b8e565b92915050565b5f60208284031215612a2657612a25611b5b565b5b5f612a33848285016129fd565b91505092915050565b5f604082019050612a4f5f830185611d4e565b612a5c60208301846120da565b939250505056fea26469706673582212209bfe58888ae7c2de2f6b665a7f4a0db10fb255ae76ac15bb99cb931d580a0e7e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xD15A76D2 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FB JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x838E4537 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x8A55A50E EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x345 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0xA48A1AC GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA48A1AC EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x3BB3A24D EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x5F0CAC76 EQ PUSH2 0x255 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x50C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x999 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH2 0xEC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2471 JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x505 JUMPI POP PUSH2 0x504 DUP3 PUSH2 0x1045 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x51A SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x591 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x591 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x574 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5A5 DUP3 PUSH2 0x10AE JUMP JUMPDEST POP PUSH2 0x5AF DUP3 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C8 DUP3 DUP3 PUSH2 0x5C3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1174 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x640 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x69D PUSH2 0x1B1A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x695 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6DC JUMPI PUSH2 0x6DB PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x6FF JUMPI PUSH2 0x6FE PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x72E SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x75A SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7CE JUMPI PUSH2 0x7CD PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x7E4 SWAP1 PUSH2 0x2566 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B5 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x867 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x87A DUP4 DUP4 PUSH2 0x875 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8F0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0x916 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x942 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEDA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA2C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA63 JUMPI PUSH2 0xA62 PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA96 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA81 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x6 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xABA JUMPI PUSH2 0xAB9 PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0xADC SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB08 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB53 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB53 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB36 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB6B JUMPI PUSH2 0xB6A PUSH2 0x250C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xB81 SWAP1 PUSH2 0x2566 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA9B JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9E DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC16 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xA DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xC93 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xCB0 DUP4 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x285F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0xD07 CALLER PUSH1 0x7 SLOAD PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0xDAF SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDDB SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE43 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6F SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEBA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE91 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEBA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED6 PUSH2 0xECF PUSH2 0x116D JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1484 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xEE5 DUP5 DUP5 DUP5 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0xEF1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0xF17 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF43 SWAP1 PUSH2 0x24DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x10B9 DUP4 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1181 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1191 DUP5 PUSH2 0x179F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D2 JUMPI PUSH2 0x11D1 DUP2 DUP5 DUP7 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125D JUMPI PUSH2 0x1211 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12DC JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1401 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x140D DUP4 DUP4 PUSH0 PUSH2 0x1186 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x147F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1476 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14F4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EB SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1799 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1630 PUSH2 0x116D JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1652 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x168D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x170E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1706 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1797 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1810 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1942 JUMPI PUSH0 PUSH2 0x181F DUP5 PUSH2 0x10AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1889 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x189C JUMPI POP PUSH2 0x189A DUP2 DUP5 PUSH2 0xFB7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18DE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1940 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP4 DUP4 DUP4 PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x1A55 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A16 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0D SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4C SWAP3 SWAP2 SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B11 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AD2 JUMPI POP PUSH2 0x1AD1 DUP5 DUP5 PUSH2 0xFB7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B10 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AF8 DUP4 PUSH2 0x1134 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B33 PUSH2 0x1B39 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B97 DUP2 PUSH2 0x1B63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB2 DUP2 PUSH2 0x1B8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCD JUMPI PUSH2 0x1BCC PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BDA DUP5 DUP3 DUP6 ADD PUSH2 0x1BA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF7 DUP2 PUSH2 0x1BE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C10 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C32 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C72 DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0x1C7C DUP2 DUP6 PUSH2 0x1C20 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CB8 DUP2 DUP5 PUSH2 0x1C68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD2 DUP2 PUSH2 0x1CC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CED DUP2 PUSH2 0x1CC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D08 JUMPI PUSH2 0x1D07 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D15 DUP5 DUP3 DUP6 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D47 DUP3 PUSH2 0x1D1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D57 DUP2 PUSH2 0x1D3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D70 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D7F DUP2 PUSH2 0x1D3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9A DUP2 PUSH2 0x1D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E00 DUP5 DUP3 DUP6 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3B DUP2 PUSH2 0x1CC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5B DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0x1E65 DUP2 DUP6 PUSH2 0x1E41 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x1E7E DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1EA3 DUP3 DUP3 PUSH2 0x1E51 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1EB8 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1E32 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1ED8 PUSH0 DUP7 ADD DUP3 PUSH2 0x1E32 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1EF0 DUP3 DUP3 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F08 DUP4 DUP4 PUSH2 0x1EC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F26 DUP3 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1F30 DUP2 DUP6 PUSH2 0x1E13 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1F42 DUP6 PUSH2 0x1E23 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1F7D JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1F5E DUP6 DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP5 POP PUSH2 0x1F69 DUP4 PUSH2 0x1F10 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F45 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA7 DUP2 DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC5 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD3 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FE4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FF5 DUP7 DUP3 DUP8 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2033 DUP4 DUP4 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2051 DUP3 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x205B DUP2 DUP6 PUSH2 0x2009 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x206D DUP6 PUSH2 0x2019 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x20A8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2089 DUP6 DUP3 PUSH2 0x2028 JUMP JUMPDEST SWAP5 POP PUSH2 0x2094 DUP4 PUSH2 0x203B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2070 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D2 DUP2 DUP5 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E3 DUP2 PUSH2 0x1CC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FC PUSH0 DUP4 ADD DUP5 PUSH2 0x20DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2140 DUP3 PUSH2 0x1C58 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x215F JUMPI PUSH2 0x215E PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2171 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP PUSH2 0x217D DUP3 DUP3 PUSH2 0x2137 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x219C JUMPI PUSH2 0x219B PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH2 0x21A5 DUP3 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21D2 PUSH2 0x21CD DUP5 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21EE JUMPI PUSH2 0x21ED PUSH2 0x2106 JUMP JUMPDEST JUMPDEST PUSH2 0x21F9 DUP5 DUP3 DUP6 PUSH2 0x21B2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x2102 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2225 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x226C DUP5 DUP3 DUP6 ADD PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228B JUMPI PUSH2 0x228A PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22A8 JUMPI PUSH2 0x22A7 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x22B4 DUP6 DUP3 DUP7 ADD PUSH2 0x2201 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x22E1 DUP6 DUP3 DUP7 ADD PUSH2 0x2201 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F4 DUP2 PUSH2 0x1BE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x230F DUP2 PUSH2 0x22EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x232B JUMPI PUSH2 0x232A PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2338 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2349 DUP6 DUP3 DUP7 ADD PUSH2 0x2301 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x236D JUMPI PUSH2 0x236C PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH2 0x2376 DUP3 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2395 PUSH2 0x2390 DUP5 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x2106 JUMP JUMPDEST JUMPDEST PUSH2 0x23BC DUP5 DUP3 DUP6 PUSH2 0x21B2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23D8 JUMPI PUSH2 0x23D7 PUSH2 0x2102 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23E8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2416 DUP8 DUP3 DUP9 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2427 DUP8 DUP3 DUP9 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2438 DUP8 DUP3 DUP9 ADD PUSH2 0x1CDF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2459 JUMPI PUSH2 0x2458 PUSH2 0x1B5F JUMP JUMPDEST JUMPDEST PUSH2 0x2465 DUP8 DUP3 DUP9 ADD PUSH2 0x23C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2494 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x24AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2570 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x25A2 JUMPI PUSH2 0x25A1 PUSH2 0x2539 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x25CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x25DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25F6 DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH2 0x2600 DUP2 DUP6 PUSH2 0x25E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2610 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2627 DUP3 DUP5 PUSH2 0x25EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2669 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2674 DUP4 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2684 JUMPI PUSH2 0x2683 PUSH2 0x2632 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2699 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A4 DUP4 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26BC JUMPI PUSH2 0x26BB PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x271E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x2728 DUP7 DUP4 PUSH2 0x26E3 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2763 PUSH2 0x275E PUSH2 0x2759 DUP5 PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x2740 JUMP JUMPDEST PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x277C DUP4 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2790 PUSH2 0x2788 DUP3 PUSH2 0x276A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26EF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x27A4 PUSH2 0x2798 JUMP JUMPDEST PUSH2 0x27AF DUP2 DUP5 DUP5 PUSH2 0x2773 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D2 JUMPI PUSH2 0x27C7 PUSH0 DUP3 PUSH2 0x279C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2817 JUMPI PUSH2 0x27E8 DUP2 PUSH2 0x26C2 JUMP JUMPDEST PUSH2 0x27F1 DUP5 PUSH2 0x26D4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2800 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2814 PUSH2 0x280C DUP6 PUSH2 0x26D4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27B4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2837 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x281C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x284F DUP4 DUP4 PUSH2 0x2828 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2868 DUP3 PUSH2 0x1C16 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2881 JUMPI PUSH2 0x2880 PUSH2 0x210A JUMP JUMPDEST JUMPDEST PUSH2 0x288B DUP3 SLOAD PUSH2 0x24DC JUMP JUMPDEST PUSH2 0x2896 DUP3 DUP3 DUP6 PUSH2 0x27D6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28C7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x28B5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28BF DUP6 DUP3 PUSH2 0x2844 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28D5 DUP7 PUSH2 0x26C2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28FC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28D7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2919 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2915 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2828 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2938 DUP3 PUSH2 0x1CC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2943 DUP4 PUSH2 0x1CC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x295B JUMPI PUSH2 0x295A PUSH2 0x2539 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2985 DUP3 PUSH2 0x2961 JUMP JUMPDEST PUSH2 0x298F DUP2 DUP6 PUSH2 0x296B JUMP JUMPDEST SWAP4 POP PUSH2 0x299F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x29A8 DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x29C6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x29D3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x29E0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x20DA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x29F2 DUP2 DUP5 PUSH2 0x297B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A0B DUP2 PUSH2 0x1B8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x1B5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A33 DUP5 DUP3 DUP6 ADD PUSH2 0x29FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A4F PUSH0 DUP4 ADD DUP6 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x2A5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 INVALID PC DUP9 DUP11 0xE7 0xC2 0xDE 0x2F PUSH12 0x665A7F4A0DB10FB255AE76AC ISZERO 0xBB SWAP10 0xCB SWAP4 SAR PC EXP 0xE PUSH31 0x64736F6C634300081400330000000000000000000000000000000000000000 ",
							"sourceMap": "175:8781:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4208:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6521:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6347:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6425:1668:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7167:578:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4395:132:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7811::2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4848:1488:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3995:118:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2428:372:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3180:1142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4361:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6742:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8009:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8315:461:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4606:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6952:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3063:300;3165:4;3215:25;3200:40;;;:11;:40;;;;:104;;;;3271:33;3256:48;;;:11;:48;;;;3200:104;:156;;;;3320:36;3344:11;3320:23;:36::i;:::-;3200:156;3181:175;;3063:300;;;:::o;4208:89::-;4253:13;4285:5;4278:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4208:89;:::o;6521:154::-;6588:7;6607:22;6621:7;6607:13;:22::i;:::-;;6647:21;6660:7;6647:12;:21::i;:::-;6640:28;;6521:154;;;:::o;6347:113::-;6418:35;6427:2;6431:7;6440:12;:10;:12::i;:::-;6418:8;:35::i;:::-;6347:113;;:::o;6425:1668:0:-;6492:31;6536:25;6564:10;:17;6575:5;6564:17;;;;;;;;;;;;;;;6536:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6776;6853:8;:15;6824:45;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6776:93;;7353:9;7348:229;7372:8;:15;7368:1;:19;7348:229;;;7428:137;;;;;;;;7480:8;7489:1;7480:11;;;;;;;;:::i;:::-;;;;;;;;7428:137;;;;7522:14;:27;7537:8;7546:1;7537:11;;;;;;;;:::i;:::-;;;;;;;;7522:27;;;;;;;;;;;7428:137;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7409:13;7423:1;7409:16;;;;;;;;:::i;:::-;;;;;;;:156;;;;7389:3;;;;;:::i;:::-;;;;7348:229;;;;7825:13;7818:20;;;;6425:1668;;;:::o;7167:578:2:-;7275:1;7261:16;;:2;:16;;;7257:87;;7330:1;7300:33;;;;;;;;;;;:::i;:::-;;;;;;;;7257:87;7562:21;7586:34;7594:2;7598:7;7607:12;:10;:12::i;:::-;7586:7;:34::i;:::-;7562:58;;7651:4;7634:21;;:13;:21;;;7630:109;;7699:4;7705:7;7714:13;7678:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7630:109;7247:498;7167:578;;;:::o;4395:132:0:-;4454:13;4487:14;:23;4502:7;4487:23;;;;;;;;;;;:32;;4480:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4395:132;;;:::o;7811::2:-;7897:39;7914:4;7920:2;7924:7;7897:39;;;;;;;;;;;;:16;:39::i;:::-;7811:132;;;:::o;4848:1488:0:-;4906:15;5025:25;5053:10;:17;5064:5;5053:17;;;;;;;;;;;;;;;5025:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5379:25;5420:8;:15;5407:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5379:57;;5776:9;5771:523;5795:8;:15;5791:1;:19;5771:523;;;5847:14;:27;5862:8;5871:1;5862:11;;;;;;;;:::i;:::-;;;;;;;;5847:27;;;;;;;;;;;:36;;5832:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;5842:1;5832:12;;;;;;;;:::i;:::-;;;;;;;:51;;;;5812:3;;;;;:::i;:::-;;;;5771:523;;;;6311:9;6304:16;;;;4848:1488;;;:::o;3995:118:2:-;4058:7;4084:22;4098:7;4084:13;:22::i;:::-;4077:29;;3995:118;;;:::o;3551:208::-;3614:7;3654:1;3637:19;;:5;:19;;;3633:87;;3706:1;3679:30;;;;;;;;;;;:::i;:::-;;;;;;;;3633:87;3736:9;:16;3746:5;3736:16;;;;;;;;;;;;;;;;3729:23;;3551:208;;;:::o;2428:372:0:-;2489:7;2569:1;2562:2;2552:4;2535:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2525:33;;;;;;2517:42;;:47;;;;:::i;:::-;2516:54;;;;:::i;:::-;2509:61;;2428:372;;;:::o;3180:1142::-;3259:13;3358:21;3382:16;3393:4;3382:10;:16::i;:::-;3358:40;;3536:214;;;;;;;;3580:9;3536:214;;;;3675:13;3536:214;;;3506:14;:27;3521:11;;3506:27;;;;;;;;;;;:244;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3948:30;3954:10;3966:11;;3948:5;:30::i;:::-;4032:10;:22;4043:10;4032:22;;;;;;;;;;;;;;;4060:11;;4032:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4180:1;4165:11;;:16;;;;;;;:::i;:::-;;;;;;;;4208:14;:30;4236:1;4223:11;;:14;;;;:::i;:::-;4208:30;;;;;;;;;;;:39;;4201:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3180:1142;;;;:::o;4361:93:2:-;4408:13;4440:7;4433:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4361:93;:::o;6742:144::-;6827:52;6846:12;:10;:12::i;:::-;6860:8;6870;6827:18;:52::i;:::-;6742:144;;:::o;8009:208::-;8122:31;8135:4;8141:2;8145:7;8122:12;:31::i;:::-;8163:47;8186:4;8192:2;8196:7;8205:4;8163:22;:47::i;:::-;8009:208;;;;:::o;8315:461:0:-;8381:13;8467:14;:24;8482:8;8467:24;;;;;;;;;;;:33;;8460:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8315:461;;;:::o;4606:136::-;4669:15;4703:14;:23;4718:7;4703:23;;;;;;;;;;;:31;;;4696:38;;4606:136;;;:::o;6952:153:2:-;7040:4;7063:18;:25;7082:5;7063:25;;;;;;;;;;;;;;;:35;7089:8;7063:35;;;;;;;;;;;;;;;;;;;;;;;;;7056:42;;6952:153;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;19162:241:2:-;19225:7;19244:13;19260:17;19269:7;19260:8;:17::i;:::-;19244:33;;19308:1;19291:19;;:5;:19;;;19287:88;;19356:7;19333:31;;;;;;;;;;;:::i;:::-;;;;;;;;19287:88;19391:5;19384:12;;;19162:241;;;:::o;8962:127::-;9032:7;9058:15;:24;9074:7;9058:24;;;;;;;;;;;;;;;;;;;;;9051:31;;8962:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;17442:120:2:-;17522:33;17531:2;17535:7;17544:4;17550;17522:8;:33::i;:::-;17442:120;;;:::o;11862:795::-;11948:7;11967:12;11982:17;11991:7;11982:8;:17::i;:::-;11967:32;;12075:1;12059:18;;:4;:18;;;12055:86;;12093:37;12110:4;12116;12122:7;12093:16;:37::i;:::-;12055:86;12201:1;12185:18;;:4;:18;;;12181:256;;12301:48;12318:1;12322:7;12339:1;12343:5;12301:8;:48::i;:::-;12411:1;12392:9;:15;12402:4;12392:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12181:256;12465:1;12451:16;;:2;:16;;;12447:107;;12528:1;12511:9;:13;12521:2;12511:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12447:107;12583:2;12564:7;:16;12572:7;12564:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12620:7;12616:2;12601:27;;12610:4;12601:27;;;;;;;;;;;;12646:4;12639:11;;;11862:795;;;;;:::o;12979:327::-;13060:1;13046:16;;:2;:16;;;13042:87;;13115:1;13085:33;;;;;;;;;;;:::i;:::-;;;;;;;;13042:87;13138:21;13162:32;13170:2;13174:7;13191:1;13162:7;:32::i;:::-;13138:56;;13233:1;13208:27;;:13;:27;;;13204:96;;13286:1;13258:31;;;;;;;;;;;:::i;:::-;;;;;;;;13204:96;13032:274;12979:327;;:::o;18615:312::-;18742:1;18722:22;;:8;:22;;;18718:91;;18789:8;18767:31;;;;;;;;;;;:::i;:::-;;;;;;;;18718:91;18856:8;18818:18;:25;18837:5;18818:25;;;;;;;;;;;;;;;:35;18844:8;18818:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;18901:8;18879:41;;18894:5;18879:41;;;18911:8;18879:41;;;;;;:::i;:::-;;;;;;;;18615:312;;;:::o;19942:782::-;20075:1;20058:2;:14;;;:18;20054:664;;;20112:2;20096:36;;;20133:12;:10;:12::i;:::-;20147:4;20153:7;20162:4;20096:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;20092:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20422:1;20405:6;:13;:18;20401:293;;20476:2;20454:25;;;;;;;;;;;:::i;:::-;;;;;;;;20401:293;20646:6;20640:13;20631:6;20627:2;20623:15;20616:38;20092:616;20224:41;;;20214:51;;;:6;:51;;;;20210:130;;20318:2;20296:25;;;;;;;;;;;:::i;:::-;;;;;;;;20210:130;20168:186;20054:664;19942:782;;;;:::o;8731:115::-;8797:7;8823;:16;8831:7;8823:16;;;;;;;;;;;;;;;;;;;;;8816:23;;8731:115;;;:::o;17744:662::-;17904:9;:31;;;;17933:1;17917:18;;:4;:18;;;;17904:31;17900:460;;;17951:13;17967:22;17981:7;17967:13;:22::i;:::-;17951:38;;18133:1;18117:18;;:4;:18;;;;:35;;;;;18148:4;18139:13;;:5;:13;;;;18117:35;:69;;;;;18157:29;18174:5;18181:4;18157:16;:29::i;:::-;18156:30;18117:69;18113:142;;;18235:4;18213:27;;;;;;;;;;;:::i;:::-;;;;;;;;18113:142;18273:9;18269:81;;;18327:7;18323:2;18307:28;;18316:5;18307:28;;;;;;;;;;;;18269:81;17937:423;17900:460;18397:2;18370:15;:24;18386:7;18370:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;17744:662;;;;:::o;10106:368::-;10218:38;10232:5;10239:7;10248;10218:13;:38::i;:::-;10213:255;;10293:1;10276:19;;:5;:19;;;10272:186;;10345:7;10322:31;;;;;;;;;;;:::i;:::-;;;;;;;;10272:186;10426:7;10435;10399:44;;;;;;;;;;;;:::i;:::-;;;;;;;;10213:255;10106:368;;;:::o;9400:272::-;9503:4;9557:1;9538:21;;:7;:21;;;;:127;;;;;9585:7;9576:16;;:5;:16;;;:52;;;;9596:32;9613:5;9620:7;9596:16;:32::i;:::-;9576:52;:88;;;;9657:7;9632:32;;:21;9645:7;9632:12;:21::i;:::-;:32;;;9576:88;9538:127;9519:146;;9400:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:329::-;4949:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:119;;;5004:79;;:::i;:::-;4966:119;5124:1;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;:::i;:::-;5139:63;;5095:117;4890:329;;;;:::o;5225:152::-;5330:6;5364:5;5358:12;5348:22;;5225:152;;;:::o;5383:222::-;5520:11;5554:6;5549:3;5542:19;5594:4;5589:3;5585:14;5570:29;;5383:222;;;;:::o;5611:170::-;5716:4;5739:3;5731:11;;5769:4;5764:3;5760:14;5752:22;;5611:170;;;:::o;5787:108::-;5864:24;5882:5;5864:24;:::i;:::-;5859:3;5852:37;5787:108;;:::o;5901:159::-;5975:11;6009:6;6004:3;5997:19;6049:4;6044:3;6040:14;6025:29;;5901:159;;;;:::o;6066:357::-;6144:3;6172:39;6205:5;6172:39;:::i;:::-;6227:61;6281:6;6276:3;6227:61;:::i;:::-;6220:68;;6297:65;6355:6;6350:3;6343:4;6336:5;6332:16;6297:65;:::i;:::-;6387:29;6409:6;6387:29;:::i;:::-;6382:3;6378:39;6371:46;;6148:275;6066:357;;;;:::o;6493:611::-;6610:3;6646:4;6641:3;6637:14;6737:4;6730:5;6726:16;6720:23;6790:3;6784:4;6780:14;6773:4;6768:3;6764:14;6757:38;6816:73;6884:4;6870:12;6816:73;:::i;:::-;6808:81;;6661:239;6985:4;6978:5;6974:16;6968:23;7004:63;7061:4;7056:3;7052:14;7038:12;7004:63;:::i;:::-;6910:167;7094:4;7087:11;;6615:489;6493:611;;;;:::o;7192:667::-;7327:3;7363:4;7358:3;7354:14;7453:4;7446:5;7442:16;7436:23;7472:63;7529:4;7524:3;7520:14;7506:12;7472:63;:::i;:::-;7378:167;7631:4;7624:5;7620:16;7614:23;7684:3;7678:4;7674:14;7667:4;7662:3;7658:14;7651:38;7710:111;7816:4;7802:12;7710:111;:::i;:::-;7702:119;;7555:277;7849:4;7842:11;;7332:527;7192:667;;;;:::o;7865:308::-;8010:10;8045:122;8163:3;8155:6;8045:122;:::i;:::-;8031:136;;7865:308;;;;:::o;8179:151::-;8287:4;8319;8314:3;8310:14;8302:22;;8179:151;;;:::o;8422:1215::-;8617:3;8646:92;8732:5;8646:92;:::i;:::-;8754:124;8871:6;8866:3;8754:124;:::i;:::-;8747:131;;8904:3;8949:4;8941:6;8937:17;8932:3;8928:27;8979:94;9067:5;8979:94;:::i;:::-;9096:7;9127:1;9112:480;9137:6;9134:1;9131:13;9112:480;;;9208:9;9202:4;9198:20;9193:3;9186:33;9259:6;9253:13;9287:140;9422:4;9407:13;9287:140;:::i;:::-;9279:148;;9450:98;9541:6;9450:98;:::i;:::-;9440:108;;9577:4;9572:3;9568:14;9561:21;;9172:420;9159:1;9156;9152:9;9147:14;;9112:480;;;9116:14;9608:4;9601:11;;9628:3;9621:10;;8622:1015;;;;;8422:1215;;;;:::o;9643:525::-;9862:4;9900:2;9889:9;9885:18;9877:26;;9949:9;9943:4;9939:20;9935:1;9924:9;9920:17;9913:47;9977:184;10156:4;10147:6;9977:184;:::i;:::-;9969:192;;9643:525;;;;:::o;10174:619::-;10251:6;10259;10267;10316:2;10304:9;10295:7;10291:23;10287:32;10284:119;;;10322:79;;:::i;:::-;10284:119;10442:1;10467:53;10512:7;10503:6;10492:9;10488:22;10467:53;:::i;:::-;10457:63;;10413:117;10569:2;10595:53;10640:7;10631:6;10620:9;10616:22;10595:53;:::i;:::-;10585:63;;10540:118;10697:2;10723:53;10768:7;10759:6;10748:9;10744:22;10723:53;:::i;:::-;10713:63;;10668:118;10174:619;;;;;:::o;10799:124::-;10876:6;10910:5;10904:12;10894:22;;10799:124;;;:::o;10929:194::-;11038:11;11072:6;11067:3;11060:19;11112:4;11107:3;11103:14;11088:29;;10929:194;;;;:::o;11129:142::-;11206:4;11229:3;11221:11;;11259:4;11254:3;11250:14;11242:22;;11129:142;;;:::o;11277:196::-;11366:10;11401:66;11463:3;11455:6;11401:66;:::i;:::-;11387:80;;11277:196;;;;:::o;11479:123::-;11559:4;11591;11586:3;11582:14;11574:22;;11479:123;;;:::o;11636:991::-;11775:3;11804:64;11862:5;11804:64;:::i;:::-;11884:96;11973:6;11968:3;11884:96;:::i;:::-;11877:103;;12006:3;12051:4;12043:6;12039:17;12034:3;12030:27;12081:66;12141:5;12081:66;:::i;:::-;12170:7;12201:1;12186:396;12211:6;12208:1;12205:13;12186:396;;;12282:9;12276:4;12272:20;12267:3;12260:33;12333:6;12327:13;12361:84;12440:4;12425:13;12361:84;:::i;:::-;12353:92;;12468:70;12531:6;12468:70;:::i;:::-;12458:80;;12567:4;12562:3;12558:14;12551:21;;12246:336;12233:1;12230;12226:9;12221:14;;12186:396;;;12190:14;12598:4;12591:11;;12618:3;12611:10;;11780:847;;;;;11636:991;;;;:::o;12633:413::-;12796:4;12834:2;12823:9;12819:18;12811:26;;12883:9;12877:4;12873:20;12869:1;12858:9;12854:17;12847:47;12911:128;13034:4;13025:6;12911:128;:::i;:::-;12903:136;;12633:413;;;;:::o;13052:118::-;13139:24;13157:5;13139:24;:::i;:::-;13134:3;13127:37;13052:118;;:::o;13176:222::-;13269:4;13307:2;13296:9;13292:18;13284:26;;13320:71;13388:1;13377:9;13373:17;13364:6;13320:71;:::i;:::-;13176:222;;;;:::o;13404:117::-;13513:1;13510;13503:12;13527:117;13636:1;13633;13626:12;13650:180;13698:77;13695:1;13688:88;13795:4;13792:1;13785:15;13819:4;13816:1;13809:15;13836:281;13919:27;13941:4;13919:27;:::i;:::-;13911:6;13907:40;14049:6;14037:10;14034:22;14013:18;14001:10;13998:34;13995:62;13992:88;;;14060:18;;:::i;:::-;13992:88;14100:10;14096:2;14089:22;13879:238;13836:281;;:::o;14123:129::-;14157:6;14184:20;;:::i;:::-;14174:30;;14213:33;14241:4;14233:6;14213:33;:::i;:::-;14123:129;;;:::o;14258:308::-;14320:4;14410:18;14402:6;14399:30;14396:56;;;14432:18;;:::i;:::-;14396:56;14470:29;14492:6;14470:29;:::i;:::-;14462:37;;14554:4;14548;14544:15;14536:23;;14258:308;;;:::o;14572:146::-;14669:6;14664:3;14659;14646:30;14710:1;14701:6;14696:3;14692:16;14685:27;14572:146;;;:::o;14724:425::-;14802:5;14827:66;14843:49;14885:6;14843:49;:::i;:::-;14827:66;:::i;:::-;14818:75;;14916:6;14909:5;14902:21;14954:4;14947:5;14943:16;14992:3;14983:6;14978:3;14974:16;14971:25;14968:112;;;14999:79;;:::i;:::-;14968:112;15089:54;15136:6;15131:3;15126;15089:54;:::i;:::-;14808:341;14724:425;;;;;:::o;15169:340::-;15225:5;15274:3;15267:4;15259:6;15255:17;15251:27;15241:122;;15282:79;;:::i;:::-;15241:122;15399:6;15386:20;15424:79;15499:3;15491:6;15484:4;15476:6;15472:17;15424:79;:::i;:::-;15415:88;;15231:278;15169:340;;;;:::o;15515:509::-;15584:6;15633:2;15621:9;15612:7;15608:23;15604:32;15601:119;;;15639:79;;:::i;:::-;15601:119;15787:1;15776:9;15772:17;15759:31;15817:18;15809:6;15806:30;15803:117;;;15839:79;;:::i;:::-;15803:117;15944:63;15999:7;15990:6;15979:9;15975:22;15944:63;:::i;:::-;15934:73;;15730:287;15515:509;;;;:::o;16030:834::-;16118:6;16126;16175:2;16163:9;16154:7;16150:23;16146:32;16143:119;;;16181:79;;:::i;:::-;16143:119;16329:1;16318:9;16314:17;16301:31;16359:18;16351:6;16348:30;16345:117;;;16381:79;;:::i;:::-;16345:117;16486:63;16541:7;16532:6;16521:9;16517:22;16486:63;:::i;:::-;16476:73;;16272:287;16626:2;16615:9;16611:18;16598:32;16657:18;16649:6;16646:30;16643:117;;;16679:79;;:::i;:::-;16643:117;16784:63;16839:7;16830:6;16819:9;16815:22;16784:63;:::i;:::-;16774:73;;16569:288;16030:834;;;;;:::o;16870:116::-;16940:21;16955:5;16940:21;:::i;:::-;16933:5;16930:32;16920:60;;16976:1;16973;16966:12;16920:60;16870:116;:::o;16992:133::-;17035:5;17073:6;17060:20;17051:29;;17089:30;17113:5;17089:30;:::i;:::-;16992:133;;;;:::o;17131:468::-;17196:6;17204;17253:2;17241:9;17232:7;17228:23;17224:32;17221:119;;;17259:79;;:::i;:::-;17221:119;17379:1;17404:53;17449:7;17440:6;17429:9;17425:22;17404:53;:::i;:::-;17394:63;;17350:117;17506:2;17532:50;17574:7;17565:6;17554:9;17550:22;17532:50;:::i;:::-;17522:60;;17477:115;17131:468;;;;;:::o;17605:307::-;17666:4;17756:18;17748:6;17745:30;17742:56;;;17778:18;;:::i;:::-;17742:56;17816:29;17838:6;17816:29;:::i;:::-;17808:37;;17900:4;17894;17890:15;17882:23;;17605:307;;;:::o;17918:423::-;17995:5;18020:65;18036:48;18077:6;18036:48;:::i;:::-;18020:65;:::i;:::-;18011:74;;18108:6;18101:5;18094:21;18146:4;18139:5;18135:16;18184:3;18175:6;18170:3;18166:16;18163:25;18160:112;;;18191:79;;:::i;:::-;18160:112;18281:54;18328:6;18323:3;18318;18281:54;:::i;:::-;18001:340;17918:423;;;;;:::o;18360:338::-;18415:5;18464:3;18457:4;18449:6;18445:17;18441:27;18431:122;;18472:79;;:::i;:::-;18431:122;18589:6;18576:20;18614:78;18688:3;18680:6;18673:4;18665:6;18661:17;18614:78;:::i;:::-;18605:87;;18421:277;18360:338;;;;:::o;18704:943::-;18799:6;18807;18815;18823;18872:3;18860:9;18851:7;18847:23;18843:33;18840:120;;;18879:79;;:::i;:::-;18840:120;18999:1;19024:53;19069:7;19060:6;19049:9;19045:22;19024:53;:::i;:::-;19014:63;;18970:117;19126:2;19152:53;19197:7;19188:6;19177:9;19173:22;19152:53;:::i;:::-;19142:63;;19097:118;19254:2;19280:53;19325:7;19316:6;19305:9;19301:22;19280:53;:::i;:::-;19270:63;;19225:118;19410:2;19399:9;19395:18;19382:32;19441:18;19433:6;19430:30;19427:117;;;19463:79;;:::i;:::-;19427:117;19568:62;19622:7;19613:6;19602:9;19598:22;19568:62;:::i;:::-;19558:72;;19353:287;18704:943;;;;;;;:::o;19653:474::-;19721:6;19729;19778:2;19766:9;19757:7;19753:23;19749:32;19746:119;;;19784:79;;:::i;:::-;19746:119;19904:1;19929:53;19974:7;19965:6;19954:9;19950:22;19929:53;:::i;:::-;19919:63;;19875:117;20031:2;20057:53;20102:7;20093:6;20082:9;20078:22;20057:53;:::i;:::-;20047:63;;20002:118;19653:474;;;;;:::o;20133:180::-;20181:77;20178:1;20171:88;20278:4;20275:1;20268:15;20302:4;20299:1;20292:15;20319:320;20363:6;20400:1;20394:4;20390:12;20380:22;;20447:1;20441:4;20437:12;20468:18;20458:81;;20524:4;20516:6;20512:17;20502:27;;20458:81;20586:2;20578:6;20575:14;20555:18;20552:38;20549:84;;20605:18;;:::i;:::-;20549:84;20370:269;20319:320;;;:::o;20645:180::-;20693:77;20690:1;20683:88;20790:4;20787:1;20780:15;20814:4;20811:1;20804:15;20831:180;20879:77;20876:1;20869:88;20976:4;20973:1;20966:15;21000:4;20997:1;20990:15;21017:233;21056:3;21079:24;21097:5;21079:24;:::i;:::-;21070:33;;21125:66;21118:5;21115:77;21112:103;;21195:18;;:::i;:::-;21112:103;21242:1;21235:5;21231:13;21224:20;;21017:233;;;:::o;21256:442::-;21405:4;21443:2;21432:9;21428:18;21420:26;;21456:71;21524:1;21513:9;21509:17;21500:6;21456:71;:::i;:::-;21537:72;21605:2;21594:9;21590:18;21581:6;21537:72;:::i;:::-;21619;21687:2;21676:9;21672:18;21663:6;21619:72;:::i;:::-;21256:442;;;;;;:::o;21704:148::-;21806:11;21843:3;21828:18;;21704:148;;;;:::o;21858:390::-;21964:3;21992:39;22025:5;21992:39;:::i;:::-;22047:89;22129:6;22124:3;22047:89;:::i;:::-;22040:96;;22145:65;22203:6;22198:3;22191:4;22184:5;22180:16;22145:65;:::i;:::-;22235:6;22230:3;22226:16;22219:23;;21968:280;21858:390;;;;:::o;22254:275::-;22386:3;22408:95;22499:3;22490:6;22408:95;:::i;:::-;22401:102;;22520:3;22513:10;;22254:275;;;;:::o;22535:180::-;22583:77;22580:1;22573:88;22680:4;22677:1;22670:15;22704:4;22701:1;22694:15;22721:176;22753:1;22770:20;22788:1;22770:20;:::i;:::-;22765:25;;22804:20;22822:1;22804:20;:::i;:::-;22799:25;;22843:1;22833:35;;22848:18;;:::i;:::-;22833:35;22889:1;22886;22882:9;22877:14;;22721:176;;;;:::o;22903:191::-;22943:3;22962:20;22980:1;22962:20;:::i;:::-;22957:25;;22996:20;23014:1;22996:20;:::i;:::-;22991:25;;23039:1;23036;23032:9;23025:16;;23060:3;23057:1;23054:10;23051:36;;;23067:18;;:::i;:::-;23051:36;22903:191;;;;:::o;23100:141::-;23149:4;23172:3;23164:11;;23195:3;23192:1;23185:14;23229:4;23226:1;23216:18;23208:26;;23100:141;;;:::o;23247:93::-;23284:6;23331:2;23326;23319:5;23315:14;23311:23;23301:33;;23247:93;;;:::o;23346:107::-;23390:8;23440:5;23434:4;23430:16;23409:37;;23346:107;;;;:::o;23459:393::-;23528:6;23578:1;23566:10;23562:18;23601:97;23631:66;23620:9;23601:97;:::i;:::-;23719:39;23749:8;23738:9;23719:39;:::i;:::-;23707:51;;23791:4;23787:9;23780:5;23776:21;23767:30;;23840:4;23830:8;23826:19;23819:5;23816:30;23806:40;;23535:317;;23459:393;;;;;:::o;23858:60::-;23886:3;23907:5;23900:12;;23858:60;;;:::o;23924:142::-;23974:9;24007:53;24025:34;24034:24;24052:5;24034:24;:::i;:::-;24025:34;:::i;:::-;24007:53;:::i;:::-;23994:66;;23924:142;;;:::o;24072:75::-;24115:3;24136:5;24129:12;;24072:75;;;:::o;24153:269::-;24263:39;24294:7;24263:39;:::i;:::-;24324:91;24373:41;24397:16;24373:41;:::i;:::-;24365:6;24358:4;24352:11;24324:91;:::i;:::-;24318:4;24311:105;24229:193;24153:269;;;:::o;24428:73::-;24473:3;24428:73;:::o;24507:189::-;24584:32;;:::i;:::-;24625:65;24683:6;24675;24669:4;24625:65;:::i;:::-;24560:136;24507:189;;:::o;24702:186::-;24762:120;24779:3;24772:5;24769:14;24762:120;;;24833:39;24870:1;24863:5;24833:39;:::i;:::-;24806:1;24799:5;24795:13;24786:22;;24762:120;;;24702:186;;:::o;24894:543::-;24995:2;24990:3;24987:11;24984:446;;;25029:38;25061:5;25029:38;:::i;:::-;25113:29;25131:10;25113:29;:::i;:::-;25103:8;25099:44;25296:2;25284:10;25281:18;25278:49;;;25317:8;25302:23;;25278:49;25340:80;25396:22;25414:3;25396:22;:::i;:::-;25386:8;25382:37;25369:11;25340:80;:::i;:::-;24999:431;;24984:446;24894:543;;;:::o;25443:117::-;25497:8;25547:5;25541:4;25537:16;25516:37;;25443:117;;;;:::o;25566:169::-;25610:6;25643:51;25691:1;25687:6;25679:5;25676:1;25672:13;25643:51;:::i;:::-;25639:56;25724:4;25718;25714:15;25704:25;;25617:118;25566:169;;;;:::o;25740:295::-;25816:4;25962:29;25987:3;25981:4;25962:29;:::i;:::-;25954:37;;26024:3;26021:1;26017:11;26011:4;26008:21;26000:29;;25740:295;;;;:::o;26040:1395::-;26157:37;26190:3;26157:37;:::i;:::-;26259:18;26251:6;26248:30;26245:56;;;26281:18;;:::i;:::-;26245:56;26325:38;26357:4;26351:11;26325:38;:::i;:::-;26410:67;26470:6;26462;26456:4;26410:67;:::i;:::-;26504:1;26528:4;26515:17;;26560:2;26552:6;26549:14;26577:1;26572:618;;;;27234:1;27251:6;27248:77;;;27300:9;27295:3;27291:19;27285:26;27276:35;;27248:77;27351:67;27411:6;27404:5;27351:67;:::i;:::-;27345:4;27338:81;27207:222;26542:887;;26572:618;26624:4;26620:9;26612:6;26608:22;26658:37;26690:4;26658:37;:::i;:::-;26717:1;26731:208;26745:7;26742:1;26739:14;26731:208;;;26824:9;26819:3;26815:19;26809:26;26801:6;26794:42;26875:1;26867:6;26863:14;26853:24;;26922:2;26911:9;26907:18;26894:31;;26768:4;26765:1;26761:12;26756:17;;26731:208;;;26967:6;26958:7;26955:19;26952:179;;;27025:9;27020:3;27016:19;27010:26;27068:48;27110:4;27102:6;27098:17;27087:9;27068:48;:::i;:::-;27060:6;27053:64;26975:156;26952:179;27177:1;27173;27165:6;27161:14;27157:22;27151:4;27144:36;26579:611;;;26542:887;;26132:1303;;;26040:1395;;:::o;27441:194::-;27481:4;27501:20;27519:1;27501:20;:::i;:::-;27496:25;;27535:20;27553:1;27535:20;:::i;:::-;27530:25;;27579:1;27576;27572:9;27564:17;;27603:1;27597:4;27594:11;27591:37;;;27608:18;;:::i;:::-;27591:37;27441:194;;;;:::o;27641:98::-;27692:6;27726:5;27720:12;27710:22;;27641:98;;;:::o;27745:168::-;27828:11;27862:6;27857:3;27850:19;27902:4;27897:3;27893:14;27878:29;;27745:168;;;;:::o;27919:373::-;28005:3;28033:38;28065:5;28033:38;:::i;:::-;28087:70;28150:6;28145:3;28087:70;:::i;:::-;28080:77;;28166:65;28224:6;28219:3;28212:4;28205:5;28201:16;28166:65;:::i;:::-;28256:29;28278:6;28256:29;:::i;:::-;28251:3;28247:39;28240:46;;28009:283;27919:373;;;;:::o;28298:640::-;28493:4;28531:3;28520:9;28516:19;28508:27;;28545:71;28613:1;28602:9;28598:17;28589:6;28545:71;:::i;:::-;28626:72;28694:2;28683:9;28679:18;28670:6;28626:72;:::i;:::-;28708;28776:2;28765:9;28761:18;28752:6;28708:72;:::i;:::-;28827:9;28821:4;28817:20;28812:2;28801:9;28797:18;28790:48;28855:76;28926:4;28917:6;28855:76;:::i;:::-;28847:84;;28298:640;;;;;;;:::o;28944:141::-;29000:5;29031:6;29025:13;29016:22;;29047:32;29073:5;29047:32;:::i;:::-;28944:141;;;;:::o;29091:349::-;29160:6;29209:2;29197:9;29188:7;29184:23;29180:32;29177:119;;;29215:79;;:::i;:::-;29177:119;29335:1;29360:63;29415:7;29406:6;29395:9;29391:22;29360:63;:::i;:::-;29350:73;;29306:127;29091:349;;;;:::o;29446:332::-;29567:4;29605:2;29594:9;29590:18;29582:26;;29618:71;29686:1;29675:9;29671:17;29662:6;29618:71;:::i;:::-;29699:72;29767:2;29756:9;29752:18;29743:6;29699:72;:::i;:::-;29446:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2181000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getOwnerTokenMetaData(address)": "infinite",
								"getOwnerURIs(address)": "infinite",
								"getTokenRanking(uint256)": "infinite",
								"getTokenURI(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"makeRandom(string)": "infinite",
								"minting(string,string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2028,
									"end": 2029,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2006,
									"end": 2029,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2006,
									"end": 2029,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 207,
									"end": 298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 207,
									"end": 298,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 272,
									"end": 277,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2788,
									"end": 2793,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2785,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2780,
									"end": 2793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2780,
									"end": 2793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2813,
									"end": 2820,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2810,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2803,
									"end": 2820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2803,
									"end": 2820,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2714,
									"end": 2827,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2714,
									"end": 2827,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 207,
									"end": 298,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 207,
									"end": 298,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8956,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bfe58888ae7c2de2f6b665a7f4a0db10fb255ae76ac15bb99cb931d580a0e7e64736f6c63430008140033",
									".code": [
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "D15A76D2"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "838E4537"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "8A55A50E"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "A48A1AC"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "A48A1AC"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "3BB3A24D"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "5F0CAC76"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 8956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3063,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3063,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3063,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4208,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4208,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6521,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6521,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6347,
											"end": 6460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6347,
											"end": 6460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6425,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6425,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6425,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7167,
											"end": 7745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7167,
											"end": 7745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4395,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4395,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4395,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7811,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7811,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4848,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4848,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4848,
											"end": 6336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3995,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3995,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3551,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3551,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2428,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2428,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2428,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3180,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3180,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3180,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4361,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4361,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6742,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6742,
											"end": 6886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8009,
											"end": 8217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8009,
											"end": 8217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8315,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8315,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8315,
											"end": 8776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4606,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4606,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4606,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6952,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6952,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 6952,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3169,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3200,
											"end": 3304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3271,
											"end": 3304,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3304,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3304,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3200,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3356,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3200,
											"end": 3356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3344,
											"end": 3355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3320,
											"end": 3356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3356,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3320,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3356,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3200,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4266,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4278,
											"end": 4290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4278,
											"end": 4290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6607,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6629,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6607,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6647,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6640,
											"end": 6668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6640,
											"end": 6668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6521,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6418,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6427,
											"end": 6429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6440,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6440,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6452,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6440,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6418,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6418,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6418,
											"end": 6453,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6418,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6347,
											"end": 6460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6536,
											"end": 6561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6580,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6536,
											"end": 6581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6776,
											"end": 6821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 6868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6824,
											"end": 6869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6824,
											"end": 6869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6776,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6776,
											"end": 6869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7353,
											"end": 7362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7387,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7489,
											"end": 7490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7480,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7536,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7545,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7537,
											"end": 7548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7428,
											"end": 7565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7428,
											"end": 7565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7423,
											"end": 7424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7409,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7409,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7389,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7348,
											"end": 7577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6425,
											"end": 8093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7275,
											"end": 7276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7261,
											"end": 7277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7261,
											"end": 7277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7277,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7257,
											"end": 7344,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 7344,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7257,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7594,
											"end": 7596,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7598,
											"end": 7605,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7607,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7607,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7607,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7586,
											"end": 7620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7620,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7586,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7562,
											"end": 7620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7562,
											"end": 7620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7651,
											"end": 7655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7655,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7630,
											"end": 7739,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7703,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7678,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7739,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7630,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7247,
											"end": 7745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4487,
											"end": 4501,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4480,
											"end": 4519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4480,
											"end": 4519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7914,
											"end": 7918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7897,
											"end": 7936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7897,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4921,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5025,
											"end": 5050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5063,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5025,
											"end": 5070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5407,
											"end": 5436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5795,
											"end": 5810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5861,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5862,
											"end": 5870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5862,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5847,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5832,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5832,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5842,
											"end": 5843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5832,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5812,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 6294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 6336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4098,
											"end": 4105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4084,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3633,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3633,
											"end": 3720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3633,
											"end": 3720,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3633,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2552,
											"end": 2556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2535,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2517,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2517,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2516,
											"end": 2570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2516,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2570,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2516,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3358,
											"end": 3379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3393,
											"end": 3397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3382,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3398,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3382,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3521,
											"end": 3532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3506,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3966,
											"end": 3977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3948,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3948,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4042,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4053,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4060,
											"end": 4071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4165,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4165,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4165,
											"end": 4181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4223,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4223,
											"end": 4234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4223,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4223,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4223,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4208,
											"end": 4238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4208,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4201,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4201,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4201,
											"end": 4247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4408,
											"end": 4421,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4433,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4433,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6846,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6846,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6846,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6846,
											"end": 6858,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6846,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6860,
											"end": 6868,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6870,
											"end": 6878,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6827,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6879,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6827,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8141,
											"end": 8143,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8145,
											"end": 8152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 8122,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8122,
											"end": 8153,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8122,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8186,
											"end": 8190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8194,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8196,
											"end": 8203,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8205,
											"end": 8209,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8163,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8210,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8163,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8009,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8381,
											"end": 8394,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8467,
											"end": 8481,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8460,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8460,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4669,
											"end": 4684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4703,
											"end": 4734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7040,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7081,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7087,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7088,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7063,
											"end": 7098,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7056,
											"end": 7098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7056,
											"end": 7098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6952,
											"end": 7105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19403,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 19162,
											"end": 19403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19225,
											"end": 19232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19244,
											"end": 19257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19260,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 19269,
											"end": 19276,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19260,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 19260,
											"end": 19277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19260,
											"end": 19277,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 19260,
											"end": 19277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19244,
											"end": 19277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19244,
											"end": 19277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19308,
											"end": 19309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19291,
											"end": 19310,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19291,
											"end": 19310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19291,
											"end": 19296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19291,
											"end": 19310,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19291,
											"end": 19310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19291,
											"end": 19310,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19287,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 19287,
											"end": 19375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19356,
											"end": 19363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 19333,
											"end": 19364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19333,
											"end": 19364,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19287,
											"end": 19375,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 19287,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19391,
											"end": 19396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19384,
											"end": 19396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19384,
											"end": 19396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19384,
											"end": 19396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19162,
											"end": 19403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19162,
											"end": 19403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19162,
											"end": 19403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19162,
											"end": 19403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8962,
											"end": 9089,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 8962,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9073,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9058,
											"end": 9082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8962,
											"end": 9089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8962,
											"end": 9089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8962,
											"end": 9089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8962,
											"end": 9089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17442,
											"end": 17562,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 17442,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17522,
											"end": 17555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 17531,
											"end": 17533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17535,
											"end": 17542,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17544,
											"end": 17548,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17550,
											"end": 17554,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17522,
											"end": 17530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 17522,
											"end": 17555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17522,
											"end": 17555,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 17522,
											"end": 17555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17442,
											"end": 17562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17442,
											"end": 17562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17442,
											"end": 17562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17442,
											"end": 17562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11982,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11982,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 11982,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11982,
											"end": 11999,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 11982,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11967,
											"end": 11999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11967,
											"end": 11999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12059,
											"end": 12077,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12059,
											"end": 12077,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12077,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12059,
											"end": 12077,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12059,
											"end": 12077,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12055,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 12055,
											"end": 12141,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12093,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 12110,
											"end": 12114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12116,
											"end": 12120,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12129,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12093,
											"end": 12109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 12093,
											"end": 12130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12093,
											"end": 12130,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 12093,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12055,
											"end": 12141,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 12055,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12201,
											"end": 12202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12185,
											"end": 12203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12181,
											"end": 12437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 12181,
											"end": 12437,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 12318,
											"end": 12319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12322,
											"end": 12329,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12339,
											"end": 12340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12343,
											"end": 12348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 12301,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12349,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 12301,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12411,
											"end": 12412,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12392,
											"end": 12401,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12402,
											"end": 12406,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12392,
											"end": 12412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12181,
											"end": 12437,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 12181,
											"end": 12437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12465,
											"end": 12466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12451,
											"end": 12467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12451,
											"end": 12467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12451,
											"end": 12467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12451,
											"end": 12467,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12447,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 12447,
											"end": 12554,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12528,
											"end": 12529,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12511,
											"end": 12520,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12447,
											"end": 12554,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 12447,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12583,
											"end": 12585,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12571,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12572,
											"end": 12579,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12620,
											"end": 12627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12616,
											"end": 12618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12610,
											"end": 12614,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12628,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 12646,
											"end": 12650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 12650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 12650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 12650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11862,
											"end": 12657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12979,
											"end": 13306,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 12979,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13060,
											"end": 13061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13046,
											"end": 13062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13046,
											"end": 13062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13046,
											"end": 13048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13046,
											"end": 13062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13046,
											"end": 13062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13046,
											"end": 13062,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13042,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 13042,
											"end": 13129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13085,
											"end": 13118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13042,
											"end": 13129,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 13042,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13138,
											"end": 13159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 13170,
											"end": 13172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13174,
											"end": 13181,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13191,
											"end": 13192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 13162,
											"end": 13194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13138,
											"end": 13194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13138,
											"end": 13194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13233,
											"end": 13234,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13204,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 13204,
											"end": 13300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13286,
											"end": 13287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13258,
											"end": 13289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13258,
											"end": 13289,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13204,
											"end": 13300,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 13204,
											"end": 13300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13032,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12979,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12979,
											"end": 13306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12979,
											"end": 13306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18615,
											"end": 18927,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 18615,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18742,
											"end": 18743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18722,
											"end": 18744,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18722,
											"end": 18744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18722,
											"end": 18730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18722,
											"end": 18744,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18722,
											"end": 18744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18722,
											"end": 18744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18718,
											"end": 18809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 18718,
											"end": 18809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18789,
											"end": 18797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18767,
											"end": 18798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18767,
											"end": 18798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18718,
											"end": 18809,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 18718,
											"end": 18809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18856,
											"end": 18864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18836,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18837,
											"end": 18842,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18843,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18844,
											"end": 18852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18818,
											"end": 18864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18901,
											"end": 18909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18894,
											"end": 18899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 18911,
											"end": 18919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 18879,
											"end": 18920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18879,
											"end": 18920,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 18615,
											"end": 18927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18615,
											"end": 18927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18615,
											"end": 18927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18615,
											"end": 18927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19942,
											"end": 20724,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 19942,
											"end": 20724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20075,
											"end": 20076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20058,
											"end": 20060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20058,
											"end": 20072,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20058,
											"end": 20072,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20058,
											"end": 20072,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 20054,
											"end": 20718,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20054,
											"end": 20718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 20054,
											"end": 20718,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20112,
											"end": 20114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20096,
											"end": 20132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20132,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 20133,
											"end": 20145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 20133,
											"end": 20143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 20133,
											"end": 20145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20133,
											"end": 20145,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 20133,
											"end": 20145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20147,
											"end": 20151,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 20153,
											"end": 20160,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20162,
											"end": 20166,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 20096,
											"end": 20167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 20096,
											"end": 20167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 20096,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20422,
											"end": 20423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20405,
											"end": 20411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20405,
											"end": 20418,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20405,
											"end": 20423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20401,
											"end": 20694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 20401,
											"end": 20694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20476,
											"end": 20478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20454,
											"end": 20479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20454,
											"end": 20479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20401,
											"end": 20694,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 20401,
											"end": 20694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20646,
											"end": 20652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20640,
											"end": 20653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20631,
											"end": 20637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20627,
											"end": 20629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20623,
											"end": 20638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20616,
											"end": 20654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 20092,
											"end": 20708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20224,
											"end": 20265,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 20224,
											"end": 20265,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 20224,
											"end": 20265,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20214,
											"end": 20220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20214,
											"end": 20265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20210,
											"end": 20340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 20210,
											"end": 20340,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20318,
											"end": 20320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20296,
											"end": 20321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20321,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 20210,
											"end": 20340,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 20210,
											"end": 20340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20168,
											"end": 20354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20054,
											"end": 20718,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 20054,
											"end": 20718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19942,
											"end": 20724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19942,
											"end": 20724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19942,
											"end": 20724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19942,
											"end": 20724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19942,
											"end": 20724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8846,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 8731,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8830,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8831,
											"end": 8838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8823,
											"end": 8839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17744,
											"end": 18406,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 17744,
											"end": 18406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17913,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 17904,
											"end": 17935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17933,
											"end": 17934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17917,
											"end": 17921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17917,
											"end": 17935,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17935,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 17904,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 18360,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 17900,
											"end": 18360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17967,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 17981,
											"end": 17988,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17967,
											"end": 17980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 17967,
											"end": 17989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17967,
											"end": 17989,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 17967,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18133,
											"end": 18134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18121,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18148,
											"end": 18152,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18139,
											"end": 18144,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18139,
											"end": 18152,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 18117,
											"end": 18152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18157,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 18174,
											"end": 18179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18181,
											"end": 18185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18157,
											"end": 18173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 18157,
											"end": 18186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18157,
											"end": 18186,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 18157,
											"end": 18186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18156,
											"end": 18186,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 18117,
											"end": 18186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18113,
											"end": 18255,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18113,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 18113,
											"end": 18255,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18235,
											"end": 18239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18213,
											"end": 18240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18213,
											"end": 18240,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18113,
											"end": 18255,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 18113,
											"end": 18255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18273,
											"end": 18282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18269,
											"end": 18350,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18269,
											"end": 18350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 18269,
											"end": 18350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18327,
											"end": 18334,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18323,
											"end": 18325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18316,
											"end": 18321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18307,
											"end": 18335,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 18269,
											"end": 18350,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 18269,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17937,
											"end": 18360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 18360,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 17900,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18397,
											"end": 18399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18385,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18386,
											"end": 18393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17744,
											"end": 18406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17744,
											"end": 18406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17744,
											"end": 18406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17744,
											"end": 18406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17744,
											"end": 18406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10474,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10106,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10232,
											"end": 10237,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10239,
											"end": 10246,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10248,
											"end": 10255,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10218,
											"end": 10256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10256,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10218,
											"end": 10256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10213,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10213,
											"end": 10468,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10293,
											"end": 10294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10276,
											"end": 10295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10276,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10276,
											"end": 10295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10276,
											"end": 10295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10276,
											"end": 10295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10272,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 10272,
											"end": 10458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10345,
											"end": 10352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 10322,
											"end": 10353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10322,
											"end": 10353,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10272,
											"end": 10458,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 10272,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10426,
											"end": 10433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10435,
											"end": 10442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 10399,
											"end": 10443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10399,
											"end": 10443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10213,
											"end": 10468,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10213,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9545,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9585,
											"end": 9592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9592,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 9613,
											"end": 9618,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9620,
											"end": 9627,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 9596,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9628,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 9596,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 9576,
											"end": 9664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9657,
											"end": 9664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9632,
											"end": 9664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 9645,
											"end": 9652,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 9632,
											"end": 9653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9653,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 9632,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9632,
											"end": 9664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9632,
											"end": 9664,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9576,
											"end": 9664,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 9576,
											"end": 9664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 9538,
											"end": 9665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9519,
											"end": 9665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9519,
											"end": 9665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9400,
											"end": 9672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "320"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "321"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "320"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4996,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 5004,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5194,
											"end": 5201,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 5149,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5095,
											"end": 5212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5377,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 5225,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5358,
											"end": 5370,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5605,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5383,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5549,
											"end": 5552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5570,
											"end": 5599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5605,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5605,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5605,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5781,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 5611,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5716,
											"end": 5720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5752,
											"end": 5774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5752,
											"end": 5774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5781,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5781,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5895,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5787,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 5882,
											"end": 5887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 5864,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5888,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 5864,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 6060,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5901,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5975,
											"end": 5986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6004,
											"end": 6007,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6044,
											"end": 6047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6025,
											"end": 6054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 6060,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 6060,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 6060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 6060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 6060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6423,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 6066,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6205,
											"end": 6210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6172,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6172,
											"end": 6211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6172,
											"end": 6211,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6172,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6276,
											"end": 6279,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 6227,
											"end": 6288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 6227,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6288,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6297,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6343,
											"end": 6347,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6336,
											"end": 6341,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6332,
											"end": 6348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6297,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6297,
											"end": 6362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6297,
											"end": 6362,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 6297,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 6409,
											"end": 6415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 6387,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6416,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 6387,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6385,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6378,
											"end": 6417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6417,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6371,
											"end": 6417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6148,
											"end": 6423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6066,
											"end": 6423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 7104,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 6493,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6610,
											"end": 6613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6641,
											"end": 6644,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6637,
											"end": 6651,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6737,
											"end": 6741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6742,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6720,
											"end": 6743,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6793,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6794,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 6778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6870,
											"end": 6882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 6816,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6889,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 6816,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6808,
											"end": 6889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6808,
											"end": 6889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6978,
											"end": 6983,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 6990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 6991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 7061,
											"end": 7065,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7052,
											"end": 7066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7038,
											"end": 7050,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7004,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 7077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7098,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 7104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 7104,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 7104,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 7104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 7104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 7104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7859,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 7192,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7367,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7361,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7354,
											"end": 7368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7453,
											"end": 7457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7451,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7436,
											"end": 7459,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7529,
											"end": 7533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7527,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7520,
											"end": 7534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7506,
											"end": 7518,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 7472,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7535,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 7472,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7624,
											"end": 7629,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7620,
											"end": 7636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 7637,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7687,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7674,
											"end": 7688,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7662,
											"end": 7665,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7658,
											"end": 7672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7651,
											"end": 7689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7802,
											"end": 7814,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7710,
											"end": 7821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7821,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 7710,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7702,
											"end": 7821,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7702,
											"end": 7821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7555,
											"end": 7832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7842,
											"end": 7853,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7842,
											"end": 7853,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7332,
											"end": 7859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7859,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7859,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8173,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 7865,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8045,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8163,
											"end": 8166,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8155,
											"end": 8161,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8045,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8045,
											"end": 8167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8045,
											"end": 8167,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8045,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8031,
											"end": 8167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8031,
											"end": 8167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8173,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8173,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 8173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8330,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 8179,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8319,
											"end": 8323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8314,
											"end": 8317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8310,
											"end": 8324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8179,
											"end": 8330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 9637,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 8422,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8617,
											"end": 8620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8732,
											"end": 8737,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8646,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8646,
											"end": 8738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8646,
											"end": 8738,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8646,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8871,
											"end": 8877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8866,
											"end": 8869,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8754,
											"end": 8878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8878,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8754,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8878,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8747,
											"end": 8878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8904,
											"end": 8907,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8949,
											"end": 8953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8941,
											"end": 8947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8954,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8932,
											"end": 8935,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 9067,
											"end": 9072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8979,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9073,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 8979,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9127,
											"end": 9128,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9131,
											"end": 9144,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9208,
											"end": 9217,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9202,
											"end": 9206,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9193,
											"end": 9196,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9186,
											"end": 9219,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9259,
											"end": 9265,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9253,
											"end": 9266,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 9422,
											"end": 9426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9407,
											"end": 9420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 9287,
											"end": 9427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9427,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 9287,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9427,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9450,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9450,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 9450,
											"end": 9548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9450,
											"end": 9548,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 9450,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9548,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9548,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9577,
											"end": 9581,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9572,
											"end": 9575,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9582,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9172,
											"end": 9592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9159,
											"end": 9160,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9156,
											"end": 9157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9152,
											"end": 9161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9112,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9612,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9601,
											"end": 9612,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 9601,
											"end": 9612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9628,
											"end": 9631,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9621,
											"end": 9631,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9621,
											"end": 9631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 9637,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 9637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 9637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8422,
											"end": 9637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 10168,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 9643,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9862,
											"end": 9866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 9902,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9889,
											"end": 9898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9877,
											"end": 9903,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9877,
											"end": 9903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9943,
											"end": 9947,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9939,
											"end": 9959,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9935,
											"end": 9936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9924,
											"end": 9933,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9920,
											"end": 9937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9913,
											"end": 9960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 10156,
											"end": 10160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10147,
											"end": 10153,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 9977,
											"end": 10161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 10161,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9977,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 10168,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 10168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 10168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 10168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10259,
											"end": 10265,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10318,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10304,
											"end": 10313,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10295,
											"end": 10302,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10291,
											"end": 10314,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10287,
											"end": 10319,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10284,
											"end": 10403,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10284,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 10284,
											"end": 10403,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 10322,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 10322,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10401,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 10322,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10284,
											"end": 10403,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 10284,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10442,
											"end": 10443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 10512,
											"end": 10519,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10492,
											"end": 10501,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10488,
											"end": 10510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 10467,
											"end": 10520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 10467,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10457,
											"end": 10520,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10457,
											"end": 10520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10413,
											"end": 10530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10569,
											"end": 10571,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 10640,
											"end": 10647,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10631,
											"end": 10637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10629,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 10595,
											"end": 10648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 10595,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10585,
											"end": 10648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10585,
											"end": 10648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10540,
											"end": 10658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10699,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10768,
											"end": 10775,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10759,
											"end": 10765,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10757,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10744,
											"end": 10766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10723,
											"end": 10776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10723,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10713,
											"end": 10776,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10713,
											"end": 10776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10668,
											"end": 10786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10923,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 10799,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10876,
											"end": 10882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10904,
											"end": 10916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 10916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 10916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10799,
											"end": 10923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10929,
											"end": 11123,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 10929,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11060,
											"end": 11079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11112,
											"end": 11116,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11107,
											"end": 11110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11103,
											"end": 11117,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11088,
											"end": 11117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11088,
											"end": 11117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10929,
											"end": 11123,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10929,
											"end": 11123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10929,
											"end": 11123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10929,
											"end": 11123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10929,
											"end": 11123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11271,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 11129,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11206,
											"end": 11210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11259,
											"end": 11263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11254,
											"end": 11257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11250,
											"end": 11264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11242,
											"end": 11264,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11242,
											"end": 11264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11271,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11473,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 11277,
											"end": 11473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 11463,
											"end": 11466,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11455,
											"end": 11461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11401,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 11401,
											"end": 11467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11401,
											"end": 11467,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 11401,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11467,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11473,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11473,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11602,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 11479,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11559,
											"end": 11563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11591,
											"end": 11595,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11586,
											"end": 11589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11582,
											"end": 11596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11602,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11602,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11479,
											"end": 11602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 12627,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 11636,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11775,
											"end": 11778,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11804,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 11862,
											"end": 11867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11804,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 11804,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11804,
											"end": 11868,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 11804,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11884,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11884,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 11884,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11884,
											"end": 11980,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 11884,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11980,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11877,
											"end": 11980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12006,
											"end": 12009,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12043,
											"end": 12049,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12034,
											"end": 12037,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12081,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 12141,
											"end": 12146,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12081,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 12081,
											"end": 12147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12081,
											"end": 12147,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 12081,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12170,
											"end": 12177,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12201,
											"end": 12202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12211,
											"end": 12217,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12208,
											"end": 12209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12205,
											"end": 12218,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12282,
											"end": 12291,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12276,
											"end": 12280,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12270,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12333,
											"end": 12339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12327,
											"end": 12340,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12361,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 12440,
											"end": 12444,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12425,
											"end": 12438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12361,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12361,
											"end": 12445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12361,
											"end": 12445,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 12361,
											"end": 12445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12353,
											"end": 12445,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12353,
											"end": 12445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12468,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 12531,
											"end": 12537,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12468,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 12468,
											"end": 12538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12468,
											"end": 12538,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 12468,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12538,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12567,
											"end": 12571,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12562,
											"end": 12565,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 12558,
											"end": 12572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12551,
											"end": 12572,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 12551,
											"end": 12572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12226,
											"end": 12235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 12186,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12190,
											"end": 12204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12598,
											"end": 12602,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12602,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 12591,
											"end": 12602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12618,
											"end": 12621,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12621,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11780,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 12627,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 12627,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 12627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 12627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 13046,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 12633,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12823,
											"end": 12832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12819,
											"end": 12837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 12837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12811,
											"end": 12837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12883,
											"end": 12892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12881,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12893,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12869,
											"end": 12870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12867,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12854,
											"end": 12871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12847,
											"end": 12894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12911,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 13034,
											"end": 13038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13031,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12911,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12911,
											"end": 13039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12911,
											"end": 13039,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 12911,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12903,
											"end": 13039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12903,
											"end": 13039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 13046,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 13046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 13046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 13046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 13046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13170,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 13052,
											"end": 13170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13139,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 13157,
											"end": 13162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13139,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 13139,
											"end": 13163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13139,
											"end": 13163,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 13139,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13127,
											"end": 13164,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13398,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 13176,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13269,
											"end": 13273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13309,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13284,
											"end": 13310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13320,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 13388,
											"end": 13389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13386,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13373,
											"end": 13390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13320,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 13320,
											"end": 13391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13320,
											"end": 13391,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 13320,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13398,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13398,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13404,
											"end": 13521,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 13404,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13513,
											"end": 13514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13510,
											"end": 13511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13503,
											"end": 13515,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13527,
											"end": 13644,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 13527,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13636,
											"end": 13637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13626,
											"end": 13638,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13650,
											"end": 13830,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 13650,
											"end": 13830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13698,
											"end": 13775,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13695,
											"end": 13696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13688,
											"end": 13776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13795,
											"end": 13799,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 13792,
											"end": 13793,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13785,
											"end": 13800,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13819,
											"end": 13823,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13816,
											"end": 13817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13824,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13836,
											"end": 14117,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 13836,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13919,
											"end": 13946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 13941,
											"end": 13945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13919,
											"end": 13946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 13919,
											"end": 13946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13919,
											"end": 13946,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 13919,
											"end": 13946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13907,
											"end": 13947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14049,
											"end": 14055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14056,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14013,
											"end": 14031,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14001,
											"end": 14011,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13998,
											"end": 14032,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13995,
											"end": 14057,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13992,
											"end": 14080,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13992,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13992,
											"end": 14080,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14060,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14060,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 14060,
											"end": 14078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14060,
											"end": 14078,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 14060,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13992,
											"end": 14080,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13992,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14100,
											"end": 14110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14089,
											"end": 14111,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13879,
											"end": 14117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13836,
											"end": 14117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13836,
											"end": 14117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13836,
											"end": 14117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14252,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 14123,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14157,
											"end": 14163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14184,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14184,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 14184,
											"end": 14204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14184,
											"end": 14204,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 14184,
											"end": 14204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14174,
											"end": 14204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14174,
											"end": 14204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14213,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 14241,
											"end": 14245,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14233,
											"end": 14239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14213,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 14213,
											"end": 14246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14213,
											"end": 14246,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 14213,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14252,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14566,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 14258,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14410,
											"end": 14428,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14402,
											"end": 14408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14399,
											"end": 14429,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14396,
											"end": 14452,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14396,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14396,
											"end": 14452,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 14432,
											"end": 14450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 14432,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14396,
											"end": 14452,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14396,
											"end": 14452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14470,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 14492,
											"end": 14498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14470,
											"end": 14499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 14470,
											"end": 14499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14470,
											"end": 14499,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 14470,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14462,
											"end": 14499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14462,
											"end": 14499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14554,
											"end": 14558,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14548,
											"end": 14552,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14544,
											"end": 14559,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14566,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14566,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14718,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 14572,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14669,
											"end": 14675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14664,
											"end": 14667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14659,
											"end": 14662,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14646,
											"end": 14676,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 14710,
											"end": 14711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14701,
											"end": 14707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14696,
											"end": 14699,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 14708,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14685,
											"end": 14712,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14572,
											"end": 14718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 14807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14827,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 14885,
											"end": 14891,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 14843,
											"end": 14892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14827,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 14827,
											"end": 14893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14827,
											"end": 14893,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 14827,
											"end": 14893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14818,
											"end": 14893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14818,
											"end": 14893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14916,
											"end": 14922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14909,
											"end": 14914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14902,
											"end": 14923,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14954,
											"end": 14958,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14947,
											"end": 14952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14943,
											"end": 14959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14992,
											"end": 14995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14983,
											"end": 14989,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14978,
											"end": 14981,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14974,
											"end": 14990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14971,
											"end": 14996,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 15080,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 15080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14968,
											"end": 15080,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14999,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 14999,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 14999,
											"end": 15078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14999,
											"end": 15078,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 14999,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14968,
											"end": 15080,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14968,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15089,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 15136,
											"end": 15142,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15131,
											"end": 15134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15126,
											"end": 15129,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15089,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 15089,
											"end": 15143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15089,
											"end": 15143,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 15089,
											"end": 15143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14808,
											"end": 15149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14724,
											"end": 15149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15509,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 15169,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15274,
											"end": 15277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15271,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15259,
											"end": 15265,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15255,
											"end": 15272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15278,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15241,
											"end": 15363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 15241,
											"end": 15363,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15282,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 15282,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 15282,
											"end": 15361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15282,
											"end": 15361,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 15282,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15241,
											"end": 15363,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 15241,
											"end": 15363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15386,
											"end": 15406,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 15424,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 15499,
											"end": 15502,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15491,
											"end": 15497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15476,
											"end": 15482,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15472,
											"end": 15489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15424,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 15424,
											"end": 15503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15424,
											"end": 15503,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 15424,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15415,
											"end": 15503,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15415,
											"end": 15503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15231,
											"end": 15509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15509,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15509,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15169,
											"end": 15509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 16024,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 15515,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15633,
											"end": 15635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15621,
											"end": 15630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15612,
											"end": 15619,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15608,
											"end": 15631,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15604,
											"end": 15636,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 15601,
											"end": 15720,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15601,
											"end": 15720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 15601,
											"end": 15720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 15639,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15639,
											"end": 15718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15718,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 15639,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15601,
											"end": 15720,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 15601,
											"end": 15720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15787,
											"end": 15788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15772,
											"end": 15789,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15759,
											"end": 15790,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 15817,
											"end": 15835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15809,
											"end": 15815,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15806,
											"end": 15836,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15803,
											"end": 15920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15803,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 15803,
											"end": 15920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 15839,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15803,
											"end": 15920,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 15803,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15944,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15999,
											"end": 16006,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 15996,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15979,
											"end": 15988,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15975,
											"end": 15997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15944,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 15944,
											"end": 16007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15944,
											"end": 16007,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15944,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15934,
											"end": 16007,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15934,
											"end": 16007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15730,
											"end": 16017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 16024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 16024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 16024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 16024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15515,
											"end": 16024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16118,
											"end": 16124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16126,
											"end": 16132,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16175,
											"end": 16177,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16163,
											"end": 16172,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16161,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16150,
											"end": 16173,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16146,
											"end": 16178,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 16143,
											"end": 16262,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16143,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 16143,
											"end": 16262,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 16181,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 16181,
											"end": 16260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16181,
											"end": 16260,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 16181,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16143,
											"end": 16262,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 16143,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16329,
											"end": 16330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16318,
											"end": 16327,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16314,
											"end": 16331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16301,
											"end": 16332,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16359,
											"end": 16377,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16351,
											"end": 16357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16348,
											"end": 16378,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16462,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 16345,
											"end": 16462,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 16381,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 16381,
											"end": 16460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16381,
											"end": 16460,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 16381,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16462,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 16345,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 16541,
											"end": 16548,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16532,
											"end": 16538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16521,
											"end": 16530,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 16486,
											"end": 16549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 16486,
											"end": 16549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16476,
											"end": 16549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16476,
											"end": 16549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16272,
											"end": 16559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16626,
											"end": 16628,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16615,
											"end": 16624,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16611,
											"end": 16629,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16598,
											"end": 16630,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16675,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16649,
											"end": 16655,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16646,
											"end": 16676,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16643,
											"end": 16760,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16643,
											"end": 16760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 16643,
											"end": 16760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 16679,
											"end": 16758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 16679,
											"end": 16758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16679,
											"end": 16758,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 16679,
											"end": 16758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16643,
											"end": 16760,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 16643,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16784,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 16839,
											"end": 16846,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16830,
											"end": 16836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16819,
											"end": 16828,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16815,
											"end": 16837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16784,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 16784,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16784,
											"end": 16847,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 16784,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16774,
											"end": 16847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16774,
											"end": 16847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16569,
											"end": 16857,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16986,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 16870,
											"end": 16986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16940,
											"end": 16961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16955,
											"end": 16960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16940,
											"end": 16961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 16940,
											"end": 16961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16940,
											"end": 16961,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 16940,
											"end": 16961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16933,
											"end": 16938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16930,
											"end": 16962,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16920,
											"end": 16980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16920,
											"end": 16980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16976,
											"end": 16977,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 16978,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16920,
											"end": 16980,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 16920,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 17125,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 16992,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17035,
											"end": 17040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17073,
											"end": 17079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17060,
											"end": 17080,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 17051,
											"end": 17080,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17051,
											"end": 17080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17089,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 17113,
											"end": 17118,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17089,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 17089,
											"end": 17119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17089,
											"end": 17119,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 17089,
											"end": 17119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 17125,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 17125,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 17125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 17125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16992,
											"end": 17125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17196,
											"end": 17202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17204,
											"end": 17210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17253,
											"end": 17255,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17241,
											"end": 17250,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17232,
											"end": 17239,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17228,
											"end": 17251,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17256,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17221,
											"end": 17340,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17221,
											"end": 17340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 17221,
											"end": 17340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17259,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 17259,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 17259,
											"end": 17338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17259,
											"end": 17338,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 17259,
											"end": 17338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17221,
											"end": 17340,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 17221,
											"end": 17340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17379,
											"end": 17380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17404,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 17449,
											"end": 17456,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17440,
											"end": 17446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17429,
											"end": 17438,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17425,
											"end": 17447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17404,
											"end": 17457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 17404,
											"end": 17457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17404,
											"end": 17457,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 17404,
											"end": 17457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17394,
											"end": 17457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17394,
											"end": 17457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17350,
											"end": 17467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17508,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17532,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 17574,
											"end": 17581,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17565,
											"end": 17571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17554,
											"end": 17563,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17550,
											"end": 17572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17532,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 17532,
											"end": 17582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17532,
											"end": 17582,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 17532,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17522,
											"end": 17582,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17522,
											"end": 17582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17477,
											"end": 17592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17131,
											"end": 17599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17912,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 17605,
											"end": 17912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 17670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17756,
											"end": 17774,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17748,
											"end": 17754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17745,
											"end": 17775,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 17798,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 17798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 17742,
											"end": 17798,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17778,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 17778,
											"end": 17796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 17778,
											"end": 17796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17778,
											"end": 17796,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 17778,
											"end": 17796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17742,
											"end": 17798,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 17742,
											"end": 17798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17816,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17838,
											"end": 17844,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17816,
											"end": 17845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 17816,
											"end": 17845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17816,
											"end": 17845,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 17816,
											"end": 17845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17808,
											"end": 17845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17808,
											"end": 17845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17900,
											"end": 17904,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17894,
											"end": 17898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17890,
											"end": 17905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17882,
											"end": 17905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17882,
											"end": 17905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17605,
											"end": 17912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17995,
											"end": 18000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18020,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 18036,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 18077,
											"end": 18083,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18036,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 18036,
											"end": 18084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18036,
											"end": 18084,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 18036,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18020,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 18020,
											"end": 18085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18020,
											"end": 18085,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 18020,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18011,
											"end": 18085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18011,
											"end": 18085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18101,
											"end": 18106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18115,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18146,
											"end": 18150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18139,
											"end": 18144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18135,
											"end": 18151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18184,
											"end": 18187,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18175,
											"end": 18181,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18170,
											"end": 18173,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18166,
											"end": 18182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18163,
											"end": 18188,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18272,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 18160,
											"end": 18272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 18191,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 18191,
											"end": 18270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18191,
											"end": 18270,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 18191,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18272,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 18160,
											"end": 18272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18281,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 18328,
											"end": 18334,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18323,
											"end": 18326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18318,
											"end": 18321,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18281,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 18281,
											"end": 18335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18281,
											"end": 18335,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 18281,
											"end": 18335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17918,
											"end": 18341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18360,
											"end": 18698,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 18360,
											"end": 18698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18415,
											"end": 18420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18464,
											"end": 18467,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18457,
											"end": 18461,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18449,
											"end": 18455,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18445,
											"end": 18462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18441,
											"end": 18468,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 18431,
											"end": 18553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18472,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 18472,
											"end": 18551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 18472,
											"end": 18551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18472,
											"end": 18551,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 18472,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18431,
											"end": 18553,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 18431,
											"end": 18553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18589,
											"end": 18595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18576,
											"end": 18596,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 18614,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 18688,
											"end": 18691,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18680,
											"end": 18686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18677,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18614,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 18614,
											"end": 18692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18614,
											"end": 18692,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 18614,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18605,
											"end": 18692,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18605,
											"end": 18692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18421,
											"end": 18698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18360,
											"end": 18698,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18360,
											"end": 18698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18360,
											"end": 18698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18360,
											"end": 18698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18360,
											"end": 18698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18799,
											"end": 18805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18807,
											"end": 18813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18815,
											"end": 18821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18823,
											"end": 18829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18872,
											"end": 18875,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18860,
											"end": 18869,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18851,
											"end": 18858,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 18847,
											"end": 18870,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18843,
											"end": 18876,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 18840,
											"end": 18960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18840,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 18840,
											"end": 18960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18879,
											"end": 18958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 18879,
											"end": 18958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 18879,
											"end": 18958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18879,
											"end": 18958,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 18879,
											"end": 18958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18840,
											"end": 18960,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 18840,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18999,
											"end": 19000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19024,
											"end": 19077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 19069,
											"end": 19076,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19060,
											"end": 19066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19049,
											"end": 19058,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19045,
											"end": 19067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19024,
											"end": 19077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 19024,
											"end": 19077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19024,
											"end": 19077,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 19024,
											"end": 19077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19014,
											"end": 19077,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19014,
											"end": 19077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18970,
											"end": 19087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19126,
											"end": 19128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19152,
											"end": 19205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 19197,
											"end": 19204,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19188,
											"end": 19194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19177,
											"end": 19186,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19173,
											"end": 19195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19152,
											"end": 19205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 19152,
											"end": 19205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19152,
											"end": 19205,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 19152,
											"end": 19205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19142,
											"end": 19205,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19142,
											"end": 19205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19097,
											"end": 19215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19254,
											"end": 19256,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19280,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 19325,
											"end": 19332,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19316,
											"end": 19322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19305,
											"end": 19314,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19301,
											"end": 19323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19280,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 19280,
											"end": 19333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19280,
											"end": 19333,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 19280,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19270,
											"end": 19333,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19270,
											"end": 19333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19225,
											"end": 19343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 19412,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 19399,
											"end": 19408,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19395,
											"end": 19413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19382,
											"end": 19414,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 19441,
											"end": 19459,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19433,
											"end": 19439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19430,
											"end": 19460,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19427,
											"end": 19544,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19427,
											"end": 19544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 19427,
											"end": 19544,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19463,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 19463,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 19463,
											"end": 19542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19463,
											"end": 19542,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 19463,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19427,
											"end": 19544,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 19427,
											"end": 19544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19568,
											"end": 19630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 19622,
											"end": 19629,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19613,
											"end": 19619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19602,
											"end": 19611,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19598,
											"end": 19620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19568,
											"end": 19630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 19568,
											"end": 19630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19568,
											"end": 19630,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 19568,
											"end": 19630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19630,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19353,
											"end": 19640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18704,
											"end": 19647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19721,
											"end": 19727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19729,
											"end": 19735,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19778,
											"end": 19780,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19766,
											"end": 19775,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19757,
											"end": 19764,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19753,
											"end": 19776,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19749,
											"end": 19781,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19746,
											"end": 19865,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19746,
											"end": 19865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 19746,
											"end": 19865,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19784,
											"end": 19863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 19784,
											"end": 19863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 19784,
											"end": 19863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19784,
											"end": 19863,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 19784,
											"end": 19863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19746,
											"end": 19865,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 19746,
											"end": 19865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19904,
											"end": 19905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19929,
											"end": 19982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 19974,
											"end": 19981,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19965,
											"end": 19971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19954,
											"end": 19963,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19950,
											"end": 19972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19929,
											"end": 19982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 19929,
											"end": 19982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19929,
											"end": 19982,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 19929,
											"end": 19982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 19982,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19919,
											"end": 19982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19875,
											"end": 19992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20031,
											"end": 20033,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20057,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 20102,
											"end": 20109,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20093,
											"end": 20099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20082,
											"end": 20091,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20078,
											"end": 20100,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20057,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 20057,
											"end": 20110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20057,
											"end": 20110,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 20057,
											"end": 20110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20047,
											"end": 20110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20047,
											"end": 20110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20002,
											"end": 20120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 20127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20133,
											"end": 20313,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 20133,
											"end": 20313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20181,
											"end": 20258,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20178,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20171,
											"end": 20259,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20278,
											"end": 20282,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 20275,
											"end": 20276,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20268,
											"end": 20283,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20302,
											"end": 20306,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20299,
											"end": 20300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20292,
											"end": 20307,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 20319,
											"end": 20639,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 20319,
											"end": 20639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20363,
											"end": 20369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20400,
											"end": 20401,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 20394,
											"end": 20398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20390,
											"end": 20402,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 20380,
											"end": 20402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20380,
											"end": 20402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20447,
											"end": 20448,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 20441,
											"end": 20445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20437,
											"end": 20449,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 20468,
											"end": 20486,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20458,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 20458,
											"end": 20539,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20524,
											"end": 20528,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 20516,
											"end": 20522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20512,
											"end": 20529,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 20502,
											"end": 20529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20502,
											"end": 20529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20458,
											"end": 20539,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 20458,
											"end": 20539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20586,
											"end": 20588,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20578,
											"end": 20584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20575,
											"end": 20589,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20555,
											"end": 20573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20552,
											"end": 20590,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20549,
											"end": 20633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 20549,
											"end": 20633,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 20605,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 20605,
											"end": 20623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20623,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 20605,
											"end": 20623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20549,
											"end": 20633,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 20549,
											"end": 20633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20319,
											"end": 20639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20319,
											"end": 20639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20319,
											"end": 20639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20319,
											"end": 20639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20645,
											"end": 20825,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 20645,
											"end": 20825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20693,
											"end": 20770,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20690,
											"end": 20691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20683,
											"end": 20771,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20790,
											"end": 20794,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 20787,
											"end": 20788,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20780,
											"end": 20795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20814,
											"end": 20818,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20811,
											"end": 20812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20804,
											"end": 20819,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 20831,
											"end": 21011,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 20831,
											"end": 21011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20879,
											"end": 20956,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20876,
											"end": 20877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20869,
											"end": 20957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20976,
											"end": 20980,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 20973,
											"end": 20974,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20966,
											"end": 20981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21000,
											"end": 21004,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20997,
											"end": 20998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20990,
											"end": 21005,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21017,
											"end": 21250,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 21017,
											"end": 21250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21056,
											"end": 21059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21079,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 21097,
											"end": 21102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21079,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 21079,
											"end": 21103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21079,
											"end": 21103,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 21079,
											"end": 21103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21070,
											"end": 21103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21070,
											"end": 21103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21125,
											"end": 21191,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21118,
											"end": 21123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21115,
											"end": 21192,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 21112,
											"end": 21215,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21195,
											"end": 21213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 21195,
											"end": 21213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 21195,
											"end": 21213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21195,
											"end": 21213,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 21195,
											"end": 21213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21215,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 21112,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21242,
											"end": 21243,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 21235,
											"end": 21240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21231,
											"end": 21244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21224,
											"end": 21244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21224,
											"end": 21244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21017,
											"end": 21250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21017,
											"end": 21250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21017,
											"end": 21250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21017,
											"end": 21250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21405,
											"end": 21409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21443,
											"end": 21445,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21432,
											"end": 21441,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21428,
											"end": 21446,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21420,
											"end": 21446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21420,
											"end": 21446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 21524,
											"end": 21525,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21522,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21509,
											"end": 21526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 21456,
											"end": 21527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 21605,
											"end": 21607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21594,
											"end": 21603,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21590,
											"end": 21608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21581,
											"end": 21587,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 21537,
											"end": 21609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 21687,
											"end": 21689,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21676,
											"end": 21685,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21672,
											"end": 21690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21663,
											"end": 21669,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 21619,
											"end": 21691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21619,
											"end": 21691,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 21619,
											"end": 21691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21256,
											"end": 21698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21852,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 21704,
											"end": 21852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21806,
											"end": 21817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21843,
											"end": 21846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21828,
											"end": 21846,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21828,
											"end": 21846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21852,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21704,
											"end": 21852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21858,
											"end": 22248,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 21858,
											"end": 22248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21964,
											"end": 21967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21992,
											"end": 22031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 22025,
											"end": 22030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21992,
											"end": 22031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 21992,
											"end": 22031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21992,
											"end": 22031,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 21992,
											"end": 22031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22047,
											"end": 22136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 22129,
											"end": 22135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22124,
											"end": 22127,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22047,
											"end": 22136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 22047,
											"end": 22136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22047,
											"end": 22136,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 22047,
											"end": 22136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22040,
											"end": 22136,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22040,
											"end": 22136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22145,
											"end": 22210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 22203,
											"end": 22209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22198,
											"end": 22201,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22191,
											"end": 22195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22184,
											"end": 22189,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22180,
											"end": 22196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22145,
											"end": 22210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 22145,
											"end": 22210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22145,
											"end": 22210,
											"name": "tag",
											"source": 12,
											"value": "617"
										},
										{
											"begin": 22145,
											"end": 22210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22235,
											"end": 22241,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22230,
											"end": 22233,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22226,
											"end": 22242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22219,
											"end": 22242,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22219,
											"end": 22242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21968,
											"end": 22248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21858,
											"end": 22248,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21858,
											"end": 22248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21858,
											"end": 22248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21858,
											"end": 22248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21858,
											"end": 22248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22529,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 22254,
											"end": 22529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22386,
											"end": 22389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22408,
											"end": 22503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 22499,
											"end": 22502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22490,
											"end": 22496,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22408,
											"end": 22503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 22408,
											"end": 22503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22408,
											"end": 22503,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 22408,
											"end": 22503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22401,
											"end": 22503,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22401,
											"end": 22503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22520,
											"end": 22523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22513,
											"end": 22523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22513,
											"end": 22523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22529,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22254,
											"end": 22529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22535,
											"end": 22715,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 22535,
											"end": 22715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22583,
											"end": 22660,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22580,
											"end": 22581,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22573,
											"end": 22661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22680,
											"end": 22684,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 22677,
											"end": 22678,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 22670,
											"end": 22685,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22704,
											"end": 22708,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 22701,
											"end": 22702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22694,
											"end": 22709,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22721,
											"end": 22897,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 22721,
											"end": 22897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22753,
											"end": 22754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 22788,
											"end": 22789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 22770,
											"end": 22790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22765,
											"end": 22790,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22765,
											"end": 22790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 22822,
											"end": 22823,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 22804,
											"end": 22824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22804,
											"end": 22824,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 22804,
											"end": 22824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22799,
											"end": 22824,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22799,
											"end": 22824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22843,
											"end": 22844,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22833,
											"end": 22868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 22833,
											"end": 22868,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22848,
											"end": 22866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 22848,
											"end": 22866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 22848,
											"end": 22866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22848,
											"end": 22866,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 22848,
											"end": 22866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22833,
											"end": 22868,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 22833,
											"end": 22868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22889,
											"end": 22890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22886,
											"end": 22887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22882,
											"end": 22891,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 22877,
											"end": 22891,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22877,
											"end": 22891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22721,
											"end": 22897,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22721,
											"end": 22897,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22721,
											"end": 22897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22721,
											"end": 22897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22721,
											"end": 22897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 23094,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 22903,
											"end": 23094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 22946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22962,
											"end": 22982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 22980,
											"end": 22981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22962,
											"end": 22982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 22962,
											"end": 22982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22962,
											"end": 22982,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 22962,
											"end": 22982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22957,
											"end": 22982,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22957,
											"end": 22982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22996,
											"end": 23016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 23014,
											"end": 23015,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22996,
											"end": 23016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 22996,
											"end": 23016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22996,
											"end": 23016,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 22996,
											"end": 23016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22991,
											"end": 23016,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22991,
											"end": 23016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23039,
											"end": 23040,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23036,
											"end": 23037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23032,
											"end": 23041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23060,
											"end": 23063,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23057,
											"end": 23058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23054,
											"end": 23064,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 23051,
											"end": 23087,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23051,
											"end": 23087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 23051,
											"end": 23087,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23067,
											"end": 23085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 23067,
											"end": 23085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 23067,
											"end": 23085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23067,
											"end": 23085,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 23067,
											"end": 23085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23051,
											"end": 23087,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 23051,
											"end": 23087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 23094,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 23094,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 23094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 23094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22903,
											"end": 23094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23100,
											"end": 23241,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 23100,
											"end": 23241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23149,
											"end": 23153,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23172,
											"end": 23175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23164,
											"end": 23175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23164,
											"end": 23175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23195,
											"end": 23198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23192,
											"end": 23193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23185,
											"end": 23199,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23229,
											"end": 23233,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23226,
											"end": 23227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23216,
											"end": 23234,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 23208,
											"end": 23234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23208,
											"end": 23234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23100,
											"end": 23241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23100,
											"end": 23241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23100,
											"end": 23241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23100,
											"end": 23241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23340,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 23247,
											"end": 23340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23284,
											"end": 23290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23331,
											"end": 23333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23326,
											"end": 23328,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 23319,
											"end": 23324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23315,
											"end": 23329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23311,
											"end": 23334,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 23301,
											"end": 23334,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23301,
											"end": 23334,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23340,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23346,
											"end": 23453,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 23346,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23390,
											"end": 23398,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23440,
											"end": 23445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23434,
											"end": 23438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23430,
											"end": 23446,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 23409,
											"end": 23446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23409,
											"end": 23446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23346,
											"end": 23453,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23346,
											"end": 23453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23346,
											"end": 23453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23346,
											"end": 23453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23346,
											"end": 23453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23528,
											"end": 23534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23578,
											"end": 23579,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 23566,
											"end": 23576,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23562,
											"end": 23580,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 23601,
											"end": 23698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 23631,
											"end": 23697,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23620,
											"end": 23629,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23601,
											"end": 23698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 23601,
											"end": 23698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23601,
											"end": 23698,
											"name": "tag",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 23601,
											"end": 23698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23719,
											"end": 23758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 23749,
											"end": 23757,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23738,
											"end": 23747,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23719,
											"end": 23758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 23719,
											"end": 23758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23719,
											"end": 23758,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 23719,
											"end": 23758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23707,
											"end": 23758,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 23707,
											"end": 23758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23791,
											"end": 23795,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23787,
											"end": 23796,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 23780,
											"end": 23785,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23776,
											"end": 23797,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 23767,
											"end": 23797,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23767,
											"end": 23797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23840,
											"end": 23844,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23830,
											"end": 23838,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23826,
											"end": 23845,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 23819,
											"end": 23824,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23816,
											"end": 23846,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 23806,
											"end": 23846,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23806,
											"end": 23846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23535,
											"end": 23852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23535,
											"end": 23852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23918,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 23858,
											"end": 23918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23886,
											"end": 23889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23907,
											"end": 23912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23900,
											"end": 23912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23900,
											"end": 23912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23858,
											"end": 23918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 24066,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 23924,
											"end": 24066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23974,
											"end": 23983,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24007,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 24025,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 24034,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 24052,
											"end": 24057,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24034,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 24034,
											"end": 24058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24034,
											"end": 24058,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 24034,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24025,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 24025,
											"end": 24059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24025,
											"end": 24059,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 24025,
											"end": 24059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24007,
											"end": 24060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 24007,
											"end": 24060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24007,
											"end": 24060,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 24007,
											"end": 24060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23994,
											"end": 24060,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23994,
											"end": 24060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 24066,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 24066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 24066,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 24066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24072,
											"end": 24147,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 24072,
											"end": 24147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24115,
											"end": 24118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24136,
											"end": 24141,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24129,
											"end": 24141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24129,
											"end": 24141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24072,
											"end": 24147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24072,
											"end": 24147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24072,
											"end": 24147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24072,
											"end": 24147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24422,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 24153,
											"end": 24422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24263,
											"end": 24302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 24294,
											"end": 24301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24263,
											"end": 24302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 24263,
											"end": 24302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24263,
											"end": 24302,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 24263,
											"end": 24302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24324,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 24373,
											"end": 24414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 24397,
											"end": 24413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24373,
											"end": 24414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 24373,
											"end": 24414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24373,
											"end": 24414,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 24373,
											"end": 24414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24365,
											"end": 24371,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24358,
											"end": 24362,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24352,
											"end": 24363,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 24324,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 24324,
											"end": 24415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24324,
											"end": 24415,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 24324,
											"end": 24415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24318,
											"end": 24322,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24311,
											"end": 24416,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 24229,
											"end": 24422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24428,
											"end": 24501,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 24428,
											"end": 24501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24473,
											"end": 24476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24428,
											"end": 24501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24428,
											"end": 24501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24507,
											"end": 24696,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 24507,
											"end": 24696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24584,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 24584,
											"end": 24616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 24584,
											"end": 24616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24584,
											"end": 24616,
											"name": "tag",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 24584,
											"end": 24616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24625,
											"end": 24690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 24683,
											"end": 24689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 24681,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24669,
											"end": 24673,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24625,
											"end": 24690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 24625,
											"end": 24690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24625,
											"end": 24690,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 24625,
											"end": 24690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24560,
											"end": 24696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24507,
											"end": 24696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24507,
											"end": 24696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24507,
											"end": 24696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24702,
											"end": 24888,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 24702,
											"end": 24888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24779,
											"end": 24782,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24772,
											"end": 24777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24769,
											"end": 24783,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24833,
											"end": 24872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 24870,
											"end": 24871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24863,
											"end": 24868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24833,
											"end": 24872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 24833,
											"end": 24872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24833,
											"end": 24872,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 24833,
											"end": 24872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24806,
											"end": 24807,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 24799,
											"end": 24804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24795,
											"end": 24808,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24786,
											"end": 24808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24786,
											"end": 24808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 24762,
											"end": 24882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24702,
											"end": 24888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24702,
											"end": 24888,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24702,
											"end": 24888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24894,
											"end": 25437,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 24894,
											"end": 25437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24995,
											"end": 24997,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 24990,
											"end": 24993,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24987,
											"end": 24998,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25430,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 24984,
											"end": 25430,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 25061,
											"end": 25066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 25029,
											"end": 25067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25029,
											"end": 25067,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 25029,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25113,
											"end": 25142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 25131,
											"end": 25141,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25113,
											"end": 25142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 25113,
											"end": 25142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25113,
											"end": 25142,
											"name": "tag",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 25113,
											"end": 25142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25103,
											"end": 25111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25099,
											"end": 25143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25296,
											"end": 25298,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25284,
											"end": 25294,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25281,
											"end": 25299,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 25278,
											"end": 25327,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 25278,
											"end": 25327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 25278,
											"end": 25327,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25317,
											"end": 25325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25302,
											"end": 25325,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25302,
											"end": 25325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25278,
											"end": 25327,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 25278,
											"end": 25327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25340,
											"end": 25420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 25396,
											"end": 25418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 25414,
											"end": 25417,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25396,
											"end": 25418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 25396,
											"end": 25418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25396,
											"end": 25418,
											"name": "tag",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 25396,
											"end": 25418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25386,
											"end": 25394,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25382,
											"end": 25419,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25369,
											"end": 25380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25340,
											"end": 25420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 25340,
											"end": 25420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25340,
											"end": 25420,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 25340,
											"end": 25420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24999,
											"end": 25430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24999,
											"end": 25430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24984,
											"end": 25430,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 24984,
											"end": 25430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24894,
											"end": 25437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24894,
											"end": 25437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24894,
											"end": 25437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24894,
											"end": 25437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25560,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 25443,
											"end": 25560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25497,
											"end": 25505,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25547,
											"end": 25552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25541,
											"end": 25545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25537,
											"end": 25553,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 25516,
											"end": 25553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25516,
											"end": 25553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25560,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25560,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25566,
											"end": 25735,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 25566,
											"end": 25735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25610,
											"end": 25616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25643,
											"end": 25694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 25691,
											"end": 25692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25687,
											"end": 25693,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 25679,
											"end": 25684,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25676,
											"end": 25677,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 25672,
											"end": 25685,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 25643,
											"end": 25694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 25643,
											"end": 25694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25643,
											"end": 25694,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 25643,
											"end": 25694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25639,
											"end": 25695,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 25724,
											"end": 25728,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 25718,
											"end": 25722,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25714,
											"end": 25729,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 25704,
											"end": 25729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25704,
											"end": 25729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25617,
											"end": 25735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25566,
											"end": 25735,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25566,
											"end": 25735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25566,
											"end": 25735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25566,
											"end": 25735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25566,
											"end": 25735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25740,
											"end": 26035,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 25740,
											"end": 26035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25816,
											"end": 25820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25962,
											"end": 25991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 25987,
											"end": 25990,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25981,
											"end": 25985,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25962,
											"end": 25991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 25962,
											"end": 25991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25962,
											"end": 25991,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 25962,
											"end": 25991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25954,
											"end": 25991,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25954,
											"end": 25991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26024,
											"end": 26027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26021,
											"end": 26022,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 26017,
											"end": 26028,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 26011,
											"end": 26015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26008,
											"end": 26029,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 26000,
											"end": 26029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26000,
											"end": 26029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25740,
											"end": 26035,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25740,
											"end": 26035,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25740,
											"end": 26035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25740,
											"end": 26035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25740,
											"end": 26035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26040,
											"end": 27435,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 26040,
											"end": 27435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26157,
											"end": 26194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 26190,
											"end": 26193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26157,
											"end": 26194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 26157,
											"end": 26194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26157,
											"end": 26194,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 26157,
											"end": 26194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26259,
											"end": 26277,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26251,
											"end": 26257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26248,
											"end": 26278,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 26245,
											"end": 26301,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26245,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 26245,
											"end": 26301,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26281,
											"end": 26299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 26281,
											"end": 26299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 26281,
											"end": 26299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26281,
											"end": 26299,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 26281,
											"end": 26299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26245,
											"end": 26301,
											"name": "tag",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 26245,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26325,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 26357,
											"end": 26361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26351,
											"end": 26362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 26325,
											"end": 26363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 26325,
											"end": 26363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26325,
											"end": 26363,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 26325,
											"end": 26363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26410,
											"end": 26477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 26470,
											"end": 26476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26462,
											"end": 26468,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26456,
											"end": 26460,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26410,
											"end": 26477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 26410,
											"end": 26477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26410,
											"end": 26477,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 26410,
											"end": 26477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26504,
											"end": 26505,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26528,
											"end": 26532,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26515,
											"end": 26532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26515,
											"end": 26532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26560,
											"end": 26562,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 26552,
											"end": 26558,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26549,
											"end": 26563,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 26577,
											"end": 26578,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 26572,
											"end": 27190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26572,
											"end": 27190,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 26572,
											"end": 27190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 26572,
											"end": 27190,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27234,
											"end": 27235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27251,
											"end": 27257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27248,
											"end": 27325,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 27248,
											"end": 27325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 27248,
											"end": 27325,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27300,
											"end": 27309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27295,
											"end": 27298,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 27291,
											"end": 27310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27285,
											"end": 27311,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27276,
											"end": 27311,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27276,
											"end": 27311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27248,
											"end": 27325,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 27248,
											"end": 27325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27351,
											"end": 27418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 27411,
											"end": 27417,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27404,
											"end": 27409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27351,
											"end": 27418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 27351,
											"end": 27418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27351,
											"end": 27418,
											"name": "tag",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 27351,
											"end": 27418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27345,
											"end": 27349,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 27338,
											"end": 27419,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 27207,
											"end": 27429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26542,
											"end": 27429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 26542,
											"end": 27429,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26572,
											"end": 27190,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 26572,
											"end": 27190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26624,
											"end": 26628,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 26620,
											"end": 26629,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 26612,
											"end": 26618,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26608,
											"end": 26630,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 26658,
											"end": 26695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 26690,
											"end": 26694,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26658,
											"end": 26695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 26658,
											"end": 26695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26658,
											"end": 26695,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 26658,
											"end": 26695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26717,
											"end": 26718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26745,
											"end": 26752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26742,
											"end": 26743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26739,
											"end": 26753,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 26824,
											"end": 26833,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26819,
											"end": 26822,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 26815,
											"end": 26834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26809,
											"end": 26835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26801,
											"end": 26807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26794,
											"end": 26836,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 26875,
											"end": 26876,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 26867,
											"end": 26873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26863,
											"end": 26877,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26853,
											"end": 26877,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26853,
											"end": 26877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26922,
											"end": 26924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26911,
											"end": 26920,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26907,
											"end": 26925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26894,
											"end": 26925,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 26894,
											"end": 26925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26768,
											"end": 26772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26765,
											"end": 26766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26761,
											"end": 26773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26756,
											"end": 26773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26756,
											"end": 26773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 26731,
											"end": 26939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26967,
											"end": 26973,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26958,
											"end": 26965,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26955,
											"end": 26974,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 26952,
											"end": 27131,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 26952,
											"end": 27131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 26952,
											"end": 27131,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27025,
											"end": 27034,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27020,
											"end": 27023,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 27016,
											"end": 27035,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27010,
											"end": 27036,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27068,
											"end": 27116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 27110,
											"end": 27114,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 27102,
											"end": 27108,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 27098,
											"end": 27115,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 27087,
											"end": 27096,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27068,
											"end": 27116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 27068,
											"end": 27116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27068,
											"end": 27116,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 27068,
											"end": 27116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27060,
											"end": 27066,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27053,
											"end": 27117,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 26975,
											"end": 27131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26952,
											"end": 27131,
											"name": "tag",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 26952,
											"end": 27131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27177,
											"end": 27178,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 27173,
											"end": 27174,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 27165,
											"end": 27171,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 27161,
											"end": 27175,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 27157,
											"end": 27179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27151,
											"end": 27155,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 27144,
											"end": 27180,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 26579,
											"end": 27190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26579,
											"end": 27190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26579,
											"end": 27190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26542,
											"end": 27429,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 26542,
											"end": 27429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26542,
											"end": 27429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26132,
											"end": 27435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26132,
											"end": 27435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26132,
											"end": 27435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26040,
											"end": 27435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26040,
											"end": 27435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26040,
											"end": 27435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27441,
											"end": 27635,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 27441,
											"end": 27635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27481,
											"end": 27485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27501,
											"end": 27521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 27519,
											"end": 27520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27501,
											"end": 27521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 27501,
											"end": 27521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27501,
											"end": 27521,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 27501,
											"end": 27521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27496,
											"end": 27521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27496,
											"end": 27521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27535,
											"end": 27555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 27553,
											"end": 27554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27535,
											"end": 27555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 27535,
											"end": 27555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27535,
											"end": 27555,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 27535,
											"end": 27555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27530,
											"end": 27555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27530,
											"end": 27555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27579,
											"end": 27580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27576,
											"end": 27577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27572,
											"end": 27581,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27564,
											"end": 27581,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27564,
											"end": 27581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27603,
											"end": 27604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27597,
											"end": 27601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27594,
											"end": 27605,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 27591,
											"end": 27628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 27591,
											"end": 27628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 27591,
											"end": 27628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 27626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 27608,
											"end": 27626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 27608,
											"end": 27626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27608,
											"end": 27626,
											"name": "tag",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 27608,
											"end": 27626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27591,
											"end": 27628,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 27591,
											"end": 27628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27441,
											"end": 27635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27441,
											"end": 27635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27441,
											"end": 27635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27441,
											"end": 27635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27441,
											"end": 27635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27641,
											"end": 27739,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 27641,
											"end": 27739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27692,
											"end": 27698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27726,
											"end": 27731,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27720,
											"end": 27732,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27710,
											"end": 27732,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27710,
											"end": 27732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27641,
											"end": 27739,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27641,
											"end": 27739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27641,
											"end": 27739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27641,
											"end": 27739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27745,
											"end": 27913,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 27745,
											"end": 27913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27828,
											"end": 27839,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27862,
											"end": 27868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27857,
											"end": 27860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27850,
											"end": 27869,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27902,
											"end": 27906,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27897,
											"end": 27900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27893,
											"end": 27907,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27878,
											"end": 27907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27878,
											"end": 27907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27745,
											"end": 27913,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27745,
											"end": 27913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27745,
											"end": 27913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27745,
											"end": 27913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27745,
											"end": 27913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27919,
											"end": 28292,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 27919,
											"end": 28292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28005,
											"end": 28008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28033,
											"end": 28071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 28065,
											"end": 28070,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28033,
											"end": 28071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 28033,
											"end": 28071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28033,
											"end": 28071,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 28033,
											"end": 28071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28087,
											"end": 28157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 28150,
											"end": 28156,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28145,
											"end": 28148,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28087,
											"end": 28157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 28087,
											"end": 28157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28087,
											"end": 28157,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 28087,
											"end": 28157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28080,
											"end": 28157,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 28080,
											"end": 28157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28166,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 28224,
											"end": 28230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28219,
											"end": 28222,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28212,
											"end": 28216,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28205,
											"end": 28210,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 28201,
											"end": 28217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28166,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 28166,
											"end": 28231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28166,
											"end": 28231,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 28166,
											"end": 28231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28256,
											"end": 28285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 28278,
											"end": 28284,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28256,
											"end": 28285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 28256,
											"end": 28285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28256,
											"end": 28285,
											"name": "tag",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 28256,
											"end": 28285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28251,
											"end": 28254,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28247,
											"end": 28286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28240,
											"end": 28286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28240,
											"end": 28286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28009,
											"end": 28292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27919,
											"end": 28292,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27919,
											"end": 28292,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27919,
											"end": 28292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27919,
											"end": 28292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27919,
											"end": 28292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28493,
											"end": 28497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28531,
											"end": 28534,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 28520,
											"end": 28529,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28516,
											"end": 28535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28508,
											"end": 28535,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28508,
											"end": 28535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28545,
											"end": 28616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 28613,
											"end": 28614,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28602,
											"end": 28611,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28598,
											"end": 28615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28589,
											"end": 28595,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 28545,
											"end": 28616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 28545,
											"end": 28616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28545,
											"end": 28616,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 28545,
											"end": 28616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28626,
											"end": 28698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 28694,
											"end": 28696,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28683,
											"end": 28692,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28679,
											"end": 28697,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28670,
											"end": 28676,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 28626,
											"end": 28698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 28626,
											"end": 28698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28626,
											"end": 28698,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 28626,
											"end": 28698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28708,
											"end": 28780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 28776,
											"end": 28778,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28765,
											"end": 28774,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28761,
											"end": 28779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28752,
											"end": 28758,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28708,
											"end": 28780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 28708,
											"end": 28780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28708,
											"end": 28780,
											"name": "tag",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 28708,
											"end": 28780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28827,
											"end": 28836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28821,
											"end": 28825,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28817,
											"end": 28837,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28812,
											"end": 28814,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 28801,
											"end": 28810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28797,
											"end": 28815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28790,
											"end": 28838,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28855,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 28926,
											"end": 28930,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28917,
											"end": 28923,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28855,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 28855,
											"end": 28931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28855,
											"end": 28931,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 28855,
											"end": 28931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28847,
											"end": 28931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28847,
											"end": 28931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28298,
											"end": 28938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28944,
											"end": 29085,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 28944,
											"end": 29085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29000,
											"end": 29005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29031,
											"end": 29037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29025,
											"end": 29038,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 29016,
											"end": 29038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29016,
											"end": 29038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29047,
											"end": 29079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 29073,
											"end": 29078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29047,
											"end": 29079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 29047,
											"end": 29079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29047,
											"end": 29079,
											"name": "tag",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 29047,
											"end": 29079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28944,
											"end": 29085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 28944,
											"end": 29085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28944,
											"end": 29085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28944,
											"end": 29085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28944,
											"end": 29085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29440,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 29091,
											"end": 29440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29160,
											"end": 29166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29209,
											"end": 29211,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29197,
											"end": 29206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29188,
											"end": 29195,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 29184,
											"end": 29207,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29180,
											"end": 29212,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 29177,
											"end": 29296,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 29177,
											"end": 29296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 29177,
											"end": 29296,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 29215,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 29215,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 29215,
											"end": 29294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29215,
											"end": 29294,
											"name": "tag",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 29215,
											"end": 29294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29177,
											"end": 29296,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 29177,
											"end": 29296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29335,
											"end": 29336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29360,
											"end": 29423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 29415,
											"end": 29422,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 29406,
											"end": 29412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29395,
											"end": 29404,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 29391,
											"end": 29413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29360,
											"end": 29423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 29360,
											"end": 29423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29360,
											"end": 29423,
											"name": "tag",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 29360,
											"end": 29423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29350,
											"end": 29423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29350,
											"end": 29423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29306,
											"end": 29433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29091,
											"end": 29440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29567,
											"end": 29571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29605,
											"end": 29607,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 29594,
											"end": 29603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29590,
											"end": 29608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29582,
											"end": 29608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29582,
											"end": 29608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29618,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "708"
										},
										{
											"begin": 29686,
											"end": 29687,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29675,
											"end": 29684,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29671,
											"end": 29688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29662,
											"end": 29668,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 29618,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 29618,
											"end": 29689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29618,
											"end": 29689,
											"name": "tag",
											"source": 12,
											"value": "708"
										},
										{
											"begin": 29618,
											"end": 29689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29699,
											"end": 29771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 29767,
											"end": 29769,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29756,
											"end": 29765,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29752,
											"end": 29770,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29743,
											"end": 29749,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 29699,
											"end": 29771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 29699,
											"end": 29771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29699,
											"end": 29771,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 29699,
											"end": 29771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29446,
											"end": 29778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getOwnerTokenMetaData(address)": "0a48a1ac",
							"getOwnerURIs(address)": "5f0cac76",
							"getTokenRanking(uint256)": "d15a76d2",
							"getTokenURI(uint256)": "3bb3a24d",
							"isApprovedForAll(address,address)": "e985e9c5",
							"makeRandom(string)": "838e4537",
							"minting(string,string)": "8a55a50e",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerTokenMetaData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"internalType\":\"struct MyNFT.TokenMetaData\",\"name\":\"metaData\",\"type\":\"tuple\"}],\"internalType\":\"struct MyNFT.TokenIdMetaDataWrapper[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerURIs\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"seed\",\"type\":\"string\"}],\"name\":\"makeRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"seed\",\"type\":\"string\"}],\"name\":\"minting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"myNFT.sol\":\"MyNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"myNFT.sol\":{\"keccak256\":\"0x362dee3290fdfe0c68d017b75c3bc03415ff90117a3e70ce20fd79e6b2a3b4a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cc4915cb2faa53f248929f64b3bf9e94d5c6d19c7ae0951c2464576a8c13f83\",\"dweb:/ipfs/QmQupkRmnhuj3WVZVuzMcC4g3TxDA6yJXfqkviAj1171jg\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x8935712533f4b620530e004ae0eb5ba0353c0d21f26206f1a27ffcd41914d03a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22b55db271c7564809bbd79fcf54ba220c073cb768f42088e1e66dc6f4568445\",\"dweb:/ipfs/QmeErKLekgde53gKCeJKL8WcJNLwBDpmmXLZXo1GMKooJV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 451,
								"contract": "myNFT.sol:MyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 453,
								"contract": "myNFT.sol:MyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 457,
								"contract": "myNFT.sol:MyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 461,
								"contract": "myNFT.sol:MyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 465,
								"contract": "myNFT.sol:MyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 471,
								"contract": "myNFT.sol:MyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 32,
								"contract": "myNFT.sol:MyNFT",
								"label": "_tokenMetaData",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenMetaData)21_storage)"
							},
							{
								"astId": 35,
								"contract": "myNFT.sol:MyNFT",
								"label": "totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 40,
								"contract": "myNFT.sol:MyNFT",
								"label": "addressIDs",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenMetaData)21_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MyNFT.TokenMetaData)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenMetaData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenMetaData)21_storage": {
								"encoding": "inplace",
								"label": "struct MyNFT.TokenMetaData",
								"members": [
									{
										"astId": 18,
										"contract": "myNFT.sol:MyNFT",
										"label": "tokenURI",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 20,
										"contract": "myNFT.sol:MyNFT",
										"label": "ranking",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x8935712533f4b620530e004ae0eb5ba0353c0d21f26206f1a27ffcd41914d03a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22b55db271c7564809bbd79fcf54ba220c073cb768f42088e1e66dc6f4568445\",\"dweb:/ipfs/QmeErKLekgde53gKCeJKL8WcJNLwBDpmmXLZXo1GMKooJV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 451,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 453,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 457,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 461,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 465,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 471,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LOG0 SHL LOG1 PUSH12 0x501DE2139FDD8AE251F0184F PC PUSH0 SHL 0xCE PUSH22 0xFB632A360C419F55104964736F6C6343000814003300 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LOG0 SHL LOG1 PUSH12 0x501DE2139FDD8AE251F0184F PC PUSH0 SHL 0xCE PUSH22 0xFB632A360C419F55104964736F6C6343000814003300 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC4 PUSH4 0xF2230C88 0xB9 0x24 COINBASE 0x29 0xF6 PUSH32 0x18C20B5EFEF73BEEBD82F6AE01811F8F237F9364736F6C634300081400330000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC4 PUSH4 0xF2230C88 0xB9 0x24 COINBASE 0x29 0xF6 PUSH32 0x18C20B5EFEF73BEEBD82F6AE01811F8F237F9364736F6C634300081400330000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE5 PUSH18 0x920DF3D3B9837FA8CC61487E189FEACB6E85 STOP 0x2F SWAP9 0xD3 0xDD STOP 0xE9 0xAA 0x4C PUSH1 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE5 PUSH18 0x920DF3D3B9837FA8CC61487E189FEACB6E85 STOP 0x2F SWAP9 0xD3 0xDD STOP 0xE9 0xAA 0x4C PUSH1 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> myNFT.sol:194:9:\n    |\n194 |         function _baseURI() internal view override returns(string memory) {\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 8951,
					"file": "myNFT.sol",
					"start": 8788
				},
				"type": "Warning"
			}
		],
		"sources": {
			"myNFT.sol": {
				"ast": {
					"absolutePath": "myNFT.sol",
					"exportedSymbols": {
						"Context": [
							1612
						],
						"ERC165": [
							1891
						],
						"ERC721": [
							1427
						],
						"IERC165": [
							1903
						],
						"IERC721": [
							1544
						],
						"IERC721Errors": [
							371
						],
						"IERC721Metadata": [
							1590
						],
						"IERC721Receiver": [
							1562
						],
						"MyNFT": [
							281
						],
						"Strings": [
							1867
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 282,
							"sourceUnit": 1428,
							"src": "99:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721",
										"nameLocations": [
											"193:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1427,
										"src": "193:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "193:6:0"
								}
							],
							"canonicalName": "MyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281,
								1427,
								371,
								1590,
								1544,
								1891,
								1903,
								1612
							],
							"name": "MyNFT",
							"nameLocation": "184:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "288:10:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 11,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "272:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 12,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ERC721",
												"nameLocations": [
													"265:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1427,
												"src": "265:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "265:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "220:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "220:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "255:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "241:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "241:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:46:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:0"
									},
									"scope": 281,
									"src": "207:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "MyNFT.TokenMetaData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "tokenURI",
											"nameLocation": "832:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "825:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 17,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "825:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "ranking",
											"nameLocation": "859:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "851:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 19,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "851:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenMetaData",
									"nameLocation": "800:13:0",
									"nodeType": "StructDefinition",
									"scope": 281,
									"src": "793:81:0",
									"visibility": "public"
								},
								{
									"canonicalName": "MyNFT.TokenIdMetaDataWrapper",
									"id": 27,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "995:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "987:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "987:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "metaData",
											"nameLocation": "1023:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "1009:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenMetaData_$21_storage_ptr",
												"typeString": "struct MyNFT.TokenMetaData"
											},
											"typeName": {
												"id": 25,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 24,
													"name": "TokenMetaData",
													"nameLocations": [
														"1009:13:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 21,
													"src": "1009:13:0"
												},
												"referencedDeclaration": 21,
												"src": "1009:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenMetaData_$21_storage_ptr",
													"typeString": "struct MyNFT.TokenMetaData"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenIdMetaDataWrapper",
									"nameLocation": "957:22:0",
									"nodeType": "StructDefinition",
									"scope": 281,
									"src": "950:89:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_tokenMetaData",
									"nameLocation": "1182:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "1140:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
										"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData)"
									},
									"typeName": {
										"id": 31,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
											"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 29,
												"name": "TokenMetaData",
												"nameLocations": [
													"1159:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "1159:13:0"
											},
											"referencedDeclaration": 21,
											"src": "1159:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenMetaData_$21_storage_ptr",
												"typeString": "struct MyNFT.TokenMetaData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "2014:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "2006:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2006:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2028:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "addressIDs",
									"nameLocation": "2205:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "2167:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 39,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2175:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2167:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 37,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2186:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 38,
											"nodeType": "ArrayTypeName",
											"src": "2186:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2498:302:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 52,
																							"name": "seed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 42,
																							"src": "2552:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"expression": {
																							"id": 50,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "2535:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 51,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "2539:12:0",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "2535:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 53,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2535:22:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 49,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "2525:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 54,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2525:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 47,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2562:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2517:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 58,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2516:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2569:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2516:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 46,
												"id": 61,
												"nodeType": "Return",
												"src": "2509:61:0"
											}
										]
									},
									"functionSelector": "838e4537",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRandom",
									"nameLocation": "2437:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "seed",
												"nameLocation": "2462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2448:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 41,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2489:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:9:0"
									},
									"scope": 281,
									"src": "2428:372:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3274:1048:0",
										"statements": [
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "randomRanking",
														"nameLocation": "3366:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 112,
														"src": "3358:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 72,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"arguments": [
														{
															"id": 75,
															"name": "seed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "3393:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 74,
														"name": "makeRandom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "3382:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) pure returns (uint256)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3358:40:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 78,
															"name": "_tokenMetaData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "3506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
															}
														},
														"id": 80,
														"indexExpression": {
															"id": 79,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "3521:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3506:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
															"typeString": "struct MyNFT.TokenMetaData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 82,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "3580:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 83,
																"name": "randomRanking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "3675:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 81,
															"name": "TokenMetaData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "3536:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenMetaData_$21_storage_ptr_$",
																"typeString": "type(struct MyNFT.TokenMetaData storage pointer)"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3569:8:0",
															"3665:7:0"
														],
														"names": [
															"tokenURI",
															"ranking"
														],
														"nodeType": "FunctionCall",
														"src": "3536:214:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMetaData_$21_memory_ptr",
															"typeString": "struct MyNFT.TokenMetaData memory"
														}
													},
													"src": "3506:244:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
														"typeString": "struct MyNFT.TokenMetaData storage ref"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "3506:244:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 88,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3954:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3958:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3954:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 90,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "3966:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 87,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "3948:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3948:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3948:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 98,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "4060:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 93,
																"name": "addressIDs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "4032:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 96,
															"indexExpression": {
																"expression": {
																	"id": 94,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4043:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4047:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4043:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4032:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4055:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4032:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "4032:40:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "4165:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4165:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "4165:16:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 105,
															"name": "_tokenMetaData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "4208:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
															}
														},
														"id": 109,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 106,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "4223:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4223:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4208:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
															"typeString": "struct MyNFT.TokenMetaData storage ref"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4239:8:0",
													"memberName": "tokenURI",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4208:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 71,
												"id": 111,
												"nodeType": "Return",
												"src": "4201:46:0"
											}
										]
									},
									"functionSelector": "8a55a50e",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minting",
									"nameLocation": "3189:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "3211:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3197:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 64,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "seed",
												"nameLocation": "3237:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3223:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3223:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:46:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3259:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3258:15:0"
									},
									"scope": 281,
									"src": "3180:1142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "4469:58:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 120,
															"name": "_tokenMetaData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "4487:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
															}
														},
														"id": 122,
														"indexExpression": {
															"id": 121,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4487:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
															"typeString": "struct MyNFT.TokenMetaData storage ref"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4511:8:0",
													"memberName": "tokenURI",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4487:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 119,
												"id": 124,
												"nodeType": "Return",
												"src": "4480:39:0"
											}
										]
									},
									"functionSelector": "3bb3a24d",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenURI",
									"nameLocation": "4404:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4424:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4416:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:17:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4454:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4454:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:15:0"
									},
									"scope": 281,
									"src": "4395:132:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "4685:57:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 133,
															"name": "_tokenMetaData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "4703:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
															}
														},
														"id": 135,
														"indexExpression": {
															"id": 134,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "4718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4703:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
															"typeString": "struct MyNFT.TokenMetaData storage ref"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4727:7:0",
													"memberName": "ranking",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "4703:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 132,
												"id": 137,
												"nodeType": "Return",
												"src": "4696:38:0"
											}
										]
									},
									"functionSelector": "d15a76d2",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenRanking",
									"nameLocation": "4615:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4631:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "ranking",
												"nameLocation": "4677:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4669:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4668:17:0"
									},
									"scope": 281,
									"src": "4606:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "4923:1413:0",
										"statements": [
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "tokenIds",
														"nameLocation": "5042:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "5025:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 149,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ArrayTypeName",
															"src": "5025:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"baseExpression": {
														"id": 152,
														"name": "addressIDs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "5053:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 154,
													"indexExpression": {
														"id": 153,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5064:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5053:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5025:45:0"
											},
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "ownerURIs",
														"nameLocation": "5395:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "5379:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
															"typeString": "string[]"
														},
														"typeName": {
															"baseType": {
																"id": 158,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "5379:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 159,
															"nodeType": "ArrayTypeName",
															"src": "5379:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
																"typeString": "string[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 164,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "5420:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5429:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5420:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5407:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 161,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "5411:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 162,
															"nodeType": "ArrayTypeName",
															"src": "5411:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
																"typeString": "string[]"
															}
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
														"typeString": "string memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5379:57:0"
											},
											{
												"body": {
													"id": 190,
													"nodeType": "Block",
													"src": "5817:477:0",
													"statements": [
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 179,
																		"name": "ownerURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "5832:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"typeString": "string memory[] memory"
																		}
																	},
																	"id": 181,
																	"indexExpression": {
																		"id": 180,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "5842:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5832:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 182,
																			"name": "_tokenMetaData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 32,
																			"src": "5847:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																				"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
																			}
																		},
																		"id": 186,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 183,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "5862:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 185,
																			"indexExpression": {
																				"id": 184,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 169,
																				"src": "5871:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5862:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5847:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
																			"typeString": "struct MyNFT.TokenMetaData storage ref"
																		}
																	},
																	"id": 187,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5875:8:0",
																	"memberName": "tokenURI",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "5847:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"src": "5832:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "5832:51:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 172,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "5791:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 173,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5795:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5804:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5795:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5791:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"initializationExpression": {
													"assignments": [
														169
													],
													"declarations": [
														{
															"constant": false,
															"id": 169,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5784:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 191,
															"src": "5776:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 168,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5776:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 171,
													"initialValue": {
														"hexValue": "30",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5776:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5812:3:0",
														"subExpression": {
															"id": 176,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5812:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 178,
													"nodeType": "ExpressionStatement",
													"src": "5812:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5771:523:0"
											},
											{
												"expression": {
													"id": 192,
													"name": "ownerURIs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 160,
													"src": "6311:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
														"typeString": "string memory[] memory"
													}
												},
												"functionReturnParameters": 146,
												"id": 193,
												"nodeType": "Return",
												"src": "6304:16:0"
											}
										]
									},
									"functionSelector": "5f0cac76",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerURIs",
									"nameLocation": "4857:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4878:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4870:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4869:15:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4906:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 143,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "4906:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 144,
													"nodeType": "ArrayTypeName",
													"src": "4906:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:17:0"
									},
									"scope": 281,
									"src": "4848:1488:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6525:1568:0",
										"statements": [
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "tokenIds",
														"nameLocation": "6553:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "6536:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6536:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 207,
															"nodeType": "ArrayTypeName",
															"src": "6536:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"baseExpression": {
														"id": 209,
														"name": "addressIDs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "6564:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "6575:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6564:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6536:45:0"
											},
											{
												"assignments": [
													217
												],
												"declarations": [
													{
														"constant": false,
														"id": 217,
														"mutability": "mutable",
														"name": "ownerMetaData",
														"nameLocation": "6808:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "6776:45:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MyNFT.TokenIdMetaDataWrapper[]"
														},
														"typeName": {
															"baseType": {
																"id": 215,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 214,
																	"name": "TokenIdMetaDataWrapper",
																	"nameLocations": [
																		"6776:22:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 27,
																	"src": "6776:22:0"
																},
																"referencedDeclaration": 27,
																"src": "6776:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenIdMetaDataWrapper_$27_storage_ptr",
																	"typeString": "struct MyNFT.TokenIdMetaDataWrapper"
																}
															},
															"id": 216,
															"nodeType": "ArrayTypeName",
															"src": "6776:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_storage_$dyn_storage_ptr",
																"typeString": "struct MyNFT.TokenIdMetaDataWrapper[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 222,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "6853:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6862:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6853:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6824:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MyNFT.TokenIdMetaDataWrapper memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 219,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 218,
																	"name": "TokenIdMetaDataWrapper",
																	"nameLocations": [
																		"6828:22:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 27,
																	"src": "6828:22:0"
																},
																"referencedDeclaration": 27,
																"src": "6828:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenIdMetaDataWrapper_$27_storage_ptr",
																	"typeString": "struct MyNFT.TokenIdMetaDataWrapper"
																}
															},
															"id": 220,
															"nodeType": "ArrayTypeName",
															"src": "6828:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_storage_$dyn_storage_ptr",
																"typeString": "struct MyNFT.TokenIdMetaDataWrapper[]"
															}
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6824:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MyNFT.TokenIdMetaDataWrapper memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6776:93:0"
											},
											{
												"body": {
													"id": 252,
													"nodeType": "Block",
													"src": "7394:183:0",
													"statements": [
														{
															"expression": {
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 237,
																		"name": "ownerMetaData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "7409:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct MyNFT.TokenIdMetaDataWrapper memory[] memory"
																		}
																	},
																	"id": 239,
																	"indexExpression": {
																		"id": 238,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "7423:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7409:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
																		"typeString": "struct MyNFT.TokenIdMetaDataWrapper memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 241,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 208,
																				"src": "7480:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 243,
																			"indexExpression": {
																				"id": 242,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "7489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7480:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 244,
																				"name": "_tokenMetaData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 32,
																				"src": "7522:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																					"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
																				}
																			},
																			"id": 248,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 245,
																					"name": "tokenIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 208,
																					"src": "7537:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 247,
																				"indexExpression": {
																					"id": 246,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 227,
																					"src": "7546:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7537:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7522:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
																				"typeString": "struct MyNFT.TokenMetaData storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
																				"typeString": "struct MyNFT.TokenMetaData storage ref"
																			}
																		],
																		"id": 240,
																		"name": "TokenIdMetaDataWrapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "7428:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_TokenIdMetaDataWrapper_$27_storage_ptr_$",
																			"typeString": "type(struct MyNFT.TokenIdMetaDataWrapper storage pointer)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"7470:7:0",
																		"7511:8:0"
																	],
																	"names": [
																		"tokenId",
																		"metaData"
																	],
																	"nodeType": "FunctionCall",
																	"src": "7428:137:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
																		"typeString": "struct MyNFT.TokenIdMetaDataWrapper memory"
																	}
																},
																"src": "7409:156:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr",
																	"typeString": "struct MyNFT.TokenIdMetaDataWrapper memory"
																}
															},
															"id": 251,
															"nodeType": "ExpressionStatement",
															"src": "7409:156:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "7368:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 231,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "7372:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7381:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7372:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7368:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"initializationExpression": {
													"assignments": [
														227
													],
													"declarations": [
														{
															"constant": false,
															"id": 227,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7361:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 253,
															"src": "7353:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 226,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7353:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 229,
													"initialValue": {
														"hexValue": "30",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7365:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7353:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7389:3:0",
														"subExpression": {
															"id": 234,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "7389:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 236,
													"nodeType": "ExpressionStatement",
													"src": "7389:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7348:229:0"
											},
											{
												"expression": {
													"id": 254,
													"name": "ownerMetaData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "7825:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MyNFT.TokenIdMetaDataWrapper memory[] memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 255,
												"nodeType": "Return",
												"src": "7818:20:0"
											}
										]
									},
									"functionSelector": "0a48a1ac",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerTokenMetaData",
									"nameLocation": "6434:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6464:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6456:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6455:15:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6492:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MyNFT.TokenIdMetaDataWrapper[]"
												},
												"typeName": {
													"baseType": {
														"id": 200,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 199,
															"name": "TokenIdMetaDataWrapper",
															"nameLocations": [
																"6492:22:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 27,
															"src": "6492:22:0"
														},
														"referencedDeclaration": 27,
														"src": "6492:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenIdMetaDataWrapper_$27_storage_ptr",
															"typeString": "struct MyNFT.TokenIdMetaDataWrapper"
														}
													},
													"id": 201,
													"nodeType": "ArrayTypeName",
													"src": "6492:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenIdMetaDataWrapper_$27_storage_$dyn_storage_ptr",
														"typeString": "struct MyNFT.TokenIdMetaDataWrapper[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:33:0"
									},
									"scope": 281,
									"src": "6425:1668:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										614
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "8395:381:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 265,
															"name": "_tokenMetaData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "8467:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenMetaData_$21_storage_$",
																"typeString": "mapping(uint256 => struct MyNFT.TokenMetaData storage ref)"
															}
														},
														"id": 267,
														"indexExpression": {
															"id": 266,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8482:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8467:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMetaData_$21_storage",
															"typeString": "struct MyNFT.TokenMetaData storage ref"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8492:8:0",
													"memberName": "tokenURI",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "8467:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 264,
												"id": 269,
												"nodeType": "Return",
												"src": "8460:40:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8324:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8364:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "8342:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8334:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8332:19:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "8381:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8380:15:0"
									},
									"scope": 281,
									"src": "8315:461:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										623
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "8854:97:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f697066732e696f2f697066732f",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8876:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6f6c4dab5ef2d22ee688f4f246e6d9e579f088bed1b916b0ef559db8e1ac6e46",
														"typeString": "literal_string \"https://ipfs.io/ipfs/\""
													},
													"value": "https://ipfs.io/ipfs/"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "8869:30:0"
											}
										]
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "8797:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 273,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8822:8:0"
									},
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8805:2:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "8839:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8839:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8838:15:0"
									},
									"scope": 281,
									"src": "8788:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "175:8781:0",
							"usedErrors": [
								329,
								334,
								343,
								348,
								353,
								360,
								365,
								370
							],
							"usedEvents": [
								1443,
								1452,
								1461
							]
						}
					],
					"src": "33:10120:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							418
						],
						"IERC20Errors": [
							323
						],
						"IERC721Errors": [
							371
						]
					},
					"id": 419,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 323,
							"linearizedBaseContracts": [
								323
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 293,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 298,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 303,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 312,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 317,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 322,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 419,
							"src": "278:1764:1",
							"usedErrors": [
								293,
								298,
								303,
								312,
								317,
								322
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 324,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 371,
							"linearizedBaseContracts": [
								371
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 329,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 334,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 343,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 348,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 353,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 360,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 365,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 370,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 419,
							"src": "2186:2092:1",
							"usedErrors": [
								329,
								334,
								343,
								348,
								353,
								360,
								365,
								370
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 372,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 418,
							"linearizedBaseContracts": [
								418
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 383,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 388,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 393,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 400,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 405,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 410,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 417,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 419,
							"src": "4424:2107:1",
							"usedErrors": [
								383,
								388,
								393,
								400,
								405,
								410,
								417
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1612
						],
						"ERC165": [
							1891
						],
						"ERC721": [
							1427
						],
						"IERC165": [
							1903
						],
						"IERC721": [
							1544
						],
						"IERC721Errors": [
							371
						],
						"IERC721Metadata": [
							1590
						],
						"IERC721Receiver": [
							1562
						],
						"Strings": [
							1867
						]
					},
					"id": 1428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 420,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1545,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 421,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1544,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1563,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 423,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1562,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1591,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 425,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1590,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1613,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 427,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1612,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 430,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1868,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 429,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1867,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1892,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 431,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1903,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 432,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1891,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 419,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 434,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 371,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 437,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1612,
										"src": "804:7:2"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 439,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1891,
										"src": "813:6:2"
									},
									"id": 440,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 441,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1544,
										"src": "821:7:2"
									},
									"id": 442,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 443,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1590,
										"src": "830:15:2"
									},
									"id": 444,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 445,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 371,
										"src": "847:13:2"
									},
									"id": 446,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1427,
							"linearizedBaseContracts": [
								1427,
								371,
								1590,
								1544,
								1891,
								1903,
								1612
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 449,
									"libraryName": {
										"id": 447,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1867,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 448,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 451,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "949:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1427,
									"src": "934:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 450,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "934:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 453,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1012:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1427,
									"src": "997:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 452,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "997:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1773:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1427,
									"src": "1729:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 456,
										"keyName": "tokenId",
										"keyNameLocation": "1745:7:2",
										"keyType": {
											"id": 454,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1737:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1729:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 455,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1756:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 461,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2080:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1427,
									"src": "2038:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 460,
										"keyName": "owner",
										"keyNameLocation": "2054:5:2",
										"keyType": {
											"id": 458,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2046:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2038:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 459,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2063:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 465,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2485:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1427,
									"src": "2441:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 464,
										"keyName": "tokenId",
										"keyNameLocation": "2457:7:2",
										"keyType": {
											"id": 462,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2449:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2441:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 463,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2468:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2576:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1427,
									"src": "2508:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 470,
										"keyName": "owner",
										"keyNameLocation": "2524:5:2",
										"keyType": {
											"id": 466,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2516:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2508:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 469,
											"keyName": "operator",
											"keyNameLocation": "2549:8:2",
											"keyType": {
												"id": 467,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2541:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2533:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 468,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2561:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2770:57:2",
										"statements": [
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2780:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 480,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "2788:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2780:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2780:13:2"
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 483,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "2803:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 484,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2813:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2803:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "2803:17:2"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2601:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 488,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2726:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2726:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2761:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2747:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:44:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2770:0:2"
									},
									"scope": 1427,
									"src": "2714:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1890,
										1902
									],
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3171:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 499,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3200:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 501,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "3220:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1544_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1544_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 500,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3215:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3215:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1544",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3229:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "3215:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "3200:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3256:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 507,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "3276:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1590_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1590_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 506,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3271:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3271:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1590",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3293:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "3271:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "3256:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3200:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 514,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3344:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 512,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3320:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1427_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3326:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1890,
															"src": "3320:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3320:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3200:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 498,
												"id": 517,
												"nodeType": "Return",
												"src": "3181:175:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2833:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3072:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 493,
												"name": "ERC165",
												"nameLocations": [
													"3139:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1891,
												"src": "3139:6:2"
											},
											{
												"id": 494,
												"name": "IERC165",
												"nameLocations": [
													"3147:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1903,
												"src": "3147:7:2"
											}
										],
										"src": "3130:25:2"
									},
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3097:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3090:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3090:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:20:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3165:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:6:2"
									},
									"scope": 1427,
									"src": "3063:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1469
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "3623:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3637:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3654:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3646:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 528,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3646:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3646:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3637:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3633:87:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3658:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3706:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3698:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 534,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3698:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3698:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 533,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3679:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3679:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3672:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 542,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3736:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 544,
													"indexExpression": {
														"id": 543,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3746:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3736:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "3729:23:2"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3369:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:15:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3614:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3613:9:2"
									},
									"scope": 1427,
									"src": "3551:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1477
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "4067:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "4084:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 554,
												"id": 558,
												"nodeType": "Return",
												"src": "4077:29:2"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "3765:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4004:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "4012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4011:17:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "4058:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4058:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4057:9:2"
									},
									"scope": 1427,
									"src": "3995:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1575
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "4268:29:2",
										"statements": [
											{
												"expression": {
													"id": 566,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 451,
													"src": "4285:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 565,
												"id": 567,
												"nodeType": "Return",
												"src": "4278:12:2"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "4119:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4217:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4221:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "4253:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4253:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:15:2"
									},
									"scope": 1427,
									"src": "4208:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1581
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "4423:31:2",
										"statements": [
											{
												"expression": {
													"id": 575,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "4440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "4433:14:2"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "4303:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4370:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4376:2:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4408:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4408:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:15:2"
									},
									"scope": 1427,
									"src": "4361:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1589
									],
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "4989:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5013:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "4999:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "4999:22:2"
											},
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "5046:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "5032:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 590,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "5032:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 592,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "5056:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5056:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5032:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 597,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "5089:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5083:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 595,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5083:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5083:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5098:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5083:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5107:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5083:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5156:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5083:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 605,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "5125:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 606,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5134:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5142:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1680,
																	"src": "5134:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5134:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5111:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 602,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "5111:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5118:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "5111:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5111:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 585,
												"id": 612,
												"nodeType": "Return",
												"src": "5076:82:2"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "4460:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4919:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4936:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4928:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4927:17:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "4974:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4974:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:15:2"
									},
									"scope": 1427,
									"src": "4910:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6264:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6281:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 619,
												"id": 621,
												"nodeType": "Return",
												"src": "6274:9:2"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "5171:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "6207:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6215:2:2"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6249:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6249:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6248:15:2"
									},
									"scope": 1427,
									"src": "6198:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1517
									],
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "6408:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "6427:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6431:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 634,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "6440:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6440:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 631,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1230,
															1296
														],
														"referencedDeclaration": 1230,
														"src": "6418:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6418:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "6418:35:2"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "6296:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6356:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6372:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "6364:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6364:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6384:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "6376:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6363:29:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6408:0:2"
									},
									"scope": 1427,
									"src": "6347:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1533
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "6597:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6621:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "6607:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6607:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "6607:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "6647:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6647:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 646,
												"id": 654,
												"nodeType": "Return",
												"src": "6640:28:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "6466:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "6530:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6550:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "6542:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6541:17:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "6588:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:9:2"
									},
									"scope": 1427,
									"src": "6521:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1525
									],
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "6817:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 665,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "6846:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6846:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "6860:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "6870:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 664,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "6827:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6827:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "6827:52:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "6681:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6751:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6777:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "6769:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "6792:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "6787:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6787:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:33:2"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6817:0:2"
									},
									"scope": 1427,
									"src": "6742:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1543
									],
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "7046:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 682,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "7063:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 684,
														"indexExpression": {
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "7082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7063:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 686,
													"indexExpression": {
														"id": 685,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "7089:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7063:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 681,
												"id": 687,
												"nodeType": "Return",
												"src": "7056:42:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "6892:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "6961:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6986:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6978:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7001:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6993:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6977:33:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "7040:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7040:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:6:2"
									},
									"scope": 1427,
									"src": "6952:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "7247:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "7261:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7275:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7267:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 700,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7267:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7267:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7261:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "7257:87:2",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "7279:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7330:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7322:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 706,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7322:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7322:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 705,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "7300:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 711,
															"nodeType": "RevertStatement",
															"src": "7293:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "7570:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "7562:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 714,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7562:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7594:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7598:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 719,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "7607:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7607:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 716,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7586:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7562:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "7634:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 724,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "7651:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7634:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 733,
												"nodeType": "IfStatement",
												"src": "7630:109:2",
												"trueBody": {
													"id": 732,
													"nodeType": "Block",
													"src": "7657:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 727,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "7699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 728,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "7705:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 729,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "7714:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 726,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "7678:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7678:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 731,
															"nodeType": "RevertStatement",
															"src": "7671:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "7111:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7176:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7197:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7189:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7211:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7203:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7203:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7223:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7215:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7215:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:43:2"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7247:0:2"
									},
									"scope": 1427,
									"src": "7167:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1499
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "7887:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7914:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "7920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7933:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 745,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															753,
															779
														],
														"referencedDeclaration": 779,
														"src": "7897:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7897:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "7897:39:2"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "7751:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "7820:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7845:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "7837:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "7851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "7863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7836:43:2"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7887:0:2"
									},
									"scope": 1427,
									"src": "7811:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1489
									],
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "8112:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "8135:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "8141:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "8145:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "8122:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8122:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "8122:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "8186:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "8192:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "8196:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 775,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "8205:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 771,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "8163:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "8163:47:2"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "7949:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8018:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8043:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "8035:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8057:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "8049:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8069:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "8061:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8091:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "8078:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8078:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8034:62:2"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8112:0:2"
									},
									"scope": 1427,
									"src": "8009:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8806:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 787,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "8823:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 789,
													"indexExpression": {
														"id": 788,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "8831:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8823:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 790,
												"nodeType": "Return",
												"src": "8816:23:2"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "8223:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "8740:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8749:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8748:17:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8797:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8796:9:2"
									},
									"scope": 1427,
									"src": "8731:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "9041:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 800,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "9058:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 802,
													"indexExpression": {
														"id": 801,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9058:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 799,
												"id": 803,
												"nodeType": "Return",
												"src": "9051:31:2"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8852:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "8971:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8992:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "8984:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8983:17:2"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "9032:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9031:9:2"
									},
									"scope": 1427,
									"src": "8962:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "9509:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 817,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "9538:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9557:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9549:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9549:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9549:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9538:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 823,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "9576:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 824,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 810,
																			"src": "9585:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "9576:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 827,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "9613:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 828,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "9620:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 826,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "9596:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9596:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9576:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 832,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "9645:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 831,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "9632:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9632:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 834,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "9657:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "9632:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9576:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 837,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9575:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9538:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 816,
												"id": 839,
												"nodeType": "Return",
												"src": "9519:146:2"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "9095:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "9409:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9431:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "9423:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "9438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "9455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9422:49:2"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "9503:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9503:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9502:6:2"
									},
									"scope": 1427,
									"src": "9400:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "10203:271:2",
										"statements": [
											{
												"condition": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10217:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 852,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "10232:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 853,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "10239:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 854,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10248:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 851,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "10218:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10218:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "10213:255:2",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "10258:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 857,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "10276:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10293:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 858,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10285:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10285:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10276:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 873,
																"nodeType": "Block",
																"src": "10374:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 869,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "10426:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 870,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 848,
																					"src": "10435:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 868,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "10399:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10399:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 872,
																		"nodeType": "RevertStatement",
																		"src": "10392:51:2"
																	}
																]
															},
															"id": 874,
															"nodeType": "IfStatement",
															"src": "10272:186:2",
															"trueBody": {
																"id": 867,
																"nodeType": "Block",
																"src": "10297:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 864,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 848,
																					"src": "10345:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 863,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 334,
																				"src": "10322:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10322:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 866,
																		"nodeType": "RevertStatement",
																		"src": "10315:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "9678:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "10115:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10140:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "10132:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10155:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "10147:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10172:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "10164:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10164:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10131:49:2"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10203:0:2"
									},
									"scope": 1427,
									"src": "10106:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "11191:78:2",
										"statements": [
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "11201:62:2",
												"statements": [
													{
														"expression": {
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 886,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "11225:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 888,
																"indexExpression": {
																	"id": 887,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "11235:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11225:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 889,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "11247:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "11225:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 891,
														"nodeType": "ExpressionStatement",
														"src": "11225:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "10480:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "11125:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11150:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "11142:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11142:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11167:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "11159:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 882,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "11159:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11141:32:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11191:0:2"
									},
									"scope": 1427,
									"src": "11116:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "11957:700:2",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "11975:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "11967:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 906,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11967:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"arguments": [
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "11991:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "11982:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11982:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11967:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "12059:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12075:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12067:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 913,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12067:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12067:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12059:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "12055:86:2",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "12079:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 919,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "12110:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 920,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "12116:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 921,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "12122:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 918,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12093:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12093:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "12093:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 926,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "12185:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12201:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12193:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 927,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12193:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12193:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12185:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "12181:256:2",
												"trueBody": {
													"id": 952,
													"nodeType": "Block",
													"src": "12205:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12318:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12310:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 933,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12310:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12310:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 937,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "12322:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12339:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12331:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 938,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12331:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12331:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12343:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 932,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1230,
																		1296
																	],
																	"referencedDeclaration": 1296,
																	"src": "12301:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12301:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 944,
															"nodeType": "ExpressionStatement",
															"src": "12301:48:2"
														},
														{
															"id": 951,
															"nodeType": "UncheckedBlock",
															"src": "12364:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 945,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "12392:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 947,
																			"indexExpression": {
																				"id": 946,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "12402:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12392:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12411:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12392:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 950,
																	"nodeType": "ExpressionStatement",
																	"src": "12392:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 954,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "12451:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12465:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12457:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 955,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12457:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12457:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12451:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "12447:107:2",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "12469:85:2",
													"statements": [
														{
															"id": 966,
															"nodeType": "UncheckedBlock",
															"src": "12483:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 960,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "12511:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 962,
																			"indexExpression": {
																				"id": 961,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "12521:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12511:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12528:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12511:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 965,
																	"nodeType": "ExpressionStatement",
																	"src": "12511:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 969,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "12564:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 971,
														"indexExpression": {
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "12572:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12564:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "12583:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12564:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "12564:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 976,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "12610:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "12616:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "12620:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 975,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "12601:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12601:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "EmitStatement",
												"src": "12596:32:2"
											},
											{
												"expression": {
													"id": 981,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 907,
													"src": "12646:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 905,
												"id": 982,
												"nodeType": "Return",
												"src": "12639:11:2"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "11275:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "11871:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11887:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "11879:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "11891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11891:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "11916:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "11908:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11908:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11878:43:2"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "11948:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11948:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11947:9:2"
									},
									"scope": 1427,
									"src": "11862:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "13032:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "13046:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13060:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13052:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 993,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13052:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13052:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13046:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "13042:87:2",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "13064:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13115:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13107:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 999,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13107:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13107:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 998,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "13085:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13085:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1004,
															"nodeType": "RevertStatement",
															"src": "13078:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13146:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "13138:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1007,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13138:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"arguments": [
														{
															"id": 1010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "13170:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "13174:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13191:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13183:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13183:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13183:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1009,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "13162:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13162:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13138:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "13208:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13233:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13225:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1019,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13225:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13225:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13208:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "13204:96:2",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "13237:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13286:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13278:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1025,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13278:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13278:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1024,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "13258:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13258:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "13251:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "12663:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12988:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13002:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12994:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13014:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "13006:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13006:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12993:29:2"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13032:0:2"
									},
									"scope": 1427,
									"src": "12979:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "13714:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13734:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13738:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13747:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1042,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1049,
															1075
														],
														"referencedDeclaration": 1075,
														"src": "13724:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13724:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "13724:26:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "13312:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13666:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13684:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "13676:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13676:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13696:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "13688:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13675:29:2"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13714:0:2"
									},
									"scope": 1427,
									"src": "13657:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "14062:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "14078:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "14082:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "14072:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14072:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "14072:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14131:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14123:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14123:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14123:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "14135:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "14139:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1071,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "14148:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1064,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "14100:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14100:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "14100:53:2"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "13763:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13987:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14005:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "13997:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14017:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14009:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14009:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "14026:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14026:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13996:48:2"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14062:0:2"
									},
									"scope": 1427,
									"src": "13978:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "14527:186:2",
										"statements": [
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "14545:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "14537:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1081,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14537:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14577:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14569:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1084,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14569:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14569:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "14581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14598:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14590:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14590:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14590:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1083,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "14561:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14561:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14537:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "14615:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14640:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14632:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1096,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14632:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14632:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14615:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "14611:96:2",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "14644:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1102,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "14688:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1101,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "14665:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14665:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "RevertStatement",
															"src": "14658:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "14166:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14495:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14509:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "14501:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14500:17:2"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14527:0:2"
									},
									"scope": 1427,
									"src": "14486:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "15108:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "15122:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15136:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15128:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15128:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15128:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15122:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"nodeType": "IfStatement",
												"src": "15118:87:2",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "15140:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15191:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15183:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1125,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15183:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15183:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1124,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "15161:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15161:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1130,
															"nodeType": "RevertStatement",
															"src": "15154:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "15222:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "15214:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1133,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15214:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"arguments": [
														{
															"id": 1136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "15246:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "15250:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15267:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15259:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1138,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15259:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15259:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1135,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "15238:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15238:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15214:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "15284:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15309:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15301:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15301:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15301:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15284:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1155,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "15386:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1156,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "15403:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15386:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1165,
													"nodeType": "IfStatement",
													"src": "15382:109:2",
													"trueBody": {
														"id": 1164,
														"nodeType": "Block",
														"src": "15409:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1159,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "15451:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1160,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "15457:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1161,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "15466:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1158,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "15430:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15430:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1163,
																"nodeType": "RevertStatement",
																"src": "15423:57:2"
															}
														]
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "15280:211:2",
												"trueBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "15313:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15357:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "15334:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15334:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "RevertStatement",
															"src": "15327:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "14719:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15046:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15078:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15070:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15090:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "15082:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15055:43:2"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15108:0:2"
									},
									"scope": 1427,
									"src": "15037:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16505:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1179,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "16529:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "16535:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "16539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16548:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1178,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1186,
															1212
														],
														"referencedDeclaration": 1212,
														"src": "16515:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16515:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "16515:36:2"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "15503:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "16439:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16461:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16453:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16475:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16467:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16467:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16487:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16479:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16479:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16452:43:2"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16505:0:2"
									},
									"scope": 1427,
									"src": "16430:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "16897:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "16917:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "16923:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "16927:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "16907:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16907:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "16907:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "16968:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "16974:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "16978:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1208,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "16987:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1204,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "16945:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16945:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "16945:47:2"
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "16564:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "16804:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16826:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "16818:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16818:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16840:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "16832:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16832:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16852:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "16844:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16874:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "16861:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16861:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16817:62:2"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16897:0:2"
									},
									"scope": 1427,
									"src": "16795:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "17512:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "17531:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "17535:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1225,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "17544:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17550:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1222,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1230,
															1296
														],
														"referencedDeclaration": 1296,
														"src": "17522:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17522:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "17522:33:2"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "17005:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "17451:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17468:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "17460:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17480:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "17472:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "17497:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "17489:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17459:43:2"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17512:0:2"
									},
									"scope": 1427,
									"src": "17442:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "17838:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1242,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "17904:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1243,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "17917:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17933:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17925:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17925:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17925:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17917:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17904:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "17900:460:2",
												"trueBody": {
													"id": 1287,
													"nodeType": "Block",
													"src": "17937:423:2",
													"statements": [
														{
															"assignments": [
																1251
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1251,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "17959:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1287,
																	"src": "17951:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17951:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1255,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1253,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17981:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1252,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "17967:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17967:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17951:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1256,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "18117:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18133:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18125:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1257,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "18125:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18125:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "18117:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1262,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "18139:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1263,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "18148:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "18139:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "18117:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "18156:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1267,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1251,
																				"src": "18174:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1268,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1237,
																				"src": "18181:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1266,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "18157:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18157:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "18117:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1277,
															"nodeType": "IfStatement",
															"src": "18113:142:2",
															"trueBody": {
																"id": 1276,
																"nodeType": "Block",
																"src": "18188:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1273,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1237,
																					"src": "18235:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1272,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "18213:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18213:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1275,
																		"nodeType": "RevertStatement",
																		"src": "18206:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1278,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "18273:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1286,
															"nodeType": "IfStatement",
															"src": "18269:81:2",
															"trueBody": {
																"id": 1285,
																"nodeType": "Block",
																"src": "18284:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1280,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "18316:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1281,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "18323:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1282,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1235,
																					"src": "18327:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1279,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1452,
																				"src": "18307:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18307:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1284,
																		"nodeType": "EmitStatement",
																		"src": "18302:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1289,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "18370:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"id": 1290,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "18386:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18370:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1292,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "18397:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18370:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "18370:29:2"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "17568:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "17753:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17770:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "17762:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "17774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "17799:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "17791:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17791:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "17810:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "17805:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17761:59:2"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17838:0:2"
									},
									"scope": 1427,
									"src": "17744:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "18708:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1306,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "18722:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18742:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18734:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18734:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18734:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18722:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "18718:91:2",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "18746:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "18789:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1312,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "18767:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18767:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1315,
															"nodeType": "RevertStatement",
															"src": "18760:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1318,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "18818:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1321,
															"indexExpression": {
																"id": 1319,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "18837:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18818:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1322,
														"indexExpression": {
															"id": 1320,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "18844:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18818:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1323,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "18856:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18818:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "18818:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1327,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "18894:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1328,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "18901:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "18911:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1326,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "18879:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18879:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "EmitStatement",
												"src": "18874:46:2"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "18412:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "18624:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "18643:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18666:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "18658:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18681:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "18676:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18676:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18642:48:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18708:0:2"
									},
									"scope": 1427,
									"src": "18615:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "19234:169:2",
										"statements": [
											{
												"assignments": [
													1342
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "19252:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1361,
														"src": "19244:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1341,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19244:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"arguments": [
														{
															"id": 1344,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "19269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1343,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "19260:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19260:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19244:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "19291:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19308:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1348,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19300:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19300:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19291:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "19287:88:2",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "19312:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1354,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "19356:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1353,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "19333:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1356,
															"nodeType": "RevertStatement",
															"src": "19326:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1359,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1342,
													"src": "19391:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1360,
												"nodeType": "Return",
												"src": "19384:12:2"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "18933:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "19171:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19193:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "19185:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19184:17:2"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "19225:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19224:9:2"
									},
									"scope": 1427,
									"src": "19162:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "20044:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1374,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "20058:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20061:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "20058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20066:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20058:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20075:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20058:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "20054:664:2",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "20078:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1403,
																		"nodeType": "Block",
																		"src": "20192:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1392,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1390,
																						"src": "20214:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1393,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1562,
																								"src": "20224:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1562_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1394,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "20240:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1561,
																							"src": "20224:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1395,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "20257:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "20224:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "20214:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1402,
																				"nodeType": "IfStatement",
																				"src": "20210:130:2",
																				"trueBody": {
																					"id": 1401,
																					"nodeType": "Block",
																					"src": "20267:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1398,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1367,
																										"src": "20318:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1397,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 353,
																									"src": "20296:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1399,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "20296:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1400,
																							"nodeType": "RevertStatement",
																							"src": "20289:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1404,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1391,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1390,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "20184:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1404,
																				"src": "20177:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1389,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "20177:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "20176:15:2"
																	},
																	"src": "20168:186:2"
																},
																{
																	"block": {
																		"id": 1420,
																		"nodeType": "Block",
																		"src": "20383:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1408,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1406,
																							"src": "20405:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1409,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "20412:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "20405:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1410,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20422:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "20405:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1418,
																					"nodeType": "Block",
																					"src": "20504:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "20590:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "20627:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "20631:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "20623:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "20623:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "20646:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "20640:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "20640:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "20616:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "20616:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "20616:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1406,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "20631:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1406,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "20646:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1417,
																							"nodeType": "InlineAssembly",
																							"src": "20581:95:2"
																						}
																					]
																				},
																				"id": 1419,
																				"nodeType": "IfStatement",
																				"src": "20401:293:2",
																				"trueBody": {
																					"id": 1416,
																					"nodeType": "Block",
																					"src": "20425:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1413,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1367,
																										"src": "20476:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1412,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 353,
																									"src": "20454:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1414,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "20454:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1415,
																							"nodeType": "RevertStatement",
																							"src": "20447:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1421,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1407,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1406,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "20375:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1421,
																				"src": "20362:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1405,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "20362:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "20361:21:2"
																	},
																	"src": "20355:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1383,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "20133:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20133:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1385,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "20147:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1386,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "20153:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1387,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "20162:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1380,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1367,
																				"src": "20112:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1379,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "20096:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1562_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20096:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1562",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20116:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1561,
																	"src": "20096:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20096:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1422,
															"nodeType": "TryStatement",
															"src": "20092:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "19409:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "19951:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19982:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "19974:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19974:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19996:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "19988:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20008:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "20000:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "20017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19973:62:2"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20044:0:2"
									},
									"scope": 1427,
									"src": "19942:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1428,
							"src": "776:19950:2",
							"usedErrors": [
								329,
								334,
								343,
								348,
								353,
								360,
								365,
								370
							],
							"usedEvents": [
								1443,
								1452,
								1461
							]
						}
					],
					"src": "107:20620:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1903
						],
						"IERC721": [
							1544
						]
					},
					"id": 1545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 1904,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1430,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1903,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1433,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1903,
										"src": "287:7:3"
									},
									"id": 1434,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1432,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1544,
							"linearizedBaseContracts": [
								1544,
								1903
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1443,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1452,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1461,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1544,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1544,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1544,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1544,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1544,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1544,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1544,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1544,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1544,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1545,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1443,
								1452,
								1461
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1562
						]
					},
					"id": 1563,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1546,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1547,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1562,
							"linearizedBaseContracts": [
								1562
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1562,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1563,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1544
						],
						"IERC721Metadata": [
							1590
						]
					},
					"id": 1591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1564,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1591,
							"sourceUnit": 1545,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1565,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1544,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1568,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1544,
										"src": "357:7:5"
									},
									"id": 1569,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1567,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1590,
							"linearizedBaseContracts": [
								1590,
								1544,
								1903
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1590,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1578,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1590,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1590,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1591,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1443,
								1452,
								1461
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1612
						]
					},
					"id": 1613,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1592,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1593,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1612,
							"linearizedBaseContracts": [
								1612
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1598,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1600,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1612,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1607,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1609,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1612,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1613,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2957
						],
						"SignedMath": [
							3062
						],
						"Strings": [
							1867
						]
					},
					"id": 1868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1614,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1868,
							"sourceUnit": 2958,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1615,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2957,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1618,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1868,
							"sourceUnit": 3063,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1617,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3062,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1619,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1867,
							"linearizedBaseContracts": [
								1867
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1622,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1867,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1620,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1625,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1867,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1623,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1632,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1641
														],
														"declarations": [
															{
																"constant": false,
																"id": 1641,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1678,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1640,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1648,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1644,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1642,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2957,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2957_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2777,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1650
														],
														"declarations": [
															{
																"constant": false,
																"id": 1650,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1678,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1649,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1655,
														"initialValue": {
															"arguments": [
																{
																	"id": 1653,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1651,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1657
														],
														"declarations": [
															{
																"constant": false,
																"id": 1657,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1678,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1658,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1650,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1641,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1657,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1659,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1674,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1661,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1663,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1622,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1657,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1635,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1664,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1668,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1673,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1672,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1675,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1676,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1639,
														"id": 1677,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1867,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1683,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1698,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3062,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3062_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3061,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1697,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1688,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1687,
												"id": 1704,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1682,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1867,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1724,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1715,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1718,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1709,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1716,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2957,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2957_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2899,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1714,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1726,
																	1809,
																	1829
																],
																"referencedDeclaration": 1809,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1713,
														"id": 1723,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1711,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1867,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1739,
												"initialValue": {
													"id": 1738,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1729,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1741
												],
												"declarations": [
													{
														"constant": false,
														"id": 1741,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1740,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1745,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1742,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1751,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1753,
														"indexExpression": {
															"hexValue": "30",
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1757,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1759,
														"indexExpression": {
															"hexValue": "31",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1791,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1777,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1779,
																	"indexExpression": {
																		"id": 1778,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1780,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1784,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1781,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1737,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1786,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1787,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1790,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1792,
												"initializationExpression": {
													"assignments": [
														1764
													],
													"declarations": [
														{
															"constant": false,
															"id": 1764,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1792,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1763,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1770,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1766,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1774,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1776,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1793,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1802,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1797,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1729,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1798,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1796,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1800,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1805,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1803,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1807,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1733,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1867,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1822,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1820,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1825,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1817,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1726,
															1809,
															1829
														],
														"referencedDeclaration": 1809,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1827,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1867,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1841,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1839,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1846,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1844,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1853,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1832,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1851,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1850,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1859,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1857,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1856,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1838,
												"id": 1864,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1867,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1868,
							"src": "251:2847:7",
							"usedErrors": [
								1632
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1891
						],
						"IERC165": [
							1903
						]
					},
					"id": 1892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 1904,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1870,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1903,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1873,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1903,
										"src": "687:7:8"
									},
									"id": 1874,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1872,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1891,
							"linearizedBaseContracts": [
								1891,
								1903
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1902
									],
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1882,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1884,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1903_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1903_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1883,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1903",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1888,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1876,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1891,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1892,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1903
						]
					},
					"id": 1904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1894,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1903,
							"linearizedBaseContracts": [
								1903
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1903,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1904,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2957
						]
					},
					"id": 2958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1906,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2957,
							"linearizedBaseContracts": [
								2957
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1909,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1914,
									"members": [
										{
											"id": 1910,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1911,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1912,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1913,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1927
														],
														"declarations": [
															{
																"constant": false,
																"id": 1927,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1944,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1926,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1931,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1928,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1929,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1932,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1933,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1939,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1937,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1925,
															"id": 1938,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1941,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1927,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1925,
														"id": 1943,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2957,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1972,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1958,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1959,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1965,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1964,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1967,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1949,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1968,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1970,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1971,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2957,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 2014,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1986,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1993,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1985,
															"id": 1992,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1995
														],
														"declarations": [
															{
																"constant": false,
																"id": 1995,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 2014,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1994,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1999,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1996,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2000,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2001,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2003,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2009,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1985,
															"id": 2008,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2011,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2012,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1985,
														"id": 2013,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2957,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 2042,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2035,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2027,
															"id": 2034,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2037,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2021,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2027,
														"id": 2041,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2957,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 2070,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2063,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2061,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2055,
															"id": 2062,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2065,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2066,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2068,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2055,
														"id": 2069,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2957,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2082,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2083,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2086,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2077,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 2085,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2081,
												"id": 2088,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2957,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2100,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2101,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2104,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 2103,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2099,
												"id": 2106,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2957,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2118,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2111,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2119,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2113,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2121,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2122,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2111,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2123,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2113,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2125,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2129,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2957,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2141,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2149,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 2148,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2144,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2145,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2140,
															"id": 2147,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2150,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2154,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2134,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2158,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2140,
												"id": 2163,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2957,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2289,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2178
														],
														"declarations": [
															{
																"constant": false,
																"id": 2178,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2289,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2177,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2182,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2179,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2180,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2184
														],
														"declarations": [
															{
																"constant": false,
																"id": 2184,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2289,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2183,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2185,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2184,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2168,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2186,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2187,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2195,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2194,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2190,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2178,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2191,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2176,
																	"id": 2193,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2196,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2197,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2203,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2202,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2199,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2201,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2205
														],
														"declarations": [
															{
																"constant": false,
																"id": 2205,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2289,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2204,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2206,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2172,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2184,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2184,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2205,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2205,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2205,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2168,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2170,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2207,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2209
														],
														"declarations": [
															{
																"constant": false,
																"id": 2209,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2289,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2208,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2216,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2210,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2212,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2172,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2172,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2209,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2209,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2209,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2209,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2209,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2217,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2218,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2178,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2184,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2220,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2223,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2225
														],
														"declarations": [
															{
																"constant": false,
																"id": 2225,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2289,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2224,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2232,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2227,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2233,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2235,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2236,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2240,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2241,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2243,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2244,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2248,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2249,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2251,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2252,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2256,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2257,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2259,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2260,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2264,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2265,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2267,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2268,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2272,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2273,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2275,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2276,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2281,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2175,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2282,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2178,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2283,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2286,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2287,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2176,
														"id": 2288,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2957,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2307
												],
												"declarations": [
													{
														"constant": false,
														"id": 2307,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2333,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2313,
												"initialValue": {
													"arguments": [
														{
															"id": 2309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2310,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2311,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2308,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2291,
															2334
														],
														"referencedDeclaration": 2291,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2315,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1914",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1914",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2314,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1914_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2318,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2319,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2320,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2317,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2330,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2329,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2325,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2328,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2331,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2307,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2305,
												"id": 2332,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1914",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2299,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1914,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1914",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2957,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2445,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2348,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2347,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2341,
															"id": 2346,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2350
												],
												"declarations": [
													{
														"constant": false,
														"id": 2350,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2359,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2353,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2337,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2352,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2613,
																			2648
																		],
																		"referencedDeclaration": 2613,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2357,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2444,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2360,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2361,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2362,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2363,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2366,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2370,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2371,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2372,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2373,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2374,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2377,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2381,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2382,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2383,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2384,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2385,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2388,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2392,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2393,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2394,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2395,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2396,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2399,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2403,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2404,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2405,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2406,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2407,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2410,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2414,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2415,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2416,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2417,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2418,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2421,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2425,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2426,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2427,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2350,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2428,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2337,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2429,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2432,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2436,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2438,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2439,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2440,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2350,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2437,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2341,
														"id": 2443,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2957,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2479,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2458
														],
														"declarations": [
															{
																"constant": false,
																"id": 2458,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2479,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2462,
														"initialValue": {
															"arguments": [
																{
																	"id": 2460,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2449,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2459,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2446,
																	2481
																],
																"referencedDeclaration": 2446,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2465,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2452,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2464,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2956,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1914_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2467,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2458,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2468,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2458,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2470,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2449,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2476,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2456,
														"id": 2478,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2447,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1914",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2450,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1914,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1914",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2957,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2490
												],
												"declarations": [
													{
														"constant": false,
														"id": 2490,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2492,
												"initialValue": {
													"hexValue": "30",
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2609,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2507,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2506,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2498,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2502,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2505,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2522,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2521,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2513,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2516,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2517,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2520,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2523,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2537,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2536,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2528,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2531,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2532,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2535,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2552,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2551,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2546,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2547,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2550,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2566,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2558,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2561,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2568,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2582,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2581,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2576,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2577,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2580,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2597,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2596,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2588,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2591,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2592,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2608,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2607,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2603,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2490,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2606,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2610,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2490,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2488,
												"id": 2611,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2482,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2957,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2646,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2625
														],
														"declarations": [
															{
																"constant": false,
																"id": 2625,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2646,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2624,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2629,
														"initialValue": {
															"arguments": [
																{
																	"id": 2627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2616,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2626,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2613,
																	2648
																],
																"referencedDeclaration": 2613,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2630,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2632,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2619,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2631,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2956,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1914_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2634,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2635,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2637,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2616,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2623,
														"id": 2645,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1914",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2617,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1914,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1914",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2957,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2776,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2657
												],
												"declarations": [
													{
														"constant": false,
														"id": 2657,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2776,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"initialValue": {
													"hexValue": "30",
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2773,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2676,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2675,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2670,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2674,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2677,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2693,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2692,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2687,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2691,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2710,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2709,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2708,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2711,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2716,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2728,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2745,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2761,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2760,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2756,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2759,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2772,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2771,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2770,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2774,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2657,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2655,
												"id": 2775,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2957,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2810,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2789
														],
														"declarations": [
															{
																"constant": false,
																"id": 2789,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2810,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2788,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2793,
														"initialValue": {
															"arguments": [
																{
																	"id": 2791,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2790,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2777,
																	2812
																],
																"referencedDeclaration": 2777,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2794,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2796,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2783,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2795,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2956,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1914_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2798,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2799,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2789,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2801,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2780,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2787,
														"id": 2809,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2778,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1914",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2781,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1914,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1914",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2957,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2821
												],
												"declarations": [
													{
														"constant": false,
														"id": 2821,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2820,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2823,
												"initialValue": {
													"hexValue": "30",
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2895,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2824,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2838,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2837,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2853,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2852,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2844,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2847,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2848,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2851,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2854,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2868,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2867,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2859,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2862,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2863,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2866,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2869,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2883,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2882,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2874,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2877,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2878,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2881,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2884,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2893,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2821,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2896,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2821,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2897,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2957,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2936,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2935,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2911
														],
														"declarations": [
															{
																"constant": false,
																"id": 2911,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2935,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2910,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2915,
														"initialValue": {
															"arguments": [
																{
																	"id": 2913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2902,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2912,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2899,
																	2937
																],
																"referencedDeclaration": 2899,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2916,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2911,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2918,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2905,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1914",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2917,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2956,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1914_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2920,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2923,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2921,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2911,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2922,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2924,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2926,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2902,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2932,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2909,
														"id": 2934,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2900,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1914",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2903,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1914,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1914",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2957,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2955,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2948,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2941,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1914",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1914",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2946,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2945,
												"id": 2954,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2938,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1914",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2939,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1914,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1914,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1914",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2957,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2958,
							"src": "203:14914:10",
							"usedErrors": [
								1909
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3062
						]
					},
					"id": 3063,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2960,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3062,
							"linearizedBaseContracts": [
								3062
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2970,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2963,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2971,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2965,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2974,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2973,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2963,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2969,
												"id": 2976,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2961,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2962,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2964,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2967,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 3062,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2988,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2981,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2989,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2983,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2992,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2991,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2987,
												"id": 2994,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2979,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2980,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2982,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2985,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 3062,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 3039,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3006,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3020,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3008,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3009,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3001,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3011,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3012,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3013,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3001,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3015,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3018,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3021,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3007,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3026,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3007,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3025,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3024,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3022,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3031,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2999,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3032,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3001,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3036,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3005,
												"id": 3038,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2998,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3000,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3003,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 3062,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3060,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 3059,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3050,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 3054,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 3053,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3043,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3048,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3047,
														"id": 3058,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3041,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3042,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 3062,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3063,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			}
		}
	}
}